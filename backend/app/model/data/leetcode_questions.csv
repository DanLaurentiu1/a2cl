Question_No,Name,Topic_tags,Acceptance_rate,Difficulty
1,Two Sum,"['Array', 'Hash Table']",54.10%,Easy
2,Add Two Numbers,"['Linked List', 'Math', 'Recursion']",44.50%,Medium
3,Longest Substring Without Repeating Characters,"['Hash Table', 'String', 'Sliding Window']",35.70%,Medium
4,Median of Two Sorted Arrays,"['Array', 'Binary Search', 'Divide and Conquer']",41.80%,Hard
5,Longest Palindromic Substring,"['Two Pointers', 'String', 'Dynamic Programming']",34.70%,Medium
6,Zigzag Conversion,['String'],49.70%,Medium
7,Reverse Integer,['Math'],29.30%,Medium
8,String to Integer (atoi),['String'],18.10%,Medium
9,Palindrome Number,['Math'],57.80%,Easy
10,Regular Expression Matching,"['String', 'Dynamic Programming', 'Recursion']",28.50%,Hard
11,Container With Most Water,"['Array', 'Two Pointers', 'Greedy']",56.40%,Medium
12,Integer to Roman,"['Hash Table', 'Math', 'String']",66.70%,Medium
13,Roman to Integer,"['Hash Table', 'Math', 'String']",63.10%,Easy
14,Longest Common Prefix,"['String', 'Trie']",44.10%,Easy
15,3Sum,"['Array', 'Two Pointers', 'Sorting']",35.60%,Medium
16,3Sum Closest,"['Array', 'Two Pointers', 'Sorting']",46.20%,Medium
17,Letter Combinations of a Phone Number,"['Hash Table', 'String', 'Backtracking']",62.10%,Medium
18,4Sum,"['Array', 'Two Pointers', 'Sorting']",36.90%,Medium
19,Remove Nth Node From End of List,"['Linked List', 'Two Pointers']",47.10%,Medium
20,Valid Parentheses,"['String', 'Stack']",41.30%,Easy
21,Merge Two Sorted Lists,"['Linked List', 'Recursion']",65.60%,Easy
22,Generate Parentheses,"['String', 'Dynamic Programming', 'Backtracking']",75.80%,Medium
23,Merge k Sorted Lists,"['Linked List', 'Divide and Conquer', 'Heap (Priority Queue)', 'Merge Sort']",54.60%,Hard
24,Swap Nodes in Pairs,"['Linked List', 'Recursion']",65.60%,Medium
25,Reverse Nodes in k-Group,"['Linked List', 'Recursion']",60.80%,Hard
26,Remove Duplicates from Sorted Array,"['Array', 'Two Pointers']",58.10%,Easy
27,Remove Element,"['Array', 'Two Pointers']",58.60%,Easy
28,Find the Index of the First Occurrence in a String,"['Two Pointers', 'String', 'String Matching']",43.70%,Easy
29,Divide Two Integers,"['Math', 'Bit Manipulation']",17.80%,Medium
30,Substring with Concatenation of All Words,"['Hash Table', 'String', 'Sliding Window']",32.50%,Hard
31,Next Permutation,"['Array', 'Two Pointers']",41.40%,Medium
32,Longest Valid Parentheses,"['String', 'Dynamic Programming', 'Stack']",35.00%,Hard
33,Search in Rotated Sorted Array,"['Array', 'Binary Search']",41.70%,Medium
34,Find First and Last Position of Element in Sorted Array,"['Array', 'Binary Search']",45.40%,Medium
35,Search Insert Position,"['Array', 'Binary Search']",47.50%,Easy
36,Valid Sudoku,"['Array', 'Hash Table', 'Matrix']",60.90%,Medium
37,Sudoku Solver,"['Array', 'Hash Table', 'Backtracking', 'Matrix']",63.30%,Hard
38,Count and Say,['String'],56.80%,Medium
39,Combination Sum,"['Array', 'Backtracking']",73.10%,Medium
40,Combination Sum II,"['Array', 'Backtracking']",56.60%,Medium
41,First Missing Positive,"['Array', 'Hash Table']",40.10%,Hard
42,Trapping Rain Water,"['Array', 'Two Pointers', 'Dynamic Programming', 'Stack', 'Monotonic Stack']",63.40%,Hard
43,Multiply Strings,"['Math', 'String', 'Simulation']",41.20%,Medium
44,Wildcard Matching,"['String', 'Dynamic Programming', 'Greedy', 'Recursion']",28.80%,Hard
45,Jump Game II,"['Array', 'Dynamic Programming', 'Greedy']",40.80%,Medium
46,Permutations,"['Array', 'Backtracking']",79.50%,Medium
47,Permutations II,"['Array', 'Backtracking']",60.30%,Medium
48,Rotate Image,"['Array', 'Math', 'Matrix']",76.20%,Medium
49,Group Anagrams,"['Array', 'Hash Table', 'String', 'Sorting']",69.70%,Medium
50,"Pow(x, n)","['Math', 'Recursion']",35.80%,Medium
51,N-Queens,"['Array', 'Backtracking']",70.40%,Hard
52,N-Queens II,['Backtracking'],75.20%,Hard
53,Maximum Subarray,"['Array', 'Divide and Conquer', 'Dynamic Programming']",51.30%,Medium
54,Spiral Matrix,"['Array', 'Matrix', 'Simulation']",51.80%,Medium
55,Jump Game,"['Array', 'Dynamic Programming', 'Greedy']",38.90%,Medium
56,Merge Intervals,"['Array', 'Sorting']",48.20%,Medium
57,Insert Interval,['Array'],42.40%,Medium
58,Length of Last Word,['String'],54.20%,Easy
59,Spiral Matrix II,"['Array', 'Matrix', 'Simulation']",72.30%,Medium
60,Permutation Sequence,"['Math', 'Recursion']",48.40%,Hard
61,Rotate List,"['Linked List', 'Two Pointers']",38.80%,Medium
62,Unique Paths,"['Math', 'Dynamic Programming', 'Combinatorics']",65.00%,Medium
63,Unique Paths II,"['Array', 'Dynamic Programming', 'Matrix']",42.30%,Medium
64,Minimum Path Sum,"['Array', 'Dynamic Programming', 'Matrix']",65.20%,Medium
65,Valid Number,['String'],20.50%,Hard
66,Plus One,"['Array', 'Math']",46.40%,Easy
67,Add Binary,"['Math', 'String', 'Bit Manipulation', 'Simulation']",54.50%,Easy
68,Text Justification,"['Array', 'String', 'Simulation']",45.70%,Hard
69,Sqrt(x),"['Math', 'Binary Search']",39.50%,Easy
70,Climbing Stairs,"['Math', 'Dynamic Programming', 'Memoization']",53.20%,Easy
71,Simplify Path,"['String', 'Stack']",44.80%,Medium
72,Edit Distance,"['String', 'Dynamic Programming']",57.60%,Medium
73,Set Matrix Zeroes,"['Array', 'Hash Table', 'Matrix']",57.80%,Medium
74,Search a 2D Matrix,"['Array', 'Binary Search', 'Matrix']",51.20%,Medium
75,Sort Colors,"['Array', 'Two Pointers', 'Sorting']",65.40%,Medium
76,Minimum Window Substring,"['Hash Table', 'String', 'Sliding Window']",44.00%,Hard
77,Combinations,['Backtracking'],71.50%,Medium
78,Subsets,"['Array', 'Backtracking', 'Bit Manipulation']",79.50%,Medium
79,Word Search,"['Array', 'String', 'Backtracking', 'Matrix', 'Depth-First Search']",43.90%,Medium
80,Remove Duplicates from Sorted Array II,"['Array', 'Two Pointers']",60.70%,Medium
81,Search in Rotated Sorted Array II,"['Array', 'Binary Search']",38.30%,Medium
82,Remove Duplicates from Sorted List II,"['Linked List', 'Two Pointers']",48.60%,Medium
83,Remove Duplicates from Sorted List,['Linked List'],53.70%,Easy
84,Largest Rectangle in Histogram,"['Array', 'Stack', 'Monotonic Stack']",45.80%,Hard
85,Maximal Rectangle,"['Array', 'Dynamic Programming', 'Stack', 'Matrix', 'Monotonic Stack']",52.00%,Hard
86,Partition List,"['Linked List', 'Two Pointers']",57.50%,Medium
87,Scramble String,"['String', 'Dynamic Programming']",41.00%,Hard
88,Merge Sorted Array,"['Array', 'Two Pointers', 'Sorting']",51.40%,Easy
89,Gray Code,"['Math', 'Backtracking', 'Bit Manipulation']",60.30%,Medium
90,Subsets II,"['Array', 'Backtracking', 'Bit Manipulation']",58.30%,Medium
91,Decode Ways,"['String', 'Dynamic Programming']",35.60%,Medium
92,Reverse Linked List II,['Linked List'],48.50%,Medium
93,Restore IP Addresses,"['String', 'Backtracking']",51.40%,Medium
94,Binary Tree Inorder Traversal,"['Stack', 'Tree', 'Depth-First Search', 'Binary Tree']",77.30%,Easy
95,Unique Binary Search Trees II,"['Dynamic Programming', 'Backtracking', 'Tree', 'Binary Search Tree', 'Binary Tree']",59.00%,Medium
96,Unique Binary Search Trees,"['Math', 'Dynamic Programming', 'Tree', 'Binary Search Tree', 'Binary Tree']",61.70%,Medium
97,Interleaving String,"['String', 'Dynamic Programming']",40.80%,Medium
98,Validate Binary Search Tree,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",33.60%,Medium
99,Recover Binary Search Tree,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",54.60%,Medium
100,Same Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",63.60%,Easy
101,Symmetric Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",57.80%,Easy
102,Binary Tree Level Order Traversal,"['Tree', 'Breadth-First Search', 'Binary Tree']",68.90%,Medium
103,Binary Tree Zigzag Level Order Traversal,"['Tree', 'Breadth-First Search', 'Binary Tree']",60.30%,Medium
104,Maximum Depth of Binary Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",76.30%,Easy
105,Construct Binary Tree from Preorder and Inorder Traversal,"['Array', 'Hash Table', 'Divide and Conquer', 'Tree', 'Binary Tree']",65.30%,Medium
106,Construct Binary Tree from Inorder and Postorder Traversal,"['Array', 'Hash Table', 'Divide and Conquer', 'Tree', 'Binary Tree']",64.60%,Medium
107,Binary Tree Level Order Traversal II,"['Tree', 'Breadth-First Search', 'Binary Tree']",64.60%,Medium
108,Convert Sorted Array to Binary Search Tree,"['Array', 'Divide and Conquer', 'Tree', 'Binary Search Tree', 'Binary Tree']",72.90%,Easy
109,Convert Sorted List to Binary Search Tree,"['Linked List', 'Divide and Conquer', 'Tree', 'Binary Search Tree', 'Binary Tree']",63.00%,Medium
110,Balanced Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",53.70%,Easy
111,Minimum Depth of Binary Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",49.20%,Easy
112,Path Sum,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",51.60%,Easy
113,Path Sum II,"['Backtracking', 'Tree', 'Depth-First Search', 'Binary Tree']",59.40%,Medium
114,Flatten Binary Tree to Linked List,"['Linked List', 'Stack', 'Tree', 'Depth-First Search', 'Binary Tree']",66.70%,Medium
115,Distinct Subsequences,"['String', 'Dynamic Programming']",48.60%,Hard
116,Populating Next Right Pointers in Each Node,"['Linked List', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",63.90%,Medium
117,Populating Next Right Pointers in Each Node II,"['Linked List', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",53.90%,Medium
118,Pascal's Triangle,"['Array', 'Dynamic Programming']",75.70%,Easy
119,Pascal's Triangle II,"['Array', 'Dynamic Programming']",64.90%,Easy
120,Triangle,"['Array', 'Dynamic Programming']",57.90%,Medium
121,Best Time to Buy and Sell Stock,"['Array', 'Dynamic Programming']",54.30%,Easy
122,Best Time to Buy and Sell Stock II,"['Array', 'Dynamic Programming', 'Greedy']",68.00%,Medium
123,Best Time to Buy and Sell Stock III,"['Array', 'Dynamic Programming']",49.50%,Hard
124,Binary Tree Maximum Path Sum,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Tree']",40.50%,Hard
125,Valid Palindrome,"['Two Pointers', 'String']",49.10%,Easy
126,Word Ladder II,"['Hash Table', 'String', 'Backtracking', 'Breadth-First Search']",27.10%,Hard
127,Word Ladder,"['Hash Table', 'String', 'Breadth-First Search']",40.80%,Hard
128,Longest Consecutive Sequence,"['Array', 'Hash Table', 'Union Find']",47.60%,Medium
129,Sum Root to Leaf Numbers,"['Tree', 'Depth-First Search', 'Binary Tree']",67.00%,Medium
130,Surrounded Regions,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",41.10%,Medium
131,Palindrome Partitioning,"['String', 'Dynamic Programming', 'Backtracking']",70.60%,Medium
132,Palindrome Partitioning II,"['String', 'Dynamic Programming']",34.40%,Hard
133,Clone Graph,"['Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Graph']",59.60%,Medium
134,Gas Station,"['Array', 'Greedy']",45.60%,Medium
135,Candy,"['Array', 'Greedy']",43.90%,Hard
136,Single Number,"['Array', 'Bit Manipulation']",74.50%,Easy
137,Single Number II,"['Array', 'Bit Manipulation']",64.00%,Medium
138,Copy List with Random Pointer,"['Hash Table', 'Linked List']",58.10%,Medium
139,Word Break,"['Array', 'Hash Table', 'String', 'Dynamic Programming', 'Trie', 'Memoization']",47.40%,Medium
140,Word Break II,"['Array', 'Hash Table', 'String', 'Dynamic Programming', 'Backtracking', 'Trie', 'Memoization']",52.10%,Hard
141,Linked List Cycle,"['Hash Table', 'Linked List', 'Two Pointers']",51.30%,Easy
142,Linked List Cycle II,"['Hash Table', 'Linked List', 'Two Pointers']",53.00%,Medium
143,Reorder List,"['Linked List', 'Two Pointers', 'Stack', 'Recursion']",60.50%,Medium
144,Binary Tree Preorder Traversal,"['Stack', 'Tree', 'Depth-First Search', 'Binary Tree']",71.20%,Easy
145,Binary Tree Postorder Traversal,"['Stack', 'Tree', 'Depth-First Search', 'Binary Tree']",73.90%,Easy
146,LRU Cache,"['Hash Table', 'Linked List', 'Design', 'Doubly-Linked List']",43.60%,Medium
147,Insertion Sort List,"['Linked List', 'Sorting']",54.90%,Medium
148,Sort List,"['Linked List', 'Two Pointers', 'Divide and Conquer', 'Sorting', 'Merge Sort']",59.90%,Medium
149,Max Points on a Line,"['Array', 'Hash Table', 'Math', 'Geometry']",27.80%,Hard
150,Evaluate Reverse Polish Notation,"['Array', 'Math', 'Stack']",53.10%,Medium
151,Reverse Words in a String,"['Two Pointers', 'String']",47.30%,Medium
152,Maximum Product Subarray,"['Array', 'Dynamic Programming']",34.10%,Medium
153,Find Minimum in Rotated Sorted Array,"['Array', 'Binary Search']",51.60%,Medium
154,Find Minimum in Rotated Sorted Array II,"['Array', 'Binary Search']",43.80%,Hard
155,Min Stack,"['Stack', 'Design']",55.20%,Medium
156,Binary Tree Upside Down,"['Tree', 'Depth-First Search', 'Binary Tree']",63.50%,Medium
157,Read N Characters Given Read4,"['Array', 'Simulation', 'Interactive']",41.90%,Easy
158,Read N Characters Given read4 II - Call Multiple Times,"['Array', 'Simulation', 'Interactive']",42.60%,Hard
159,Longest Substring with At Most Two Distinct Characters,"['Hash Table', 'String', 'Sliding Window']",55.80%,Medium
160,Intersection of Two Linked Lists,"['Hash Table', 'Linked List', 'Two Pointers']",59.20%,Easy
161,One Edit Distance,"['Two Pointers', 'String']",34.40%,Medium
162,Find Peak Element,"['Array', 'Binary Search']",46.10%,Medium
163,Missing Ranges,['Array'],34.40%,Easy
164,Maximum Gap,"['Array', 'Sorting', 'Bucket Sort', 'Radix Sort']",47.60%,Medium
165,Compare Version Numbers,"['Two Pointers', 'String']",41.50%,Medium
166,Fraction to Recurring Decimal,"['Hash Table', 'Math', 'String']",25.50%,Medium
167,Two Sum II - Input Array Is Sorted,"['Array', 'Two Pointers', 'Binary Search']",62.30%,Medium
168,Excel Sheet Column Title,"['Math', 'String']",42.00%,Easy
169,Majority Element,"['Array', 'Hash Table', 'Divide and Conquer', 'Sorting', 'Counting']",65.30%,Easy
170,Two Sum III - Data structure design,"['Array', 'Hash Table', 'Two Pointers']",38.40%,Easy
171,Excel Sheet Column Number,"['Math', 'String']",64.70%,Easy
172,Factorial Trailing Zeroes,['Math'],44.00%,Medium
173,Binary Search Tree Iterator,"['Stack', 'Tree', 'Design', 'Binary Search Tree', 'Binary Tree', 'Iterator']",73.40%,Medium
174,Dungeon Game,"['Array', 'Dynamic Programming', 'Matrix']",38.60%,Hard
175,Combine Two Tables,['Database'],77.00%,Easy
176,Second Highest Salary,['Database'],42.00%,Medium
177,Nth Highest Salary,['Database'],38.00%,Medium
178,Rank Scores,['Database'],63.70%,Medium
179,Largest Number,"['Array', 'String', 'Greedy', 'Sorting']",40.20%,Medium
180,Consecutive Numbers,['Database'],44.40%,Medium
181,Employees Earning More Than Their Managers,['Database'],70.50%,Easy
182,Duplicate Emails,['Database'],71.70%,Easy
183,Customers Who Never Order,['Database'],69.80%,Easy
184,Department Highest Salary,['Database'],53.00%,Medium
185,Department Top Three Salaries,['Database'],55.60%,Hard
186,Reverse Words in a String II,"['Two Pointers', 'String']",55.30%,Medium
187,Repeated DNA Sequences,"['Hash Table', 'String', 'Bit Manipulation', 'Sliding Window', 'Rolling Hash', 'Hash Function']",49.90%,Medium
188,Best Time to Buy and Sell Stock IV,"['Array', 'Dynamic Programming']",44.90%,Hard
189,Rotate Array,"['Array', 'Math', 'Two Pointers']",41.80%,Medium
190,Reverse Bits,"['Divide and Conquer', 'Bit Manipulation']",60.70%,Easy
191,Number of 1 Bits,"['Divide and Conquer', 'Bit Manipulation']",72.80%,Easy
192,Word Frequency,['Shell'],26.10%,Medium
193,Valid Phone Numbers,['Shell'],26.50%,Easy
194,Transpose File,['Shell'],26.90%,Medium
195,Tenth Line,['Shell'],33.70%,Easy
196,Delete Duplicate Emails,['Database'],63.20%,Easy
197,Rising Temperature,['Database'],49.20%,Easy
198,House Robber,"['Array', 'Dynamic Programming']",51.60%,Medium
199,Binary Tree Right Side View,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",64.10%,Medium
200,Number of Islands,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",60.70%,Medium
201,Bitwise AND of Numbers Range,['Bit Manipulation'],47.30%,Medium
202,Happy Number,"['Hash Table', 'Math', 'Two Pointers']",57.00%,Easy
203,Remove Linked List Elements,"['Linked List', 'Recursion']",50.20%,Easy
204,Count Primes,"['Array', 'Math', 'Enumeration', 'Number Theory']",34.10%,Medium
205,Isomorphic Strings,"['Hash Table', 'String']",45.90%,Easy
206,Reverse Linked List,"['Linked List', 'Recursion']",77.90%,Easy
207,Course Schedule,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",47.70%,Medium
208,Implement Trie (Prefix Tree),"['Hash Table', 'String', 'Design', 'Trie']",66.70%,Medium
209,Minimum Size Subarray Sum,"['Array', 'Binary Search', 'Sliding Window', 'Prefix Sum']",48.00%,Medium
210,Course Schedule II,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",51.80%,Medium
211,Design Add and Search Words Data Structure,"['String', 'Depth-First Search', 'Design', 'Trie']",46.10%,Medium
212,Word Search II,"['Array', 'String', 'Backtracking', 'Trie', 'Matrix']",36.70%,Hard
213,House Robber II,"['Array', 'Dynamic Programming']",42.70%,Medium
214,Shortest Palindrome,"['String', 'Rolling Hash', 'String Matching', 'Hash Function']",39.90%,Hard
215,Kth Largest Element in an Array,"['Array', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Quickselect']",67.20%,Medium
216,Combination Sum III,"['Array', 'Backtracking']",70.80%,Medium
217,Contains Duplicate,"['Array', 'Hash Table', 'Sorting']",62.40%,Easy
218,The Skyline Problem,"['Array', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Line Sweep', 'Heap (Priority Queue)', 'Ordered Set']",43.20%,Hard
219,Contains Duplicate II,"['Array', 'Hash Table', 'Sliding Window']",46.90%,Easy
220,Contains Duplicate III,"['Array', 'Sliding Window', 'Sorting', 'Bucket Sort', 'Ordered Set']",23.10%,Hard
221,Maximal Square,"['Array', 'Dynamic Programming', 'Matrix']",47.60%,Medium
222,Count Complete Tree Nodes,"['Binary Search', 'Bit Manipulation', 'Tree', 'Binary Tree']",67.70%,Easy
223,Rectangle Area,"['Math', 'Geometry']",46.80%,Medium
224,Basic Calculator,"['Math', 'String', 'Stack', 'Recursion']",44.10%,Hard
225,Implement Stack using Queues,"['Stack', 'Design', 'Queue']",65.60%,Easy
226,Invert Binary Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",78.10%,Easy
227,Basic Calculator II,"['Math', 'String', 'Stack']",44.50%,Medium
228,Summary Ranges,['Array'],51.90%,Easy
229,Majority Element II,"['Array', 'Hash Table', 'Sorting', 'Counting']",52.90%,Medium
230,Kth Smallest Element in a BST,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",74.00%,Medium
231,Power of Two,"['Math', 'Bit Manipulation', 'Recursion']",48.00%,Easy
232,Implement Queue using Stacks,"['Stack', 'Design', 'Queue']",67.20%,Easy
233,Number of Digit One,"['Math', 'Dynamic Programming', 'Recursion']",35.10%,Hard
234,Palindrome Linked List,"['Linked List', 'Two Pointers', 'Stack', 'Recursion']",54.40%,Easy
235,Lowest Common Ancestor of a Binary Search Tree,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",66.40%,Medium
236,Lowest Common Ancestor of a Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",64.30%,Medium
237,Delete Node in a Linked List,['Linked List'],81.00%,Medium
238,Product of Array Except Self,"['Array', 'Prefix Sum']",66.90%,Medium
239,Sliding Window Maximum,"['Array', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Monotonic Queue']",46.90%,Hard
240,Search a 2D Matrix II,"['Array', 'Binary Search', 'Divide and Conquer', 'Matrix']",53.70%,Medium
241,Different Ways to Add Parentheses,"['Math', 'String', 'Dynamic Programming', 'Recursion', 'Memoization']",71.80%,Medium
242,Valid Anagram,"['Hash Table', 'String', 'Sorting']",65.50%,Easy
243,Shortest Word Distance,"['Array', 'String']",65.60%,Easy
244,Shortest Word Distance II,"['Array', 'Hash Table', 'Two Pointers']",61.50%,Medium
245,Shortest Word Distance III,"['Array', 'String']",58.70%,Medium
246,Strobogrammatic Number,"['Hash Table', 'Two Pointers', 'String']",47.70%,Easy
247,Strobogrammatic Number II,"['Array', 'String', 'Recursion']",52.70%,Medium
248,Strobogrammatic Number III,"['Array', 'String', 'Recursion']",42.30%,Hard
249,Group Shifted Strings,"['Array', 'Hash Table', 'String']",66.30%,Medium
250,Count Univalue Subtrees,"['Tree', 'Depth-First Search', 'Binary Tree']",56.70%,Medium
251,Flatten 2D Vector,"['Array', 'Two Pointers', 'Design']",49.70%,Medium
252,Meeting Rooms,"['Array', 'Sorting']",58.50%,Easy
253,Meeting Rooms II,"['Array', 'Two Pointers', 'Greedy']",51.60%,Medium
254,Factor Combinations,['Backtracking'],49.90%,Medium
255,Verify Preorder Sequence in Binary Search Tree,"['Array', 'Stack', 'Tree']",50.30%,Medium
256,Paint House,"['Array', 'Dynamic Programming']",63.00%,Medium
257,Binary Tree Paths,"['String', 'Backtracking', 'Tree', 'Depth-First Search', 'Binary Tree']",65.00%,Easy
258,Add Digits,"['Math', 'Simulation', 'Number Theory']",67.30%,Easy
259,3Sum Smaller,"['Array', 'Two Pointers', 'Binary Search']",50.90%,Medium
260,Single Number III,"['Array', 'Bit Manipulation']",70.80%,Medium
261,Graph Valid Tree,"['Depth-First Search']",48.70%,Medium
262,Trips and Users,['Database'],36.60%,Hard
263,Ugly Number,['Math'],42.20%,Easy
264,Ugly Number II,"['Hash Table', 'Math', 'Dynamic Programming', 'Heap (Priority Queue)']",49.10%,Medium
265,Paint House II,"['Array', 'Dynamic Programming']",55.70%,Hard
266,Palindrome Permutation,"['Hash Table', 'String', 'Bit Manipulation']",67.80%,Easy
267,Palindrome Permutation II,"['Hash Table', 'String', 'Backtracking']",41.90%,Medium
268,Missing Number,"['Array', 'Hash Table', 'Math', 'Binary Search', 'Bit Manipulation', 'Sorting']",68.40%,Easy
269,Alien Dictionary,"['Array', 'String', 'Depth-First Search']",36.10%,Hard
270,Closest Binary Search Tree Value,"['Binary Search', 'Tree']",50.80%,Easy
271,Encode and Decode Strings,"['Array', 'String', 'Design']",48.00%,Medium
272,Closest Binary Search Tree Value II,"['Two Pointers', 'Stack', 'Tree']",59.60%,Hard
273,Integer to English Words,"['Math', 'String', 'Recursion']",34.10%,Hard
274,H-Index,"['Array', 'Sorting', 'Counting Sort']",39.50%,Medium
275,H-Index II,"['Array', 'Binary Search']",38.50%,Medium
276,Paint Fence,['Dynamic Programming'],47.20%,Medium
277,Find the Celebrity,"['Two Pointers', 'Graph', 'Interactive']",47.70%,Medium
278,First Bad Version,"['Binary Search', 'Interactive']",45.10%,Easy
279,Perfect Squares,"['Math', 'Dynamic Programming', 'Breadth-First Search']",55.20%,Medium
280,Wiggle Sort,"['Array', 'Greedy', 'Sorting']",67.90%,Medium
281,Zigzag Iterator,"['Array', 'Design', 'Queue']",64.60%,Medium
282,Expression Add Operators,"['Math', 'String', 'Backtracking']",40.40%,Hard
283,Move Zeroes,"['Array', 'Two Pointers']",62.20%,Easy
284,Peeking Iterator,"['Array', 'Design', 'Iterator']",60.00%,Medium
285,Inorder Successor in BST,"['Tree', 'Depth-First Search']",50.20%,Medium
286,Walls and Gates,"['Array', 'Breadth-First Search', 'Matrix']",62.10%,Medium
287,Find the Duplicate Number,"['Array', 'Two Pointers', 'Binary Search', 'Bit Manipulation']",61.80%,Medium
288,Unique Word Abbreviation,"['Array', 'Hash Table', 'String']",26.60%,Medium
289,Game of Life,"['Array', 'Matrix', 'Simulation']",70.30%,Medium
290,Word Pattern,"['Hash Table', 'String']",42.50%,Easy
291,Word Pattern II,"['Hash Table', 'String', 'Backtracking']",48.40%,Medium
292,Nim Game,"['Math', 'Brainteaser', 'Game Theory']",57.40%,Easy
293,Flip Game,['String'],64.70%,Easy
294,Flip Game II,"['Math', 'Dynamic Programming']",52.10%,Medium
295,Find Median from Data Stream,"['Two Pointers', 'Design', 'Sorting', 'Heap (Priority Queue)', 'Data Stream']",52.50%,Hard
296,Best Meeting Point,"['Array', 'Math', 'Sorting']",61.00%,Hard
297,Serialize and Deserialize Binary Tree,"['String', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design', 'Binary Tree']",57.70%,Hard
298,Binary Tree Longest Consecutive Sequence,"['Tree', 'Depth-First Search', 'Binary Tree']",53.80%,Medium
299,Bulls and Cows,"['Hash Table', 'String', 'Counting']",50.70%,Medium
300,Longest Increasing Subsequence,"['Array', 'Binary Search', 'Dynamic Programming']",56.60%,Medium
301,Remove Invalid Parentheses,"['String', 'Backtracking', 'Breadth-First Search']",48.70%,Hard
302,Smallest Rectangle Enclosing Black Pixels,"['Array', 'Binary Search']",59.20%,Hard
303,Range Sum Query - Immutable,"['Array', 'Design', 'Prefix Sum']",65.60%,Easy
304,Range Sum Query 2D - Immutable,"['Array', 'Design', 'Matrix', 'Prefix Sum']",55.40%,Medium
305,Number of Islands II,"['Array', 'Hash Table', 'Union Find']",39.90%,Hard
306,Additive Number,"['String', 'Backtracking']",32.10%,Medium
307,Range Sum Query - Mutable,"['Array', 'Design', 'Binary Indexed Tree', 'Segment Tree']",41.30%,Medium
308,Range Sum Query 2D - Mutable,"['Array', 'Design', 'Binary Indexed Tree']",44.40%,Hard
309,Best Time to Buy and Sell Stock with Cooldown,"['Array', 'Dynamic Programming']",59.30%,Medium
310,Minimum Height Trees,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",41.90%,Medium
311,Sparse Matrix Multiplication,"['Array', 'Hash Table', 'Matrix']",68.40%,Medium
312,Burst Balloons,"['Array', 'Dynamic Programming']",60.10%,Hard
313,Super Ugly Number,"['Array', 'Math', 'Dynamic Programming']",45.40%,Medium
314,Binary Tree Vertical Order Traversal,"['Hash Table', 'Tree']",55.60%,Medium
315,Count of Smaller Numbers After Self,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",42.60%,Hard
316,Remove Duplicate Letters,"['String', 'Stack', 'Greedy', 'Monotonic Stack']",50.30%,Medium
317,Shortest Distance from All Buildings,"['Array', 'Breadth-First Search', 'Matrix']",43.50%,Hard
318,Maximum Product of Word Lengths,"['Array', 'String', 'Bit Manipulation']",60.30%,Medium
319,Bulb Switcher,"['Math', 'Brainteaser']",53.30%,Medium
320,Generalized Abbreviation,"['String', 'Backtracking', 'Bit Manipulation']",59.80%,Medium
321,Create Maximum Number,"['Array', 'Two Pointers', 'Stack', 'Greedy', 'Monotonic Stack']",31.10%,Hard
322,Coin Change,"['Array', 'Dynamic Programming', 'Breadth-First Search']",45.10%,Medium
323,Number of Connected Components in an Undirected Graph,"['Depth-First Search']",63.40%,Medium
324,Wiggle Sort II,"['Array', 'Divide and Conquer', 'Greedy', 'Sorting', 'Quickselect']",34.90%,Medium
325,Maximum Size Subarray Sum Equals k,"['Array', 'Hash Table', 'Prefix Sum']",49.70%,Medium
326,Power of Three,"['Math', 'Recursion']",47.20%,Easy
327,Count of Range Sum,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",36.20%,Hard
328,Odd Even Linked List,['Linked List'],61.70%,Medium
329,Longest Increasing Path in a Matrix,"['Array', 'Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort', 'Memoization', 'Matrix']",54.30%,Hard
330,Patching Array,"['Array', 'Greedy']",53.20%,Hard
331,Verify Preorder Serialization of a Binary Tree,"['String', 'Stack', 'Tree', 'Binary Tree']",45.60%,Medium
332,Reconstruct Itinerary,"['Depth-First Search', 'Graph', 'Eulerian Circuit']",43.30%,Hard
333,Largest BST Subtree,"['Dynamic Programming', 'Tree']",44.70%,Medium
334,Increasing Triplet Subsequence,"['Array', 'Greedy']",39.30%,Medium
335,Self Crossing,"['Array', 'Math', 'Geometry']",31.10%,Hard
336,Palindrome Pairs,"['Array', 'Hash Table', 'String', 'Trie']",35.70%,Hard
337,House Robber III,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Tree']",54.50%,Medium
338,Counting Bits,"['Dynamic Programming', 'Bit Manipulation']",79.00%,Easy
339,Nested List Weight Sum,"['Depth-First Search', 'Breadth-First Search']",84.60%,Medium
340,Longest Substring with At Most K Distinct Characters,"['Hash Table', 'String', 'Sliding Window']",49.10%,Medium
341,Flatten Nested List Iterator,"['Stack', 'Tree', 'Depth-First Search', 'Design', 'Queue', 'Iterator']",64.90%,Medium
342,Power of Four,"['Math', 'Bit Manipulation', 'Recursion']",48.60%,Easy
343,Integer Break,"['Math', 'Dynamic Programming']",60.70%,Medium
344,Reverse String,"['Two Pointers', 'String']",79.20%,Easy
345,Reverse Vowels of a String,"['Two Pointers', 'String']",55.10%,Easy
346,Moving Average from Data Stream,"['Array', 'Design', 'Queue']",79.00%,Easy
347,Top K Frequent Elements,"['Array', 'Hash Table', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Bucket Sort', 'Counting', 'Quickselect']",63.50%,Medium
348,Design Tic-Tac-Toe,"['Array', 'Hash Table', 'Design']",58.20%,Medium
349,Intersection of Two Arrays,"['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Sorting']",75.50%,Easy
350,Intersection of Two Arrays II,"['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Sorting']",58.70%,Easy
351,Android Unlock Patterns,"['Dynamic Programming', 'Backtracking']",53.00%,Medium
352,Data Stream as Disjoint Intervals,"['Binary Search', 'Design', 'Ordered Set']",60.20%,Hard
353,Design Snake Game,"['Array', 'Hash Table', 'Design']",38.90%,Medium
354,Russian Doll Envelopes,"['Array', 'Binary Search', 'Dynamic Programming', 'Sorting']",37.10%,Hard
355,Design Twitter,"['Hash Table', 'Linked List', 'Design', 'Heap (Priority Queue)']",40.90%,Medium
356,Line Reflection,"['Array', 'Hash Table', 'Math']",35.80%,Medium
357,Count Numbers with Unique Digits,"['Math', 'Dynamic Programming', 'Backtracking']",53.40%,Medium
358,Rearrange String k Distance Apart,"['Hash Table', 'String', 'Greedy']",39.10%,Hard
359,Logger Rate Limiter,"['Hash Table', 'Design', 'Data Stream']",76.20%,Easy
360,Sort Transformed Array,"['Array', 'Math', 'Two Pointers']",56.20%,Medium
361,Bomb Enemy,"['Array', 'Dynamic Programming', 'Matrix']",51.90%,Medium
362,Design Hit Counter,"['Array', 'Binary Search', 'Design']",68.90%,Medium
363,Max Sum of Rectangle No Larger Than K,"['Array', 'Binary Search', 'Matrix', 'Prefix Sum', 'Ordered Set']",44.30%,Hard
364,Nested List Weight Sum II,"['Stack', 'Depth-First Search']",64.50%,Medium
365,Water and Jug Problem,"['Math', 'Depth-First Search', 'Breadth-First Search']",41.90%,Medium
366,Find Leaves of Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",80.80%,Medium
367,Valid Perfect Square,"['Math', 'Binary Search']",43.90%,Easy
368,Largest Divisible Subset,"['Array', 'Math', 'Dynamic Programming', 'Sorting']",45.70%,Medium
369,Plus One Linked List,"['Linked List', 'Math']",61.10%,Medium
370,Range Addition,"['Array', 'Prefix Sum']",71.90%,Medium
371,Sum of Two Integers,"['Math', 'Bit Manipulation']",52.70%,Medium
372,Super Pow,"['Math', 'Divide and Conquer']",35.10%,Medium
373,Find K Pairs with Smallest Sums,"['Array', 'Heap (Priority Queue)']",40.20%,Medium
374,Guess Number Higher or Lower,"['Binary Search', 'Interactive']",54.40%,Easy
375,Guess Number Higher or Lower II,"['Math', 'Dynamic Programming', 'Game Theory']",50.10%,Medium
376,Wiggle Subsequence,"['Array', 'Dynamic Programming', 'Greedy']",48.60%,Medium
377,Combination Sum IV,"['Array', 'Dynamic Programming']",54.40%,Medium
378,Kth Smallest Element in a Sorted Matrix,"['Array', 'Binary Search', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",62.90%,Medium
379,Design Phone Directory,"['Array', 'Hash Table', 'Linked List']",52.00%,Medium
380,Insert Delete GetRandom O(1),"['Array', 'Hash Table', 'Math', 'Design', 'Randomized']",54.70%,Medium
381,Insert Delete GetRandom O(1) - Duplicates allowed,"['Array', 'Hash Table', 'Math', 'Design', 'Randomized']",35.60%,Hard
382,Linked List Random Node,"['Linked List', 'Math', 'Reservoir Sampling', 'Randomized']",63.50%,Medium
383,Ransom Note,"['Hash Table', 'String', 'Counting']",63.00%,Easy
384,Shuffle an Array,"['Array', 'Math', 'Randomized']",58.60%,Medium
385,Mini Parser,"['String', 'Stack', 'Depth-First Search']",39.00%,Medium
386,Lexicographical Numbers,"['Depth-First Search', 'Trie']",72.70%,Medium
387,First Unique Character in a String,"['Hash Table', 'String', 'Queue', 'Counting']",62.70%,Easy
388,Longest Absolute File Path,"['String', 'Stack', 'Depth-First Search']",47.90%,Medium
389,Find the Difference,"['Hash Table', 'String', 'Bit Manipulation', 'Sorting']",59.50%,Easy
390,Elimination Game,"['Math', 'Recursion']",45.70%,Medium
391,Perfect Rectangle,"['Array', 'Line Sweep']",34.20%,Hard
392,Is Subsequence,"['Two Pointers', 'String', 'Dynamic Programming']",48.10%,Easy
393,UTF-8 Validation,"['Array', 'Bit Manipulation']",45.30%,Medium
394,Decode String,"['String', 'Stack', 'Recursion']",60.10%,Medium
395,Longest Substring with At Least K Repeating Characters,"['Hash Table', 'String', 'Divide and Conquer', 'Sliding Window']",45.10%,Medium
396,Rotate Function,"['Array', 'Math', 'Dynamic Programming']",43.10%,Medium
397,Integer Replacement,"['Dynamic Programming', 'Greedy', 'Bit Manipulation', 'Memoization']",36.10%,Medium
398,Random Pick Index,"['Hash Table', 'Math', 'Reservoir Sampling', 'Randomized']",63.90%,Medium
399,Evaluate Division,"['Array', 'String', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph', 'Shortest Path']",62.30%,Medium
400,Nth Digit,"['Math', 'Binary Search']",35.20%,Medium
401,Binary Watch,"['Backtracking', 'Bit Manipulation']",55.40%,Easy
402,Remove K Digits,"['String', 'Stack', 'Greedy', 'Monotonic Stack']",34.00%,Medium
403,Frog Jump,"['Array', 'Dynamic Programming']",46.30%,Hard
404,Sum of Left Leaves,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",61.10%,Easy
405,Convert a Number to Hexadecimal,"['Math', 'Bit Manipulation']",49.50%,Easy
406,Queue Reconstruction by Height,"['Array', 'Binary Indexed Tree', 'Segment Tree', 'Sorting']",73.80%,Medium
407,Trapping Rain Water II,"['Array', 'Breadth-First Search', 'Heap (Priority Queue)', 'Matrix']",48.50%,Hard
408,Valid Word Abbreviation,"['Two Pointers', 'String']",36.30%,Easy
409,Longest Palindrome,"['Hash Table', 'String', 'Greedy']",55.40%,Easy
410,Split Array Largest Sum,"['Array', 'Binary Search', 'Dynamic Programming', 'Greedy', 'Prefix Sum']",56.70%,Hard
411,Minimum Unique Word Abbreviation,"['Array', 'String', 'Backtracking']",39.90%,Hard
412,Fizz Buzz,"['Math', 'String', 'Simulation']",73.20%,Easy
413,Arithmetic Slices,"['Array', 'Dynamic Programming', 'Sliding Window']",65.00%,Medium
414,Third Maximum Number,"['Array', 'Sorting']",35.90%,Easy
415,Add Strings,"['Math', 'String', 'Simulation']",51.60%,Easy
416,Partition Equal Subset Sum,"['Array', 'Dynamic Programming']",46.90%,Medium
417,Pacific Atlantic Water Flow,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",56.20%,Medium
418,Sentence Screen Fitting,"['Array', 'String', 'Dynamic Programming']",36.30%,Medium
419,Battleships in a Board,"['Array', 'Depth-First Search', 'Matrix']",75.90%,Medium
420,Strong Password Checker,"['String', 'Greedy', 'Heap (Priority Queue)']",14.10%,Hard
421,Maximum XOR of Two Numbers in an Array,"['Array', 'Hash Table', 'Bit Manipulation', 'Trie']",53.30%,Medium
422,Valid Word Square,"['Array', 'Matrix']",41.50%,Easy
423,Reconstruct Original Digits from English,"['Hash Table', 'Math', 'String']",51.30%,Medium
424,Longest Repeating Character Replacement,"['Hash Table', 'String', 'Sliding Window']",55.60%,Medium
425,Word Squares,"['Array', 'String', 'Backtracking']",53.60%,Hard
426,Convert Binary Search Tree to Sorted Doubly Linked List,"['Linked List', 'Stack', 'Tree']",65.10%,Medium
427,Construct Quad Tree,"['Array', 'Divide and Conquer', 'Tree', 'Matrix']",76.20%,Medium
428,Serialize and Deserialize N-ary Tree,"['String', 'Tree', 'Depth-First Search']",67.70%,Hard
429,N-ary Tree Level Order Traversal,"['Tree', 'Breadth-First Search']",71.00%,Medium
430,Flatten a Multilevel Doubly Linked List,"['Linked List', 'Depth-First Search', 'Doubly-Linked List']",60.60%,Medium
431,Encode N-ary Tree to Binary Tree,"['Tree', 'Depth-First Search']",79.80%,Hard
432,All O`one Data Structure,"['Hash Table', 'Linked List', 'Design', 'Doubly-Linked List']",45.20%,Hard
433,Minimum Genetic Mutation,"['Hash Table', 'String', 'Breadth-First Search']",54.60%,Medium
434,Number of Segments in a String,['String'],36.30%,Easy
435,Non-overlapping Intervals,"['Array', 'Dynamic Programming', 'Greedy', 'Sorting']",54.30%,Medium
436,Find Right Interval,"['Array', 'Binary Search', 'Sorting']",52.90%,Medium
437,Path Sum III,"['Tree', 'Depth-First Search', 'Binary Tree']",46.10%,Medium
438,Find All Anagrams in a String,"['Hash Table', 'String', 'Sliding Window']",51.40%,Medium
439,Ternary Expression Parser,"['String', 'Stack', 'Recursion']",61.40%,Medium
440,K-th Smallest in Lexicographical Order,['Trie'],42.00%,Hard
441,Arranging Coins,"['Math', 'Binary Search']",46.90%,Easy
442,Find All Duplicates in an Array,"['Array', 'Hash Table']",76.00%,Medium
443,String Compression,"['Two Pointers', 'String']",56.10%,Medium
444,Sequence Reconstruction,"['Array', 'Graph', 'Topological Sort']",28.70%,Medium
445,Add Two Numbers II,"['Linked List', 'Math', 'Stack']",61.50%,Medium
446,Arithmetic Slices II - Subsequence,"['Array', 'Dynamic Programming']",54.60%,Hard
447,Number of Boomerangs,"['Array', 'Hash Table', 'Math']",55.90%,Medium
448,Find All Numbers Disappeared in an Array,"['Array', 'Hash Table']",61.50%,Easy
449,Serialize and Deserialize BST,"['String', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design', 'Binary Search Tree', 'Binary Tree']",58.00%,Medium
450,Delete Node in a BST,"['Tree', 'Binary Search Tree', 'Binary Tree']",52.20%,Medium
451,Sort Characters By Frequency,"['Hash Table', 'String', 'Sorting', 'Heap (Priority Queue)', 'Bucket Sort', 'Counting']",73.20%,Medium
452,Minimum Number of Arrows to Burst Balloons,"['Array', 'Greedy', 'Sorting']",59.50%,Medium
453,Minimum Moves to Equal Array Elements,"['Array', 'Math']",57.20%,Medium
454,4Sum II,"['Array', 'Hash Table']",57.40%,Medium
455,Assign Cookies,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",53.20%,Easy
456,132 Pattern,"['Array', 'Binary Search', 'Stack', 'Monotonic Stack', 'Ordered Set']",33.80%,Medium
457,Circular Array Loop,"['Array', 'Hash Table', 'Two Pointers']",34.70%,Medium
458,Poor Pigs,"['Math', 'Dynamic Programming', 'Combinatorics']",59.50%,Hard
459,Repeated Substring Pattern,"['String', 'String Matching']",46.40%,Easy
460,LFU Cache,"['Hash Table', 'Linked List', 'Design', 'Doubly-Linked List']",45.10%,Hard
461,Hamming Distance,['Bit Manipulation'],75.70%,Easy
462,Minimum Moves to Equal Array Elements II,"['Array', 'Math', 'Sorting']",60.40%,Medium
463,Island Perimeter,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",73.20%,Easy
464,Can I Win,"['Math', 'Dynamic Programming', 'Bit Manipulation', 'Memoization', 'Game Theory', 'Bitmask']",29.90%,Medium
465,Optimal Account Balancing,"['Array', 'Dynamic Programming']",49.70%,Hard
466,Count The Repetitions,"['String', 'Dynamic Programming']",30.80%,Hard
467,Unique Substrings in Wraparound String,"['String', 'Dynamic Programming']",40.40%,Medium
468,Validate IP Address,['String'],27.50%,Medium
469,Convex Polygon,"['Array', 'Math', 'Geometry']",39.70%,Medium
470,Implement Rand10() Using Rand7(),"['Math', 'Rejection Sampling', 'Randomized', 'Probability and Statistics']",45.90%,Medium
471,Encode String with Shortest Length,"['String', 'Dynamic Programming']",50.50%,Hard
472,Concatenated Words,"['Array', 'String', 'Dynamic Programming', 'Depth-First Search', 'Trie']",49.30%,Hard
473,Matchsticks to Square,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",40.50%,Medium
474,Ones and Zeroes,"['Array', 'String', 'Dynamic Programming']",48.10%,Medium
475,Heaters,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",38.80%,Medium
476,Number Complement,['Bit Manipulation'],70.30%,Easy
477,Total Hamming Distance,"['Array', 'Math', 'Bit Manipulation']",53.20%,Medium
478,Generate Random Point in a Circle,"['Math', 'Geometry', 'Rejection Sampling', 'Randomized']",40.20%,Medium
479,Largest Palindrome Product,"['Math', 'Enumeration']",34.00%,Hard
480,Sliding Window Median,"['Array', 'Hash Table', 'Sliding Window', 'Heap (Priority Queue)']",38.80%,Hard
481,Magical String,"['Two Pointers', 'String']",51.80%,Medium
482,License Key Formatting,['String'],44.20%,Easy
483,Smallest Good Base,"['Math', 'Binary Search']",42.00%,Hard
484,Find Permutation,"['Array', 'String', 'Stack']",67.00%,Medium
485,Max Consecutive Ones,['Array'],60.90%,Easy
486,Predict the Winner,"['Array', 'Math', 'Dynamic Programming', 'Recursion', 'Game Theory']",55.50%,Medium
487,Max Consecutive Ones II,"['Array', 'Dynamic Programming']",50.70%,Medium
488,Zuma Game,"['String', 'Dynamic Programming', 'Stack', 'Breadth-First Search', 'Memoization']",32.20%,Hard
489,Robot Room Cleaner,"['Backtracking', 'Interactive']",76.90%,Hard
490,The Maze,"['Array', 'Depth-First Search']",58.60%,Medium
491,Non-decreasing Subsequences,"['Array', 'Hash Table', 'Backtracking', 'Bit Manipulation']",61.20%,Medium
492,Construct the Rectangle,['Math'],59.00%,Easy
493,Reverse Pairs,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",31.30%,Hard
494,Target Sum,"['Array', 'Dynamic Programming', 'Backtracking']",47.70%,Medium
495,Teemo Attacking,"['Array', 'Simulation']",56.80%,Easy
496,Next Greater Element I,"['Array', 'Hash Table', 'Stack', 'Monotonic Stack']",73.30%,Easy
497,Random Point in Non-overlapping Rectangles,"['Array', 'Math', 'Binary Search', 'Reservoir Sampling', 'Prefix Sum', 'Ordered Set', 'Randomized']",40.30%,Medium
498,Diagonal Traverse,"['Array', 'Matrix', 'Simulation']",61.40%,Medium
499,The Maze III,"['Array', 'String', 'Depth-First Search']",49.60%,Hard
500,Keyboard Row,"['Array', 'Hash Table', 'String']",71.50%,Easy
501,Find Mode in Binary Search Tree,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",56.70%,Easy
502,IPO,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",53.00%,Hard
503,Next Greater Element II,"['Array', 'Stack', 'Monotonic Stack']",64.90%,Medium
504,Base 7,['Math'],50.90%,Easy
505,The Maze II,"['Array', 'Depth-First Search']",53.70%,Medium
506,Relative Ranks,"['Array', 'Sorting', 'Heap (Priority Queue)']",72.40%,Easy
507,Perfect Number,['Math'],42.60%,Easy
508,Most Frequent Subtree Sum,"['Hash Table', 'Tree', 'Depth-First Search', 'Binary Tree']",67.20%,Medium
509,Fibonacci Number,"['Math', 'Dynamic Programming', 'Recursion', 'Memoization']",72.00%,Easy
510,Inorder Successor in BST II,"['Tree', 'Binary Search Tree', 'Binary Tree']",60.90%,Medium
511,Game Play Analysis I,['Database'],75.10%,Easy
512,Game Play Analysis II,['Database'],53.30%,Easy
513,Find Bottom Left Tree Value,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",71.40%,Medium
514,Freedom Trail,"['String', 'Dynamic Programming', 'Depth-First Search', 'Breadth-First Search']",59.00%,Hard
515,Find Largest Value in Each Tree Row,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",65.70%,Medium
516,Longest Palindromic Subsequence,"['String', 'Dynamic Programming']",63.30%,Medium
517,Super Washing Machines,"['Array', 'Greedy']",41.70%,Hard
518,Coin Change II,"['Array', 'Dynamic Programming']",64.20%,Medium
519,Random Flip Matrix,"['Hash Table', 'Math', 'Reservoir Sampling', 'Randomized']",42.60%,Medium
520,Detect Capital,['String'],56.30%,Easy
521,Longest Uncommon Subsequence I,['String'],61.00%,Easy
522,Longest Uncommon Subsequence II,"['Array', 'Hash Table', 'Two Pointers', 'String', 'Sorting']",42.20%,Medium
523,Continuous Subarray Sum,"['Array', 'Hash Table', 'Math', 'Prefix Sum']",30.50%,Medium
524,Longest Word in Dictionary through Deleting,"['Array', 'Two Pointers', 'String', 'Sorting']",51.40%,Medium
525,Contiguous Array,"['Array', 'Hash Table', 'Prefix Sum']",48.90%,Medium
526,Beautiful Arrangement,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",64.30%,Medium
527,Word Abbreviation,"['Array', 'String', 'Greedy']",61.30%,Hard
528,Random Pick with Weight,"['Array', 'Math', 'Binary Search', 'Prefix Sum', 'Randomized']",47.50%,Medium
529,Minesweeper,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",67.20%,Medium
530,Minimum Absolute Difference in BST,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Search Tree', 'Binary Tree']",58.60%,Easy
531,Lonely Pixel I,"['Array', 'Hash Table', 'Matrix']",62.30%,Medium
532,K-diff Pairs in an Array,"['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Sorting']",43.70%,Medium
533,Lonely Pixel II,"['Array', 'Hash Table', 'Matrix']",48.60%,Medium
534,Game Play Analysis III,['Database'],81.00%,Medium
535,Encode and Decode TinyURL,"['Hash Table', 'String', 'Design', 'Hash Function']",86.50%,Medium
536,Construct Binary Tree from String,"['String', 'Stack', 'Tree']",57.40%,Medium
537,Complex Number Multiplication,"['Math', 'String', 'Simulation']",72.10%,Medium
538,Convert BST to Greater Tree,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",69.90%,Medium
539,Minimum Time Difference,"['Array', 'Math', 'String', 'Sorting']",62.10%,Medium
540,Single Element in a Sorted Array,"['Array', 'Binary Search']",59.30%,Medium
541,Reverse String II,"['Two Pointers', 'String']",51.30%,Easy
542,01 Matrix,"['Array', 'Dynamic Programming', 'Breadth-First Search', 'Matrix']",49.80%,Medium
543,Diameter of Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",61.80%,Easy
544,Output Contest Matches,"['String', 'Recursion', 'Simulation']",77.20%,Medium
545,Boundary of Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",46.00%,Medium
546,Remove Boxes,"['Array', 'Dynamic Programming', 'Memoization']",48.10%,Hard
547,Number of Provinces,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",67.40%,Medium
548,Split Array with Equal Sum,"['Array', 'Hash Table', 'Prefix Sum']",50.10%,Hard
549,Binary Tree Longest Consecutive Sequence II,"['Tree', 'Depth-First Search', 'Binary Tree']",49.50%,Medium
550,Game Play Analysis IV,['Database'],38.20%,Medium
551,Student Attendance Record I,['String'],49.40%,Easy
552,Student Attendance Record II,['Dynamic Programming'],55.40%,Hard
553,Optimal Division,"['Array', 'Math', 'Dynamic Programming']",61.40%,Medium
554,Brick Wall,"['Array', 'Hash Table']",55.50%,Medium
555,Split Concatenated Strings,"['Array', 'String', 'Greedy']",43.50%,Medium
556,Next Greater Element III,"['Math', 'Two Pointers', 'String']",34.30%,Medium
557,Reverse Words in a String III,"['Two Pointers', 'String']",83.40%,Easy
558,Logical OR of Two Binary Grids Represented as Quad-Trees,"['Divide and Conquer', 'Tree']",50.30%,Medium
559,Maximum Depth of N-ary Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search']",72.50%,Easy
560,Subarray Sum Equals K,"['Array', 'Hash Table', 'Prefix Sum']",44.30%,Medium
561,Array Partition,"['Array', 'Greedy', 'Sorting', 'Counting Sort']",79.60%,Easy
562,Longest Line of Consecutive One in Matrix,"['Array', 'Dynamic Programming', 'Matrix']",50.50%,Medium
563,Binary Tree Tilt,"['Tree', 'Depth-First Search', 'Binary Tree']",62.90%,Easy
564,Find the Closest Palindrome,"['Math', 'String']",31.70%,Hard
565,Array Nesting,"['Array', 'Depth-First Search']",56.40%,Medium
566,Reshape the Matrix,"['Array', 'Matrix', 'Simulation']",63.40%,Easy
567,Permutation in String,"['Hash Table', 'Two Pointers', 'String', 'Sliding Window']",46.40%,Medium
568,Maximum Vacation Days,"['Array', 'Dynamic Programming', 'Matrix']",46.00%,Hard
569,Median Employee Salary,['Database'],65.90%,Hard
570,Managers with at Least 5 Direct Reports,['Database'],49.50%,Medium
571,Find Median Given Frequency of Numbers,['Database'],42.30%,Hard
572,Subtree of Another Tree,"['Tree', 'Depth-First Search', 'String Matching', 'Binary Tree', 'Hash Function']",48.90%,Easy
573,Squirrel Simulation,"['Array', 'Math']",57.20%,Medium
574,Winning Candidate,['Database'],61.20%,Medium
575,Distribute Candies,"['Array', 'Hash Table']",68.60%,Easy
576,Out of Boundary Paths,['Dynamic Programming'],48.10%,Medium
577,Employee Bonus,['Database'],76.60%,Easy
578,Get Highest Answer Rate Question,['Database'],40.20%,Medium
579,Find Cumulative Salary of an Employee,['Database'],47.70%,Hard
580,Count Student Number in Departments,['Database'],59.30%,Medium
581,Shortest Unsorted Continuous Subarray,"['Array', 'Two Pointers', 'Stack', 'Greedy', 'Sorting', 'Monotonic Stack']",37.10%,Medium
582,Kill Process,"['Array', 'Hash Table', 'Tree']",69.80%,Medium
583,Delete Operation for Two Strings,"['String', 'Dynamic Programming']",62.90%,Medium
584,Find Customer Referee,['Database'],71.10%,Easy
585,Investments in 2016,['Database'],49.20%,Medium
586,Customer Placing the Largest Number of Orders,['Database'],64.60%,Easy
587,Erect the Fence,"['Array', 'Math', 'Geometry']",52.00%,Hard
588,Design In-Memory File System,"['Hash Table', 'String', 'Design']",48.10%,Hard
589,N-ary Tree Preorder Traversal,"['Stack', 'Tree', 'Depth-First Search']",75.90%,Easy
590,N-ary Tree Postorder Traversal,"['Stack', 'Tree', 'Depth-First Search']",80.40%,Easy
591,Tag Validator,"['String', 'Stack']",39.10%,Hard
592,Fraction Addition and Subtraction,"['Math', 'String', 'Simulation']",66.10%,Medium
593,Valid Square,"['Math', 'Geometry']",44.20%,Medium
594,Longest Harmonious Subsequence,"['Array', 'Hash Table', 'Sliding Window', 'Sorting', 'Counting']",55.70%,Easy
595,Big Countries,['Database'],68.20%,Easy
596,Classes More Than 5 Students,['Database'],58.00%,Easy
597,Friend Requests I: Overall Acceptance Rate,['Database'],41.70%,Easy
598,Range Addition II,"['Array', 'Math']",56.60%,Easy
599,Minimum Index Sum of Two Lists,"['Array', 'Hash Table', 'String']",56.60%,Easy
600,Non-negative Integers without Consecutive Ones,['Dynamic Programming'],40.20%,Hard
601,Human Traffic of Stadium,['Database'],49.00%,Hard
602,Friend Requests II: Who Has the Most Friends,['Database'],58.90%,Medium
603,Consecutive Available Seats,['Database'],65.80%,Easy
604,Design Compressed String Iterator,"['Array', 'String', 'Design']",40.00%,Easy
605,Can Place Flowers,"['Array', 'Greedy']",28.80%,Easy
606,Construct String from Binary Tree,"['String', 'Tree', 'Depth-First Search', 'Binary Tree']",69.60%,Medium
607,Sales Person,['Database'],65.80%,Easy
608,Tree Node,['Database'],73.00%,Medium
609,Find Duplicate File in System,"['Array', 'Hash Table', 'String']",67.70%,Medium
610,Triangle Judgement,['Database'],72.70%,Easy
611,Valid Triangle Number,"['Array', 'Two Pointers', 'Binary Search', 'Greedy', 'Sorting']",51.60%,Medium
612,Shortest Distance in a Plane,['Database'],61.30%,Medium
613,Shortest Distance in a Line,['Database'],80.10%,Easy
614,Second Degree Follower,['Database'],39.20%,Medium
615,Average Salary: Departments VS Company,['Database'],56.30%,Hard
616,Add Bold Tag in String,"['Array', 'Hash Table', 'String']",50.10%,Medium
617,Merge Two Binary Trees,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",79.20%,Easy
618,Students Report By Geography,['Database'],63.50%,Hard
619,Biggest Single Number,['Database'],66.90%,Easy
620,Not Boring Movies,['Database'],74.50%,Easy
621,Task Scheduler,"['Array', 'Hash Table', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Counting']",60.50%,Medium
622,Design Circular Queue,"['Array', 'Linked List', 'Design', 'Queue']",52.00%,Medium
623,Add One Row to Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",64.10%,Medium
624,Maximum Distance in Arrays,"['Array', 'Greedy']",45.80%,Medium
625,Minimum Factorization,"['Math', 'Greedy']",33.70%,Medium
626,Exchange Seats,['Database'],71.40%,Medium
627,Swap Salary,['Database'],83.60%,Easy
628,Maximum Product of Three Numbers,"['Array', 'Math', 'Sorting']",45.20%,Easy
629,K Inverse Pairs Array,['Dynamic Programming'],49.30%,Hard
630,Course Schedule III,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",40.30%,Hard
631,Design Excel Sum Formula,"['Array', 'Graph', 'Design']",43.90%,Hard
632,Smallest Range Covering Elements from K Lists,"['Array', 'Hash Table', 'Greedy', 'Sliding Window', 'Sorting', 'Heap (Priority Queue)']",69.70%,Hard
633,Sum of Square Numbers,"['Math', 'Two Pointers', 'Binary Search']",36.50%,Medium
634,Find the Derangement of An Array,"['Math', 'Dynamic Programming']",41.90%,Medium
635,Design Log Storage System,"['Hash Table', 'String', 'Design']",59.50%,Medium
636,Exclusive Time of Functions,"['Array', 'Stack']",63.00%,Medium
637,Average of Levels in Binary Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",73.40%,Easy
638,Shopping Offers,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Memoization', 'Bitmask']",51.80%,Medium
639,Decode Ways II,"['String', 'Dynamic Programming']",30.90%,Hard
640,Solve the Equation,"['Math', 'String', 'Simulation']",44.30%,Medium
641,Design Circular Deque,"['Array', 'Linked List', 'Design', 'Queue']",64.60%,Medium
642,Design Search Autocomplete System,"['String', 'Depth-First Search', 'Design']",49.10%,Hard
643,Maximum Average Subarray I,"['Array', 'Sliding Window']",44.00%,Easy
644,Maximum Average Subarray II,"['Array', 'Binary Search', 'Prefix Sum']",37.00%,Hard
645,Set Mismatch,"['Array', 'Hash Table', 'Bit Manipulation', 'Sorting']",44.60%,Easy
646,Maximum Length of Pair Chain,"['Array', 'Dynamic Programming', 'Greedy', 'Sorting']",60.30%,Medium
647,Palindromic Substrings,"['Two Pointers', 'String', 'Dynamic Programming']",70.80%,Medium
648,Replace Words,"['Array', 'Hash Table', 'String', 'Trie']",68.10%,Medium
649,Dota2 Senate,"['String', 'Greedy', 'Queue']",48.10%,Medium
650,2 Keys Keyboard,"['Math', 'Dynamic Programming']",59.60%,Medium
651,4 Keys Keyboard,"['Math', 'Dynamic Programming']",55.80%,Medium
652,Find Duplicate Subtrees,"['Hash Table', 'Tree', 'Depth-First Search', 'Binary Tree']",59.70%,Medium
653,Two Sum IV - Input is a BST,"['Hash Table', 'Two Pointers', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Search Tree', 'Binary Tree']",61.60%,Easy
654,Maximum Binary Tree,"['Array', 'Divide and Conquer', 'Stack', 'Tree', 'Monotonic Stack', 'Binary Tree']",85.70%,Medium
655,Print Binary Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",64.80%,Medium
656,Coin Path,"['Array', 'Dynamic Programming']",32.20%,Hard
657,Robot Return to Origin,"['String', 'Simulation']",75.90%,Easy
658,Find K Closest Elements,"['Array', 'Two Pointers', 'Binary Search', 'Sliding Window', 'Sorting', 'Heap (Priority Queue)']",48.00%,Medium
659,Split Array into Consecutive Subsequences,"['Array', 'Hash Table', 'Greedy', 'Heap (Priority Queue)']",51.20%,Medium
660,Remove 9,['Math'],57.30%,Hard
661,Image Smoother,"['Array', 'Matrix']",67.70%,Easy
662,Maximum Width of Binary Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",43.30%,Medium
663,Equal Tree Partition,"['Tree', 'Depth-First Search', 'Binary Tree']",41.60%,Medium
664,Strange Printer,"['String', 'Dynamic Programming']",61.10%,Hard
665,Non-decreasing Array,['Array'],24.90%,Medium
666,Path Sum IV,"['Array', 'Hash Table', 'Tree']",62.50%,Medium
667,Beautiful Arrangement II,"['Array', 'Math']",60.30%,Medium
668,Kth Smallest Number in Multiplication Table,"['Math', 'Binary Search']",52.20%,Hard
669,Trim a Binary Search Tree,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",66.30%,Medium
670,Maximum Swap,"['Math', 'Greedy']",51.50%,Medium
671,Second Minimum Node In a Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",44.90%,Easy
672,Bulb Switcher II,"['Math', 'Bit Manipulation', 'Depth-First Search', 'Breadth-First Search']",50.10%,Medium
673,Number of Longest Increasing Subsequence,"['Array', 'Dynamic Programming', 'Binary Indexed Tree', 'Segment Tree']",49.00%,Medium
674,Longest Continuous Increasing Subsequence,['Array'],50.60%,Easy
675,Cut Off Trees for Golf Event,"['Array', 'Breadth-First Search', 'Heap (Priority Queue)', 'Matrix']",34.70%,Hard
676,Implement Magic Dictionary,"['Hash Table', 'String', 'Depth-First Search', 'Design', 'Trie']",57.80%,Medium
677,Map Sum Pairs,"['Hash Table', 'String', 'Design', 'Trie']",56.90%,Medium
678,Valid Parenthesis String,"['String', 'Dynamic Programming', 'Stack', 'Greedy']",38.30%,Medium
679,24 Game,"['Array', 'Math', 'Backtracking']",49.60%,Hard
680,Valid Palindrome II,"['Two Pointers', 'String', 'Greedy']",41.60%,Easy
681,Next Closest Time,"['Hash Table', 'String', 'Backtracking']",46.80%,Medium
682,Baseball Game,"['Array', 'Stack', 'Simulation']",77.50%,Easy
683,K Empty Slots,"['Array', 'Binary Indexed Tree']",37.20%,Hard
684,Redundant Connection,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",63.60%,Medium
685,Redundant Connection II,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",34.70%,Hard
686,Repeated String Match,"['String', 'String Matching']",35.80%,Medium
687,Longest Univalue Path,"['Tree', 'Depth-First Search', 'Binary Tree']",42.00%,Medium
688,Knight Probability in Chessboard,['Dynamic Programming'],56.40%,Medium
689,Maximum Sum of 3 Non-Overlapping Subarrays,"['Array', 'Dynamic Programming']",50.40%,Hard
690,Employee Importance,"['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search']",67.60%,Medium
691,Stickers to Spell Word,"['Array', 'String', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Memoization', 'Bitmask']",49.50%,Hard
692,Top K Frequent Words,"['Hash Table', 'String', 'Trie', 'Sorting', 'Heap (Priority Queue)', 'Bucket Sort', 'Counting']",58.60%,Medium
693,Binary Number with Alternating Bits,['Bit Manipulation'],63.00%,Easy
694,Number of Distinct Islands,"['Hash Table', 'Depth-First Search']",61.70%,Medium
695,Max Area of Island,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",72.60%,Medium
696,Count Binary Substrings,"['Two Pointers', 'String']",65.70%,Easy
697,Degree of an Array,"['Array', 'Hash Table']",56.90%,Easy
698,Partition to K Equal Sum Subsets,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Memoization', 'Bitmask']",38.10%,Medium
699,Falling Squares,"['Array', 'Segment Tree', 'Ordered Set']",45.70%,Hard
700,Search in a Binary Search Tree,"['Tree', 'Binary Search Tree', 'Binary Tree']",80.80%,Easy
701,Insert into a Binary Search Tree,"['Tree', 'Binary Search Tree', 'Binary Tree']",73.60%,Medium
702,Search in a Sorted Array of Unknown Size,"['Array', 'Binary Search', 'Interactive']",72.40%,Medium
703,Kth Largest Element in a Stream,"['Tree', 'Design', 'Binary Search Tree', 'Heap (Priority Queue)', 'Binary Tree', 'Data Stream']",59.40%,Easy
704,Binary Search,"['Array', 'Binary Search']",58.60%,Easy
705,Design HashSet,"['Array', 'Hash Table', 'Linked List', 'Design', 'Hash Function']",67.20%,Easy
706,Design HashMap,"['Array', 'Hash Table', 'Linked List', 'Design', 'Hash Function']",65.60%,Easy
707,Design Linked List,"['Linked List', 'Design']",28.60%,Medium
708,Insert into a Sorted Circular Linked List,['Linked List'],36.90%,Medium
709,To Lower Case,['String'],83.80%,Easy
710,Random Pick with Blacklist,"['Array', 'Hash Table', 'Math', 'Binary Search', 'Sorting', 'Randomized']",33.60%,Hard
711,Number of Distinct Islands II,"['Hash Table', 'Depth-First Search']",54.20%,Hard
712,Minimum ASCII Delete Sum for Two Strings,"['String', 'Dynamic Programming']",65.30%,Medium
713,Subarray Product Less Than K,"['Array', 'Binary Search', 'Sliding Window', 'Prefix Sum']",52.00%,Medium
714,Best Time to Buy and Sell Stock with Transaction Fee,"['Array', 'Dynamic Programming', 'Greedy']",69.50%,Medium
715,Range Module,"['Design', 'Segment Tree', 'Ordered Set']",43.90%,Hard
716,Max Stack,"['Linked List', 'Stack', 'Design']",45.10%,Hard
717,1-bit and 2-bit Characters,['Array'],45.20%,Easy
718,Maximum Length of Repeated Subarray,"['Array', 'Binary Search', 'Dynamic Programming', 'Sliding Window', 'Rolling Hash', 'Hash Function']",51.00%,Medium
719,Find K-th Smallest Pair Distance,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",45.40%,Hard
720,Longest Word in Dictionary,"['Array', 'Hash Table', 'String', 'Trie', 'Sorting']",52.90%,Medium
721,Accounts Merge,"['Array', 'Hash Table', 'String', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Sorting']",58.20%,Medium
722,Remove Comments,"['Array', 'String']",39.00%,Medium
723,Candy Crush,"['Array', 'Two Pointers', 'Matrix']",77.00%,Medium
724,Find Pivot Index,"['Array', 'Prefix Sum']",59.00%,Easy
725,Split Linked List in Parts,['Linked List'],70.00%,Medium
726,Number of Atoms,"['Hash Table', 'String', 'Stack', 'Sorting']",65.10%,Hard
727,Minimum Window Subsequence,"['String', 'Dynamic Programming']",43.50%,Hard
728,Self Dividing Numbers,['Math'],79.10%,Easy
729,My Calendar I,"['Array', 'Binary Search', 'Design', 'Segment Tree', 'Ordered Set']",58.40%,Medium
730,Count Different Palindromic Subsequences,"['String', 'Dynamic Programming']",46.20%,Hard
731,My Calendar II,"['Array', 'Binary Search', 'Design', 'Segment Tree', 'Prefix Sum', 'Ordered Set']",62.70%,Medium
732,My Calendar III,"['Binary Search', 'Design', 'Segment Tree', 'Prefix Sum', 'Ordered Set']",71.80%,Hard
733,Flood Fill,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",65.10%,Easy
734,Sentence Similarity,"['Array', 'Hash Table', 'String']",44.50%,Easy
735,Asteroid Collision,"['Array', 'Stack', 'Simulation']",44.80%,Medium
736,Parse Lisp Expression,"['Hash Table', 'String', 'Stack', 'Recursion']",52.10%,Hard
737,Sentence Similarity II,"['Array', 'Hash Table', 'String']",50.30%,Medium
738,Monotone Increasing Digits,"['Math', 'Greedy']",48.50%,Medium
739,Daily Temperatures,"['Array', 'Stack', 'Monotonic Stack']",66.50%,Medium
740,Delete and Earn,"['Array', 'Hash Table', 'Dynamic Programming']",56.50%,Medium
741,Cherry Pickup,"['Array', 'Dynamic Programming', 'Matrix']",37.30%,Hard
742,Closest Leaf in a Binary Tree,"['Tree', 'Depth-First Search']",46.60%,Medium
743,Network Delay Time,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",55.40%,Medium
744,Find Smallest Letter Greater Than Target,"['Array', 'Binary Search']",53.00%,Easy
745,Prefix and Suffix Search,"['Array', 'Hash Table', 'String', 'Design', 'Trie']",41.10%,Hard
746,Min Cost Climbing Stairs,"['Array', 'Dynamic Programming']",66.40%,Easy
747,Largest Number At Least Twice of Others,"['Array', 'Sorting']",49.80%,Easy
748,Shortest Completing Word,"['Array', 'Hash Table', 'String']",60.70%,Easy
749,Contain Virus,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix', 'Simulation']",51.60%,Hard
750,Number Of Corner Rectangles,"['Array', 'Math']",67.80%,Medium
751,IP to CIDR,"['String', 'Bit Manipulation']",55.60%,Medium
752,Open the Lock,"['Array', 'Hash Table', 'String', 'Breadth-First Search']",60.40%,Medium
753,Cracking the Safe,"['Depth-First Search', 'Graph', 'Eulerian Circuit']",57.30%,Hard
754,Reach a Number,"['Math', 'Binary Search']",43.50%,Medium
755,Pour Water,"['Array', 'Simulation']",47.30%,Medium
756,Pyramid Transition Matrix,"['Bit Manipulation', 'Depth-First Search', 'Breadth-First Search']",52.90%,Medium
757,Set Intersection Size At Least Two,"['Array', 'Greedy', 'Sorting']",44.80%,Hard
758,Bold Words in String,"['Array', 'Hash Table', 'String']",51.70%,Medium
759,Employee Free Time,"['Array', 'Sorting', 'Heap (Priority Queue)']",72.30%,Hard
760,Find Anagram Mappings,"['Array', 'Hash Table']",83.70%,Easy
761,Special Binary String,"['String', 'Recursion']",62.30%,Hard
762,Prime Number of Set Bits in Binary Representation,"['Math', 'Bit Manipulation']",70.20%,Easy
763,Partition Labels,"['Hash Table', 'Two Pointers', 'String', 'Greedy']",80.10%,Medium
764,Largest Plus Sign,"['Array', 'Dynamic Programming']",48.50%,Medium
765,Couples Holding Hands,"['Greedy', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",57.80%,Hard
766,Toeplitz Matrix,"['Array', 'Matrix']",69.20%,Easy
767,Reorganize String,"['Hash Table', 'String', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Counting']",55.30%,Medium
768,Max Chunks To Make Sorted II,"['Array', 'Stack', 'Greedy', 'Sorting', 'Monotonic Stack']",53.50%,Hard
769,Max Chunks To Make Sorted,"['Array', 'Stack', 'Greedy', 'Sorting', 'Monotonic Stack']",58.70%,Medium
770,Basic Calculator IV,"['Hash Table', 'Math', 'String', 'Stack', 'Recursion']",55.60%,Hard
771,Jewels and Stones,"['Hash Table', 'String']",88.90%,Easy
772,Basic Calculator III,"['Math', 'String', 'Stack']",51.30%,Hard
773,Sliding Puzzle,"['Array', 'Breadth-First Search', 'Matrix']",65.30%,Hard
774,Minimize Max Distance to Gas Station,"['Array', 'Binary Search']",52.50%,Hard
775,Global and Local Inversions,"['Array', 'Math']",42.40%,Medium
776,Split BST,"['Tree', 'Binary Search Tree']",82.50%,Medium
777,Swap Adjacent in LR String,"['Two Pointers', 'String']",36.90%,Medium
778,Swim in Rising Water,"['Array', 'Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Heap (Priority Queue)', 'Matrix']",61.70%,Hard
779,K-th Symbol in Grammar,"['Math', 'Bit Manipulation', 'Recursion']",46.90%,Medium
780,Reaching Points,['Math'],33.50%,Hard
781,Rabbits in Forest,"['Array', 'Hash Table', 'Math', 'Greedy']",52.90%,Medium
782,Transform to Chessboard,"['Array', 'Math', 'Bit Manipulation', 'Matrix']",50.70%,Hard
783,Minimum Distance Between BST Nodes,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Search Tree', 'Binary Tree']",59.90%,Easy
784,Letter Case Permutation,"['String', 'Backtracking', 'Bit Manipulation']",74.50%,Medium
785,Is Graph Bipartite?,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",56.60%,Medium
786,K-th Smallest Prime Fraction,"['Array', 'Two Pointers', 'Binary Search', 'Sorting', 'Heap (Priority Queue)']",68.30%,Medium
787,Cheapest Flights Within K Stops,"['Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",39.70%,Medium
788,Rotated Digits,"['Math', 'Dynamic Programming']",56.50%,Medium
789,Escape The Ghosts,"['Array', 'Math']",62.50%,Medium
790,Domino and Tromino Tiling,['Dynamic Programming'],49.40%,Medium
791,Custom Sort String,"['Hash Table', 'String', 'Sorting']",71.20%,Medium
792,Number of Matching Subsequences,"['Array', 'Hash Table', 'String', 'Binary Search', 'Dynamic Programming', 'Trie', 'Sorting']",50.80%,Medium
793,Preimage Size of Factorial Zeroes Function,"['Math', 'Binary Search']",45.20%,Hard
794,Valid Tic-Tac-Toe State,"['Array', 'Matrix']",34.70%,Medium
795,Number of Subarrays with Bounded Maximum,"['Array', 'Two Pointers']",53.40%,Medium
796,Rotate String,"['String', 'String Matching']",59.80%,Easy
797,All Paths From Source to Target,"['Backtracking', 'Depth-First Search']",82.70%,Medium
798,Smallest Rotation with Highest Score,"['Array', 'Prefix Sum']",51.60%,Hard
799,Champagne Tower,['Dynamic Programming'],58.30%,Medium
800,Similar RGB Color,"['Math', 'String', 'Enumeration']",67.70%,Easy
801,Minimum Swaps To Make Sequences Increasing,"['Array', 'Dynamic Programming']",40.40%,Hard
802,Find Eventual Safe States,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",64.50%,Medium
803,Bricks Falling When Hit,"['Array', 'Union Find', 'Matrix']",35.10%,Hard
804,Unique Morse Code Words,"['Array', 'Hash Table', 'String']",83.00%,Easy
805,Split Array With Same Average,"['Array', 'Math', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",25.50%,Hard
806,Number of Lines To Write String,"['Array', 'String']",69.50%,Easy
807,Max Increase to Keep City Skyline,"['Array', 'Greedy', 'Matrix']",86.30%,Medium
808,Soup Servings,"['Math', 'Dynamic Programming', 'Probability and Statistics']",53.70%,Medium
809,Expressive Words,"['Array', 'Two Pointers', 'String']",46.30%,Medium
810,Chalkboard XOR Game,"['Array', 'Math', 'Bit Manipulation', 'Brainteaser', 'Game Theory']",61.60%,Hard
811,Subdomain Visit Count,"['Array', 'Hash Table', 'String', 'Counting']",76.50%,Medium
812,Largest Triangle Area,"['Array', 'Math', 'Geometry']",61.30%,Easy
813,Largest Sum of Averages,"['Array', 'Dynamic Programming', 'Prefix Sum']",53.80%,Medium
814,Binary Tree Pruning,"['Tree', 'Depth-First Search', 'Binary Tree']",72.30%,Medium
815,Bus Routes,"['Array', 'Hash Table', 'Breadth-First Search']",47.30%,Hard
816,Ambiguous Coordinates,"['String', 'Backtracking', 'Enumeration']",57.00%,Medium
817,Linked List Components,"['Array', 'Hash Table', 'Linked List']",57.00%,Medium
818,Race Car,['Dynamic Programming'],43.90%,Hard
819,Most Common Word,"['Array', 'Hash Table', 'String', 'Counting']",44.40%,Easy
820,Short Encoding of Words,"['Array', 'Hash Table', 'String', 'Trie']",60.50%,Medium
821,Shortest Distance to a Character,"['Array', 'Two Pointers', 'String']",71.90%,Easy
822,Card Flipping Game,"['Array', 'Hash Table']",48.30%,Medium
823,Binary Trees With Factors,"['Array', 'Hash Table', 'Dynamic Programming', 'Sorting']",52.90%,Medium
824,Goat Latin,['String'],68.70%,Easy
825,Friends Of Appropriate Ages,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",48.10%,Medium
826,Most Profit Assigning Work,"['Array', 'Two Pointers', 'Binary Search', 'Greedy', 'Sorting']",55.90%,Medium
827,Making A Large Island,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",49.00%,Hard
828,Count Unique Characters of All Substrings of a Given String,"['Hash Table', 'String', 'Dynamic Programming']",52.70%,Hard
829,Consecutive Numbers Sum,"['Math', 'Enumeration']",42.00%,Hard
830,Positions of Large Groups,['String'],52.60%,Easy
831,Masking Personal Information,['String'],49.90%,Medium
832,Flipping an Image,"['Array', 'Two Pointers', 'Bit Manipulation', 'Matrix', 'Simulation']",82.50%,Easy
833,Find And Replace in String,"['Array', 'Hash Table', 'String', 'Sorting']",51.90%,Medium
834,Sum of Distances in Tree,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Graph']",65.30%,Hard
835,Image Overlap,"['Array', 'Matrix']",63.70%,Medium
836,Rectangle Overlap,"['Math', 'Geometry']",45.20%,Easy
837,New 21 Game,"['Math', 'Dynamic Programming', 'Sliding Window', 'Probability and Statistics']",44.90%,Medium
838,Push Dominoes,"['Two Pointers', 'String', 'Dynamic Programming']",57.30%,Medium
839,Similar String Groups,"['Array', 'Hash Table', 'String', 'Depth-First Search', 'Breadth-First Search', 'Union Find']",55.20%,Hard
840,Magic Squares In Grid,"['Array', 'Hash Table', 'Math', 'Matrix']",51.70%,Medium
841,Keys and Rooms,"['Depth-First Search', 'Breadth-First Search', 'Graph']",73.70%,Medium
842,Split Array into Fibonacci Sequence,"['String', 'Backtracking']",39.20%,Medium
843,Guess the Word,"['Array', 'Math', 'String', 'Interactive', 'Game Theory']",38.40%,Hard
844,Backspace String Compare,"['Two Pointers', 'String', 'Stack', 'Simulation']",49.30%,Easy
845,Longest Mountain in Array,"['Array', 'Two Pointers', 'Dynamic Programming', 'Enumeration']",40.70%,Medium
846,Hand of Straights,"['Array', 'Hash Table', 'Greedy', 'Sorting']",56.80%,Medium
847,Shortest Path Visiting All Nodes,"['Dynamic Programming', 'Bit Manipulation', 'Breadth-First Search', 'Graph', 'Matrix']",65.40%,Hard
848,Shifting Letters,"['Array', 'String', 'Prefix Sum']",44.90%,Medium
849,Maximize Distance to Closest Person,['Array'],48.40%,Medium
850,Rectangle Area II,"['Array', 'Segment Tree', 'Line Sweep', 'Ordered Set']",54.30%,Hard
851,Loud and Rich,"['Array', 'Depth-First Search', 'Graph', 'Topological Sort']",60.40%,Medium
852,Peak Index in a Mountain Array,"['Array', 'Binary Search']",68.10%,Medium
853,Car Fleet,"['Array', 'Stack', 'Sorting', 'Monotonic Stack']",52.20%,Medium
854,K-Similar Strings,"['String', 'Breadth-First Search']",40.00%,Hard
855,Exam Room,"['Design', 'Heap (Priority Queue)', 'Ordered Set']",43.60%,Medium
856,Score of Parentheses,"['String', 'Stack']",64.00%,Medium
857,Minimum Cost to Hire K Workers,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",63.50%,Hard
858,Mirror Reflection,"['Math', 'Geometry', 'Number Theory']",62.40%,Medium
859,Buddy Strings,"['Hash Table', 'String']",33.30%,Easy
860,Lemonade Change,"['Array', 'Greedy']",58.30%,Easy
861,Score After Flipping Matrix,"['Array', 'Greedy', 'Bit Manipulation', 'Matrix']",80.40%,Medium
862,Shortest Subarray with Sum at Least K,"['Array', 'Binary Search', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Prefix Sum', 'Monotonic Queue']",26.20%,Hard
863,All Nodes Distance K in Binary Tree,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",65.20%,Medium
864,Shortest Path to Get All Keys,"['Array', 'Bit Manipulation', 'Breadth-First Search', 'Matrix']",53.60%,Hard
865,Smallest Subtree with all the Deepest Nodes,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",71.20%,Medium
866,Prime Palindrome,"['Math', 'Number Theory']",26.20%,Medium
867,Transpose Matrix,"['Array', 'Matrix', 'Simulation']",72.80%,Easy
868,Binary Gap,['Bit Manipulation'],64.10%,Easy
869,Reordered Power of 2,"['Hash Table', 'Math', 'Sorting', 'Counting', 'Enumeration']",62.50%,Medium
870,Advantage Shuffle,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",52.90%,Medium
871,Minimum Number of Refueling Stops,"['Array', 'Dynamic Programming', 'Greedy', 'Heap (Priority Queue)']",40.30%,Hard
872,Leaf-Similar Trees,"['Tree', 'Depth-First Search', 'Binary Tree']",70.10%,Easy
873,Length of Longest Fibonacci Subsequence,"['Array', 'Hash Table', 'Dynamic Programming']",48.50%,Medium
874,Walking Robot Simulation,"['Array', 'Hash Table', 'Simulation']",57.90%,Medium
875,Koko Eating Bananas,"['Array', 'Binary Search']",48.50%,Medium
876,Middle of the Linked List,"['Linked List', 'Two Pointers']",79.60%,Easy
877,Stone Game,"['Array', 'Math', 'Dynamic Programming', 'Game Theory']",71.20%,Medium
878,Nth Magical Number,"['Math', 'Binary Search']",35.70%,Hard
879,Profitable Schemes,"['Array', 'Dynamic Programming']",48.10%,Hard
880,Decoded String at Index,"['String', 'Stack']",36.50%,Medium
881,Boats to Save People,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",59.70%,Medium
882,Reachable Nodes In Subdivided Graph,"['Graph', 'Heap (Priority Queue)', 'Shortest Path']",50.60%,Hard
883,Projection Area of 3D Shapes,"['Array', 'Math', 'Geometry', 'Matrix']",73.40%,Easy
884,Uncommon Words from Two Sentences,"['Hash Table', 'String', 'Counting']",75.20%,Easy
885,Spiral Matrix III,"['Array', 'Matrix', 'Simulation']",84.70%,Medium
886,Possible Bipartition,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",50.90%,Medium
887,Super Egg Drop,"['Math', 'Binary Search', 'Dynamic Programming']",28.20%,Hard
888,Fair Candy Swap,"['Array', 'Hash Table', 'Binary Search', 'Sorting']",62.40%,Easy
889,Construct Binary Tree from Preorder and Postorder Traversal,"['Array', 'Hash Table', 'Divide and Conquer', 'Tree', 'Binary Tree']",71.80%,Medium
890,Find and Replace Pattern,"['Array', 'Hash Table', 'String']",76.80%,Medium
891,Sum of Subsequence Widths,"['Array', 'Math', 'Sorting']",38.30%,Hard
892,Surface Area of 3D Shapes,"['Array', 'Math', 'Geometry', 'Matrix']",67.00%,Easy
893,Groups of Special-Equivalent Strings,"['Array', 'Hash Table', 'String', 'Sorting']",72.30%,Medium
894,All Possible Full Binary Trees,"['Dynamic Programming', 'Tree', 'Recursion', 'Memoization', 'Binary Tree']",82.80%,Medium
895,Maximum Frequency Stack,"['Hash Table', 'Stack', 'Design', 'Ordered Set']",66.50%,Hard
896,Monotonic Array,['Array'],61.40%,Easy
897,Increasing Order Search Tree,"['Stack', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",78.50%,Easy
898,Bitwise ORs of Subarrays,"['Array', 'Dynamic Programming', 'Bit Manipulation']",39.80%,Medium
899,Orderly Queue,"['Math', 'String', 'Sorting']",66.10%,Hard
900,RLE Iterator,"['Array', 'Design', 'Counting', 'Iterator']",59.70%,Medium
901,Online Stock Span,"['Stack', 'Design', 'Monotonic Stack', 'Data Stream']",66.70%,Medium
902,Numbers At Most N Given Digit Set,"['Array', 'Math', 'String', 'Binary Search', 'Dynamic Programming']",42.80%,Hard
903,Valid Permutations for DI Sequence,"['String', 'Dynamic Programming', 'Prefix Sum']",57.20%,Hard
904,Fruit Into Baskets,"['Array', 'Hash Table', 'Sliding Window']",45.10%,Medium
905,Sort Array By Parity,"['Array', 'Two Pointers', 'Sorting']",76.30%,Easy
906,Super Palindromes,"['Math', 'Enumeration']",39.10%,Hard
907,Sum of Subarray Minimums,"['Array', 'Dynamic Programming', 'Stack', 'Monotonic Stack']",37.20%,Medium
908,Smallest Range I,"['Array', 'Math']",70.90%,Easy
909,Snakes and Ladders,"['Array', 'Breadth-First Search', 'Matrix']",43.80%,Medium
910,Smallest Range II,"['Array', 'Math', 'Greedy', 'Sorting']",36.60%,Medium
911,Online Election,"['Array', 'Hash Table', 'Binary Search', 'Design']",52.30%,Medium
912,Sort an Array,"['Array', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Merge Sort', 'Bucket Sort', 'Radix Sort', 'Counting Sort']",57.50%,Medium
913,Cat and Mouse,"['Math', 'Dynamic Programming', 'Graph', 'Topological Sort', 'Memoization', 'Game Theory']",33.90%,Hard
914,X of a Kind in a Deck of Cards,"['Array', 'Hash Table', 'Math', 'Counting', 'Number Theory']",29.90%,Easy
915,Partition Array into Disjoint Intervals,['Array'],48.80%,Medium
916,Word Subsets,"['Array', 'Hash Table', 'String']",51.70%,Medium
917,Reverse Only Letters,"['Two Pointers', 'String']",65.80%,Easy
918,Maximum Sum Circular Subarray,"['Array', 'Divide and Conquer', 'Dynamic Programming', 'Queue', 'Monotonic Queue']",46.00%,Medium
919,Complete Binary Tree Inserter,"['Tree', 'Breadth-First Search', 'Design', 'Binary Tree']",66.00%,Medium
920,Number of Music Playlists,"['Math', 'Dynamic Programming', 'Combinatorics']",60.30%,Hard
921,Minimum Add to Make Parentheses Valid,"['String', 'Stack', 'Greedy']",74.60%,Medium
922,Sort Array By Parity II,"['Array', 'Two Pointers', 'Sorting']",70.90%,Easy
923,3Sum With Multiplicity,"['Array', 'Hash Table', 'Two Pointers', 'Sorting', 'Counting']",45.60%,Medium
924,Minimize Malware Spread,"['Array', 'Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",42.10%,Hard
925,Long Pressed Name,"['Two Pointers', 'String']",32.30%,Easy
926,Flip String to Monotone Increasing,"['String', 'Dynamic Programming']",61.50%,Medium
927,Three Equal Parts,"['Array', 'Math']",40.10%,Hard
928,Minimize Malware Spread II,"['Array', 'Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",44.20%,Hard
929,Unique Email Addresses,"['Array', 'Hash Table', 'String']",67.40%,Easy
930,Binary Subarrays With Sum,"['Array', 'Hash Table', 'Sliding Window', 'Prefix Sum']",64.20%,Medium
931,Minimum Falling Path Sum,"['Array', 'Dynamic Programming', 'Matrix']",62.60%,Medium
932,Beautiful Array,"['Array', 'Math', 'Divide and Conquer']",66.10%,Medium
933,Number of Recent Calls,"['Design', 'Queue', 'Data Stream']",76.50%,Easy
934,Shortest Bridge,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",58.00%,Medium
935,Knight Dialer,['Dynamic Programming'],60.70%,Medium
936,Stamping The Sequence,"['String', 'Stack', 'Greedy', 'Queue']",62.50%,Hard
937,Reorder Data in Log Files,"['Array', 'String', 'Sorting']",56.60%,Medium
938,Range Sum of BST,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",87.10%,Easy
939,Minimum Area Rectangle,"['Array', 'Hash Table', 'Math', 'Geometry', 'Sorting']",54.40%,Medium
940,Distinct Subsequences II,"['String', 'Dynamic Programming']",43.30%,Hard
941,Valid Mountain Array,['Array'],33.60%,Easy
942,DI String Match,"['Array', 'Two Pointers', 'String', 'Greedy']",79.40%,Easy
943,Find the Shortest Superstring,"['Array', 'String', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",44.30%,Hard
944,Delete Columns to Make Sorted,"['Array', 'String']",74.70%,Easy
945,Minimum Increment to Make Array Unique,"['Array', 'Greedy', 'Sorting', 'Counting']",60.10%,Medium
946,Validate Stack Sequences,"['Array', 'Stack', 'Simulation']",69.70%,Medium
947,Most Stones Removed with Same Row or Column,"['Hash Table', 'Depth-First Search', 'Union Find', 'Graph']",62.10%,Medium
948,Bag of Tokens,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",59.00%,Medium
949,Largest Time for Given Digits,"['Array', 'String', 'Enumeration']",35.50%,Medium
950,Reveal Cards In Increasing Order,"['Array', 'Queue', 'Sorting', 'Simulation']",83.10%,Medium
951,Flip Equivalent Binary Trees,"['Tree', 'Depth-First Search', 'Binary Tree']",69.90%,Medium
952,Largest Component Size by Common Factor,"['Array', 'Hash Table', 'Math', 'Union Find', 'Number Theory']",41.00%,Hard
953,Verifying an Alien Dictionary,"['Array', 'Hash Table', 'String']",55.30%,Easy
954,Array of Doubled Pairs,"['Array', 'Hash Table', 'Greedy', 'Sorting']",39.20%,Medium
955,Delete Columns to Make Sorted II,"['Array', 'String', 'Greedy']",35.30%,Medium
956,Tallest Billboard,"['Array', 'Dynamic Programming']",52.10%,Hard
957,Prison Cells After N Days,"['Array', 'Hash Table', 'Math', 'Bit Manipulation']",39.00%,Medium
958,Check Completeness of a Binary Tree,"['Tree', 'Breadth-First Search', 'Binary Tree']",57.40%,Medium
959,Regions Cut By Slashes,"['Array', 'Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",78.00%,Medium
960,Delete Columns to Make Sorted III,"['Array', 'String', 'Dynamic Programming']",58.50%,Hard
961,N-Repeated Element in Size 2N Array,"['Array', 'Hash Table']",77.10%,Easy
962,Maximum Width Ramp,"['Array', 'Stack', 'Monotonic Stack']",55.40%,Medium
963,Minimum Area Rectangle II,"['Array', 'Math', 'Geometry']",55.30%,Medium
964,Least Operators to Express Number,"['Math', 'Dynamic Programming', 'Memoization']",48.90%,Hard
965,Univalued Binary Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",71.50%,Easy
966,Vowel Spellchecker,"['Array', 'Hash Table', 'String']",51.50%,Medium
967,Numbers With Same Consecutive Differences,"['Backtracking', 'Breadth-First Search']",58.40%,Medium
968,Binary Tree Cameras,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Tree']",46.90%,Hard
969,Pancake Sorting,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",71.10%,Medium
970,Powerful Integers,"['Hash Table', 'Math', 'Enumeration']",43.90%,Medium
971,Flip Binary Tree To Match Preorder Traversal,"['Tree', 'Depth-First Search', 'Binary Tree']",50.80%,Medium
972,Equal Rational Numbers,"['Math', 'String']",44.60%,Hard
973,K Closest Points to Origin,"['Array', 'Math', 'Divide and Conquer', 'Geometry', 'Sorting', 'Heap (Priority Queue)', 'Quickselect']",67.10%,Medium
974,Subarray Sums Divisible by K,"['Array', 'Hash Table', 'Prefix Sum']",55.50%,Medium
975,Odd Even Jump,"['Array', 'Dynamic Programming', 'Stack', 'Monotonic Stack', 'Ordered Set']",40.40%,Hard
976,Largest Perimeter Triangle,"['Array', 'Math', 'Greedy', 'Sorting']",56.50%,Easy
977,Squares of a Sorted Array,"['Array', 'Two Pointers', 'Sorting']",73.00%,Easy
978,Longest Turbulent Subarray,"['Array', 'Dynamic Programming', 'Sliding Window']",47.60%,Medium
979,Distribute Coins in Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",77.20%,Medium
980,Unique Paths III,"['Array', 'Backtracking', 'Bit Manipulation', 'Matrix']",82.00%,Hard
981,Time Based Key-Value Store,"['Hash Table', 'String', 'Binary Search', 'Design']",49.30%,Medium
982,Triples with Bitwise AND Equal To Zero,"['Array', 'Hash Table', 'Bit Manipulation']",58.70%,Hard
983,Minimum Cost For Tickets,"['Array', 'Dynamic Programming']",65.30%,Medium
984,String Without AAA or BBB,"['String', 'Greedy']",44.20%,Medium
985,Sum of Even Numbers After Queries,"['Array', 'Simulation']",68.30%,Medium
986,Interval List Intersections,"['Array', 'Two Pointers']",72.00%,Medium
987,Vertical Order Traversal of a Binary Tree,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Sorting', 'Binary Tree']",49.30%,Hard
988,Smallest String Starting From Leaf,"['String', 'Backtracking', 'Tree', 'Depth-First Search', 'Binary Tree']",60.60%,Medium
989,Add to Array-Form of Integer,"['Array', 'Math']",45.10%,Easy
990,Satisfiability of Equality Equations,"['Array', 'String', 'Union Find', 'Graph']",50.80%,Medium
991,Broken Calculator,"['Math', 'Greedy']",54.80%,Medium
992,Subarrays with K Different Integers,"['Array', 'Hash Table', 'Sliding Window', 'Counting']",64.50%,Hard
993,Cousins in Binary Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",57.10%,Easy
994,Rotting Oranges,"['Array', 'Breadth-First Search', 'Matrix']",55.20%,Medium
995,Minimum Number of K Consecutive Bit Flips,"['Array', 'Bit Manipulation', 'Queue', 'Sliding Window', 'Prefix Sum']",62.70%,Hard
996,Number of Squareful Arrays,"['Array', 'Hash Table', 'Math', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",50.30%,Hard
997,Find the Town Judge,"['Array', 'Hash Table', 'Graph']",49.80%,Easy
998,Maximum Binary Tree II,"['Tree', 'Binary Tree']",70.20%,Medium
999,Available Captures for Rook,"['Array', 'Matrix', 'Simulation']",69.60%,Easy
1000,Minimum Cost to Merge Stones,"['Array', 'Dynamic Programming', 'Prefix Sum']",43.70%,Hard
1001,Grid Illumination,"['Array', 'Hash Table']",37.50%,Hard
1002,Find Common Characters,"['Array', 'Hash Table', 'String']",74.60%,Easy
1003,Check If Word Is Valid After Substitutions,"['String', 'Stack']",60.30%,Medium
1004,Max Consecutive Ones III,"['Array', 'Binary Search', 'Sliding Window', 'Prefix Sum']",64.40%,Medium
1005,Maximize Sum Of Array After K Negations,"['Array', 'Greedy', 'Sorting']",51.60%,Easy
1006,Clumsy Factorial,"['Math', 'Stack', 'Simulation']",57.90%,Medium
1007,Minimum Domino Rotations For Equal Row,"['Array', 'Greedy']",52.30%,Medium
1008,Construct Binary Search Tree from Preorder Traversal,"['Array', 'Stack', 'Tree', 'Binary Search Tree', 'Monotonic Stack', 'Binary Tree']",82.70%,Medium
1009,Complement of Base 10 Integer,['Bit Manipulation'],60.80%,Easy
1010,Pairs of Songs With Total Durations Divisible by 60,"['Array', 'Hash Table', 'Counting']",53.10%,Medium
1011,Capacity To Ship Packages Within D Days,"['Array', 'Binary Search']",70.70%,Medium
1012,Numbers With Repeated Digits,"['Math', 'Dynamic Programming']",42.90%,Hard
1013,Partition Array Into Three Parts With Equal Sum,"['Array', 'Greedy']",42.00%,Easy
1014,Best Sightseeing Pair,"['Array', 'Dynamic Programming']",59.40%,Medium
1015,Smallest Integer Divisible by K,"['Hash Table', 'Math']",46.60%,Medium
1016,Binary String With Substrings Representing 1 To N,['String'],57.80%,Medium
1017,Convert to Base -2,['Math'],61.20%,Medium
1018,Binary Prefix Divisible By 5,"['Array', 'Bit Manipulation']",46.80%,Easy
1019,Next Greater Node In Linked List,"['Array', 'Linked List', 'Stack', 'Monotonic Stack']",61.50%,Medium
1020,Number of Enclaves,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",69.60%,Medium
1021,Remove Outermost Parentheses,"['String', 'Stack']",84.20%,Easy
1022,Sum of Root To Leaf Binary Numbers,"['Tree', 'Depth-First Search', 'Binary Tree']",73.20%,Easy
1023,Camelcase Matching,"['Array', 'Two Pointers', 'String', 'Trie', 'String Matching']",62.90%,Medium
1024,Video Stitching,"['Array', 'Dynamic Programming', 'Greedy']",51.60%,Medium
1025,Divisor Game,"['Math', 'Dynamic Programming', 'Brainteaser', 'Game Theory']",69.40%,Easy
1026,Maximum Difference Between Node and Ancestor,"['Tree', 'Depth-First Search', 'Binary Tree']",78.10%,Medium
1027,Longest Arithmetic Subsequence,"['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming']",49.20%,Medium
1028,Recover a Tree From Preorder Traversal,"['String', 'Tree', 'Depth-First Search', 'Binary Tree']",75.20%,Hard
1029,Two City Scheduling,"['Array', 'Greedy', 'Sorting']",67.10%,Medium
1030,Matrix Cells in Distance Order,"['Array', 'Math', 'Geometry', 'Sorting', 'Matrix']",71.90%,Easy
1031,Maximum Sum of Two Non-Overlapping Subarrays,"['Array', 'Dynamic Programming', 'Sliding Window']",60.00%,Medium
1032,Stream of Characters,"['Array', 'String', 'Design', 'Trie', 'Data Stream']",52.20%,Hard
1033,Moving Stones Until Consecutive,"['Math', 'Brainteaser']",49.20%,Medium
1034,Coloring A Border,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",49.40%,Medium
1035,Uncrossed Lines,"['Array', 'Dynamic Programming']",63.60%,Medium
1036,Escape a Large Maze,"['Array', 'Hash Table', 'Depth-First Search', 'Breadth-First Search']",35.00%,Hard
1037,Valid Boomerang,"['Array', 'Math', 'Geometry']",37.40%,Easy
1038,Binary Search Tree to Greater Sum Tree,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",88.30%,Medium
1039,Minimum Score Triangulation of Polygon,"['Array', 'Dynamic Programming']",59.90%,Medium
1040,Moving Stones Until Consecutive II,"['Array', 'Math', 'Two Pointers', 'Sorting']",57.40%,Medium
1041,Robot Bounded In Circle,"['Math', 'String', 'Simulation']",56.00%,Medium
1042,Flower Planting With No Adjacent,"['Depth-First Search', 'Breadth-First Search', 'Graph']",51.80%,Medium
1043,Partition Array for Maximum Sum,"['Array', 'Dynamic Programming']",76.70%,Medium
1044,Longest Duplicate Substring,"['String', 'Binary Search', 'Sliding Window', 'Rolling Hash', 'Suffix Array', 'Hash Function']",30.60%,Hard
1045,Customers Who Bought All Products,['Database'],62.60%,Medium
1046,Last Stone Weight,"['Array', 'Heap (Priority Queue)']",65.70%,Easy
1047,Remove All Adjacent Duplicates In String,"['String', 'Stack']",70.40%,Easy
1048,Longest String Chain,"['Array', 'Hash Table', 'Two Pointers', 'String', 'Dynamic Programming', 'Sorting']",61.50%,Medium
1049,Last Stone Weight II,"['Array', 'Dynamic Programming']",56.40%,Medium
1050,Actors and Directors Who Cooperated At Least Three Times,['Database'],70.30%,Easy
1051,Height Checker,"['Array', 'Sorting', 'Counting Sort']",80.90%,Easy
1052,Grumpy Bookstore Owner,"['Array', 'Sliding Window']",64.20%,Medium
1053,Previous Permutation With One Swap,"['Array', 'Greedy']",49.60%,Medium
1054,Distant Barcodes,"['Array', 'Hash Table', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Counting']",46.90%,Medium
1055,Shortest Way to Form String,"['Two Pointers', 'String', 'Binary Search']",60.60%,Medium
1056,Confusing Number,['Math'],49.00%,Easy
1057,Campus Bikes,"['Array', 'Greedy', 'Sorting']",58.80%,Medium
1058,Minimize Rounding Error to Meet Target,"['Array', 'Math', 'String']",45.30%,Medium
1059,All Paths from Source Lead to Destination,"['Graph', 'Topological Sort']",37.30%,Medium
1060,Missing Element in Sorted Array,"['Array', 'Binary Search']",57.60%,Medium
1061,Lexicographically Smallest Equivalent String,"['String', 'Union Find']",76.70%,Medium
1062,Longest Repeating Substring,"['String', 'Binary Search']",62.50%,Medium
1063,Number of Valid Subarrays,"['Array', 'Stack', 'Monotonic Stack']",79.10%,Hard
1064,Fixed Point,"['Array', 'Binary Search']",64.10%,Easy
1065,Index Pairs of a String,"['Array', 'String', 'Trie']",67.80%,Easy
1066,Campus Bikes II,"['Array', 'Dynamic Programming']",55.20%,Medium
1067,Digit Count in Range,"['Math', 'Dynamic Programming']",46.40%,Hard
1068,Product Sales Analysis I,['Database'],85.00%,Easy
1069,Product Sales Analysis II,['Database'],82.10%,Easy
1070,Product Sales Analysis III,['Database'],44.10%,Medium
1071,Greatest Common Divisor of Strings,"['Math', 'String']",52.10%,Easy
1072,Flip Columns For Maximum Number of Equal Rows,"['Array', 'Hash Table', 'Matrix']",64.10%,Medium
1073,Adding Two Negabinary Numbers,"['Array', 'Math']",37.20%,Medium
1074,Number of Submatrices That Sum to Target,"['Array', 'Hash Table', 'Matrix', 'Prefix Sum']",74.40%,Hard
1075,Project Employees I,['Database'],63.90%,Easy
1076,Project Employees II,['Database'],50.10%,Easy
1077,Project Employees III,['Database'],76.80%,Medium
1078,Occurrences After Bigram,['String'],63.50%,Easy
1079,Letter Tile Possibilities,"['Hash Table', 'String', 'Backtracking', 'Counting']",76.40%,Medium
1080,Insufficient Nodes in Root to Leaf Paths,"['Tree', 'Depth-First Search', 'Binary Tree']",56.30%,Medium
1081,Smallest Subsequence of Distinct Characters,"['String', 'Stack', 'Greedy', 'Monotonic Stack']",61.40%,Medium
1082,Sales Analysis I,['Database'],74.60%,Easy
1083,Sales Analysis II,['Database'],49.80%,Easy
1084,Sales Analysis III,['Database'],46.80%,Easy
1085,Sum of Digits in the Minimum Number,"['Array', 'Math']",76.60%,Easy
1086,High Five,"['Array', 'Hash Table', 'Sorting']",74.50%,Easy
1087,Brace Expansion,"['String', 'Backtracking']",66.50%,Medium
1088,Confusing Number II,"['Math', 'Backtracking']",47.10%,Hard
1089,Duplicate Zeros,"['Array', 'Two Pointers']",52.30%,Easy
1090,Largest Values From Labels,"['Array', 'Hash Table', 'Greedy', 'Sorting', 'Counting']",62.60%,Medium
1091,Shortest Path in Binary Matrix,"['Array', 'Breadth-First Search', 'Matrix']",48.30%,Medium
1092,Shortest Common Supersequence,"['String', 'Dynamic Programming']",59.60%,Hard
1093,Statistics from a Large Sample,"['Array', 'Math', 'Probability and Statistics']",42.10%,Medium
1094,Car Pooling,"['Array', 'Sorting', 'Heap (Priority Queue)', 'Simulation', 'Prefix Sum']",55.90%,Medium
1095,Find in Mountain Array,"['Array', 'Binary Search', 'Interactive']",40.20%,Hard
1096,Brace Expansion II,"['String', 'Backtracking', 'Stack', 'Breadth-First Search']",63.80%,Hard
1097,Game Play Analysis V,['Database'],50.90%,Hard
1098,Unpopular Books,['Database'],43.30%,Medium
1099,Two Sum Less Than K,"['Array', 'Two Pointers', 'Binary Search']",61.90%,Easy
1100,Find K-Length Substrings With No Repeated Characters,"['Hash Table', 'String', 'Sliding Window']",74.90%,Medium
1101,The Earliest Moment When Everyone Become Friends,"['Array', 'Union Find', 'Sorting']",65.40%,Medium
1102,Path With Maximum Minimum Value,"['Array', 'Binary Search']",53.80%,Medium
1103,Distribute Candies to People,"['Math', 'Simulation']",65.70%,Easy
1104,Path In Zigzag Labelled Binary Tree,"['Math', 'Tree', 'Binary Tree']",75.50%,Medium
1105,Filling Bookcase Shelves,"['Array', 'Dynamic Programming']",68.80%,Medium
1106,Parsing A Boolean Expression,"['String', 'Stack', 'Recursion']",70.60%,Hard
1107,New Users Daily Count,['Database'],44.70%,Medium
1108,Defanging an IP Address,['String'],89.40%,Easy
1109,Corporate Flight Bookings,"['Array', 'Prefix Sum']",62.90%,Medium
1110,Delete Nodes And Return Forest,"['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Binary Tree']",72.40%,Medium
1111,Maximum Nesting Depth of Two Valid Parentheses Strings,"['String', 'Stack']",72.10%,Medium
1112,Highest Grade For Each Student,['Database'],70.80%,Medium
1113,Reported Posts,['Database'],65.00%,Easy
1114,Print in Order,['Concurrency'],70.20%,Easy
1115,Print FooBar Alternately,['Concurrency'],67.40%,Medium
1116,Print Zero Even Odd,['Concurrency'],61.90%,Medium
1117,Building H2O,['Concurrency'],57.00%,Medium
1118,Number of Days in a Month,['Math'],58.60%,Easy
1119,Remove Vowels from a String,['String'],91.20%,Easy
1120,Maximum Average Subtree,"['Tree', 'Depth-First Search', 'Binary Tree']",66.70%,Medium
1121,Divide Array Into Increasing Sequences,"['Array', 'Counting']",60.90%,Hard
1122,Relative Sort Array,"['Array', 'Hash Table', 'Sorting', 'Counting Sort']",74.80%,Easy
1123,Lowest Common Ancestor of Deepest Leaves,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",72.80%,Medium
1124,Longest Well-Performing Interval,"['Array', 'Hash Table', 'Stack', 'Monotonic Stack', 'Prefix Sum']",35.50%,Medium
1125,Smallest Sufficient Team,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",55.50%,Hard
1126,Active Businesses,['Database'],65.80%,Medium
1127,User Purchase Platform,['Database'],46.90%,Hard
1128,Number of Equivalent Domino Pairs,"['Array', 'Hash Table', 'Counting']",48.70%,Easy
1129,Shortest Path with Alternating Colors,"['Breadth-First Search', 'Graph']",47.10%,Medium
1130,Minimum Cost Tree From Leaf Values,"['Array', 'Dynamic Programming', 'Stack', 'Greedy', 'Monotonic Stack']",67.80%,Medium
1131,Maximum of Absolute Value Expression,"['Array', 'Math']",48.50%,Medium
1132,Reported Posts II,['Database'],32.30%,Medium
1133,Largest Unique Number,"['Array', 'Hash Table', 'Sorting']",70.50%,Easy
1134,Armstrong Number,['Math'],77.80%,Easy
1135,Connecting Cities With Minimum Cost,"['Union Find', 'Graph']",62.20%,Medium
1136,Parallel Courses,"['Graph', 'Topological Sort']",61.60%,Medium
1137,N-th Tribonacci Number,"['Math', 'Dynamic Programming', 'Memoization']",63.70%,Easy
1138,Alphabet Board Path,"['Hash Table', 'String']",51.60%,Medium
1139,Largest 1-Bordered Square,"['Array', 'Dynamic Programming', 'Matrix']",50.50%,Medium
1140,Stone Game II,"['Array', 'Math', 'Dynamic Programming', 'Prefix Sum', 'Game Theory']",73.20%,Medium
1141,User Activity for the Past 30 Days I,['Database'],49.20%,Easy
1142,User Activity for the Past 30 Days II,['Database'],35.70%,Easy
1143,Longest Common Subsequence,"['String', 'Dynamic Programming']",57.80%,Medium
1144,Decrease Elements To Make Array Zigzag,"['Array', 'Greedy']",48.20%,Medium
1145,Binary Tree Coloring Game,"['Tree', 'Depth-First Search', 'Binary Tree']",52.30%,Medium
1146,Snapshot Array,"['Array', 'Hash Table', 'Binary Search', 'Design']",36.80%,Medium
1147,Longest Chunked Palindrome Decomposition,"['Two Pointers', 'String', 'Dynamic Programming', 'Greedy', 'Rolling Hash', 'Hash Function']",58.80%,Hard
1148,Article Views I,['Database'],76.70%,Easy
1149,Article Views II,['Database'],47.10%,Medium
1150,Check If a Number Is Majority Element in a Sorted Array,"['Array', 'Binary Search']",59.10%,Easy
1151,Minimum Swaps to Group All 1's Together,"['Array', 'Sliding Window']",60.30%,Medium
1152,Analyze User Website Visit Pattern,"['Array', 'Hash Table', 'Sorting']",42.80%,Medium
1153,String Transforms Into Another String,"['Hash Table', 'String']",34.90%,Hard
1154,Day of the Year,"['Math', 'String']",49.00%,Easy
1155,Number of Dice Rolls With Target Sum,['Dynamic Programming'],61.30%,Medium
1156,Swap For Longest Repeated Character Substring,"['Hash Table', 'String', 'Sliding Window']",43.90%,Medium
1157,Online Majority Element In Subarray,"['Array', 'Binary Search', 'Design', 'Binary Indexed Tree', 'Segment Tree']",42.00%,Hard
1158,Market Analysis I,['Database'],57.20%,Medium
1159,Market Analysis II,['Database'],57.40%,Hard
1160,Find Words That Can Be Formed by Characters,"['Array', 'Hash Table', 'String', 'Counting']",70.70%,Easy
1161,Maximum Level Sum of a Binary Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",67.20%,Medium
1162,As Far from Land as Possible,"['Array', 'Dynamic Programming', 'Breadth-First Search', 'Matrix']",51.70%,Medium
1163,Last Substring in Lexicographical Order,"['Two Pointers', 'String']",34.50%,Hard
1164,Product Price at a Given Date,['Database'],56.80%,Medium
1165,Single-Row Keyboard,"['Hash Table', 'String']",87.60%,Easy
1166,Design File System,"['Hash Table', 'String', 'Design']",63.40%,Medium
1167,Minimum Cost to Connect Sticks,"['Array', 'Greedy', 'Heap (Priority Queue)']",70.50%,Medium
1168,Optimize Water Distribution in a Village,"['Union Find', 'Graph']",64.90%,Hard
1169,Invalid Transactions,"['Array', 'Hash Table', 'String', 'Sorting']",31.00%,Medium
1170,Compare Strings by Frequency of the Smallest Character,"['Array', 'Hash Table', 'String', 'Binary Search', 'Sorting']",62.60%,Medium
1171,Remove Zero Sum Consecutive Nodes from Linked List,"['Hash Table', 'Linked List']",52.70%,Medium
1172,Dinner Plate Stacks,"['Hash Table', 'Stack', 'Design', 'Heap (Priority Queue)']",32.60%,Hard
1173,Immediate Food Delivery I,['Database'],80.90%,Easy
1174,Immediate Food Delivery II,['Database'],52.90%,Medium
1175,Prime Arrangements,['Math'],58.30%,Easy
1176,Diet Plan Performance,"['Array', 'Sliding Window']",53.70%,Easy
1177,Can Make Palindrome from Substring,"['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Prefix Sum']",39.60%,Medium
1178,Number of Valid Words for Each Puzzle,"['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Trie']",46.80%,Hard
1179,Reformat Department Table,['Database'],76.90%,Easy
1180,Count Substrings with Only One Distinct Letter,"['Math', 'String']",80.20%,Easy
1181,Before and After Puzzle,"['Array', 'Hash Table', 'String']",46.10%,Medium
1182,Shortest Distance to Target Color,"['Array', 'Binary Search']",55.40%,Medium
1183,Maximum Number of Ones,"['Greedy', 'Heap (Priority Queue)']",68.40%,Hard
1184,Distance Between Bus Stops,['Array'],54.30%,Easy
1185,Day of the Week,['Math'],57.90%,Easy
1186,Maximum Subarray Sum with One Deletion,"['Array', 'Dynamic Programming']",44.40%,Medium
1187,Make Array Strictly Increasing,"['Array', 'Binary Search', 'Dynamic Programming', 'Sorting']",58.00%,Hard
1188,Design Bounded Blocking Queue,['Concurrency'],72.60%,Medium
1189,Maximum Number of Balloons,"['Hash Table', 'String', 'Counting']",59.70%,Easy
1190,Reverse Substrings Between Each Pair of Parentheses,"['String', 'Stack']",71.80%,Medium
1191,K-Concatenation Maximum Sum,"['Array', 'Dynamic Programming']",24.00%,Medium
1192,Critical Connections in a Network,"['Depth-First Search', 'Graph', 'Biconnected Component']",56.80%,Hard
1193,Monthly Transactions I,['Database'],58.30%,Medium
1194,Tournament Winners,['Database'],49.30%,Hard
1195,Fizz Buzz Multithreaded,['Concurrency'],73.00%,Medium
1196,How Many Apples Can You Put into the Basket,"['Array', 'Greedy', 'Sorting']",67.00%,Easy
1197,Minimum Knight Moves,['Breadth-First Search'],40.80%,Medium
1198,Find Smallest Common Element in All Rows,"['Array', 'Hash Table', 'Binary Search']",76.40%,Medium
1199,Minimum Time to Build Blocks,"['Array', 'Math', 'Greedy']",45.90%,Hard
1200,Minimum Absolute Difference,"['Array', 'Sorting']",69.90%,Easy
1201,Ugly Number III,"['Math', 'Binary Search', 'Combinatorics', 'Number Theory']",30.00%,Medium
1202,Smallest String With Swaps,"['Array', 'Hash Table', 'String', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Sorting']",58.80%,Medium
1203,Sort Items by Groups Respecting Dependencies,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",66.00%,Hard
1204,Last Person to Fit in the Bus,['Database'],67.90%,Medium
1205,Monthly Transactions II,['Database'],41.70%,Medium
1206,Design Skiplist,"['Linked List', 'Design']",61.70%,Hard
1207,Unique Number of Occurrences,"['Array', 'Hash Table']",77.70%,Easy
1208,Get Equal Substrings Within Budget,"['String', 'Binary Search', 'Sliding Window', 'Prefix Sum']",58.40%,Medium
1209,Remove All Adjacent Duplicates in String II,"['String', 'Stack']",58.50%,Medium
1210,Minimum Moves to Reach Target with Rotations,"['Array', 'Breadth-First Search', 'Matrix']",50.30%,Hard
1211,Queries Quality and Percentage,['Database'],43.90%,Easy
1212,Team Scores in Football Tournament,['Database'],55.50%,Medium
1213,Intersection of Three Sorted Arrays,"['Array', 'Hash Table', 'Binary Search']",79.80%,Easy
1214,Two Sum BSTs,"['Two Pointers', 'Binary Search', 'Stack']",67.20%,Medium
1215,Stepping Numbers,"['Math', 'Backtracking', 'Breadth-First Search']",47.50%,Medium
1216,Valid Palindrome III,"['String', 'Dynamic Programming']",49.20%,Hard
1217,Minimum Cost to Move Chips to The Same Position,"['Array', 'Math', 'Greedy']",71.80%,Easy
1218,Longest Arithmetic Subsequence of Given Difference,"['Array', 'Hash Table', 'Dynamic Programming']",54.50%,Medium
1219,Path with Maximum Gold,"['Array', 'Backtracking', 'Matrix']",68.10%,Medium
1220,Count Vowels Permutation,['Dynamic Programming'],61.70%,Hard
1221,Split a String in Balanced Strings,"['String', 'Greedy', 'Counting']",86.50%,Easy
1222,Queens That Can Attack the King,"['Array', 'Matrix', 'Simulation']",72.10%,Medium
1223,Dice Roll Simulation,"['Array', 'Dynamic Programming']",49.60%,Hard
1224,Maximum Equal Frequency,"['Array', 'Hash Table']",37.40%,Hard
1225,Report Contiguous Dates,['Database'],57.20%,Hard
1226,The Dining Philosophers,['Concurrency'],54.40%,Medium
1227,Airplane Seat Assignment Probability,"['Math', 'Dynamic Programming', 'Brainteaser', 'Probability and Statistics']",66.60%,Medium
1228,Missing Number In Arithmetic Progression,"['Array', 'Math']",52.00%,Easy
1229,Meeting Scheduler,"['Array', 'Two Pointers', 'Sorting']",55.30%,Medium
1230,Toss Strange Coins,"['Array', 'Math']",58.20%,Medium
1231,Divide Chocolate,"['Array', 'Binary Search']",59.10%,Hard
1232,Check If It Is a Straight Line,"['Array', 'Math', 'Geometry']",39.50%,Easy
1233,Remove Sub-Folders from the Filesystem,"['Array', 'String', 'Depth-First Search', 'Trie']",75.50%,Medium
1234,Replace the Substring for Balanced String,"['String', 'Sliding Window']",38.70%,Medium
1235,Maximum Profit in Job Scheduling,"['Array', 'Binary Search', 'Dynamic Programming', 'Sorting']",54.30%,Hard
1236,Web Crawler,"['String', 'Depth-First Search']",68.10%,Medium
1237,Find Positive Integer Solution for a Given Equation,"['Math', 'Two Pointers', 'Binary Search', 'Interactive']",69.70%,Medium
1238,Circular Permutation in Binary Representation,"['Math', 'Backtracking', 'Bit Manipulation']",71.00%,Medium
1239,Maximum Length of a Concatenated String with Unique Characters,"['Array', 'String', 'Backtracking', 'Bit Manipulation']",54.10%,Medium
1240,Tiling a Rectangle with the Fewest Squares,['Backtracking'],54.30%,Hard
1241,Number of Comments per Post,['Database'],66.00%,Easy
1242,Web Crawler Multithreaded,"['Depth-First Search']",49.60%,Medium
1243,Array Transformation,"['Array', 'Simulation']",52.60%,Easy
1244,Design A Leaderboard,"['Hash Table', 'Design', 'Sorting']",67.90%,Medium
1245,Tree Diameter,"['Tree', 'Depth-First Search']",61.10%,Medium
1246,Palindrome Removal,"['Array', 'Dynamic Programming']",46.30%,Hard
1247,Minimum Swaps to Make Strings Equal,"['Math', 'String', 'Greedy']",64.50%,Medium
1248,Count Number of Nice Subarrays,"['Array', 'Hash Table', 'Math', 'Sliding Window', 'Prefix Sum']",71.70%,Medium
1249,Minimum Remove to Make Valid Parentheses,"['String', 'Stack']",69.60%,Medium
1250,Check If It Is a Good Array,"['Array', 'Math', 'Number Theory']",60.00%,Hard
1251,Average Selling Price,['Database'],37.20%,Easy
1252,Cells with Odd Values in a Matrix,"['Array', 'Math', 'Simulation']",78.90%,Easy
1253,Reconstruct a 2-Row Binary Matrix,"['Array', 'Greedy', 'Matrix']",47.10%,Medium
1254,Number of Closed Islands,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",66.50%,Medium
1255,Maximum Score Words Formed by Letters,"['Array', 'String', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",81.90%,Hard
1256,Encode Number,"['Math', 'String', 'Bit Manipulation']",70.00%,Medium
1257,Smallest Common Region,"['Array', 'Hash Table', 'String']",68.00%,Medium
1258,Synonymous Sentences,"['Array', 'Hash Table', 'String']",56.40%,Medium
1259,Handshakes That Don't Cross,"['Math', 'Dynamic Programming']",59.70%,Hard
1260,Shift 2D Grid,"['Array', 'Matrix', 'Simulation']",67.50%,Easy
1261,Find Elements in a Contaminated Binary Tree,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design', 'Binary Tree']",77.60%,Medium
1262,Greatest Sum Divisible by Three,"['Array', 'Dynamic Programming', 'Greedy', 'Sorting']",50.60%,Medium
1263,Minimum Moves to Move a Box to Their Target Location,"['Array', 'Breadth-First Search', 'Heap (Priority Queue)', 'Matrix']",49.20%,Hard
1264,Page Recommendations,['Database'],65.30%,Medium
1265,Print Immutable Linked List in Reverse,"['Linked List', 'Two Pointers', 'Stack']",94.00%,Medium
1266,Minimum Time Visiting All Points,"['Array', 'Math', 'Geometry']",82.40%,Easy
1267,Count Servers that Communicate,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix', 'Counting']",60.80%,Medium
1268,Search Suggestions System,"['Array', 'String', 'Binary Search', 'Trie', 'Sorting', 'Heap (Priority Queue)']",65.10%,Medium
1269,Number of Ways to Stay in the Same Place After Some Steps,['Dynamic Programming'],50.20%,Hard
1270,All People Report to the Given Manager,['Database'],84.40%,Medium
1271,Hexspeak,"['Math', 'String']",58.30%,Easy
1272,Remove Interval,['Array'],66.40%,Medium
1273,Delete Tree Nodes,"['Array', 'Tree', 'Depth-First Search']",61.20%,Medium
1274,Number of Ships in a Rectangle,"['Array', 'Divide and Conquer', 'Interactive']",68.70%,Hard
1275,Find Winner on a Tic Tac Toe Game,"['Array', 'Hash Table', 'Matrix', 'Simulation']",53.90%,Easy
1276,Number of Burgers with No Waste of Ingredients,['Math'],51.30%,Medium
1277,Count Square Submatrices with All Ones,"['Array', 'Dynamic Programming', 'Matrix']",78.40%,Medium
1278,Palindrome Partitioning III,"['String', 'Dynamic Programming']",61.30%,Hard
1279,Traffic Light Controlled Intersection,['Concurrency'],72.70%,Easy
1280,Students and Examinations,['Database'],59.40%,Easy
1281,Subtract the Product and Sum of Digits of an Integer,['Math'],86.60%,Easy
1282,Group the People Given the Group Size They Belong To,"['Array', 'Hash Table', 'Greedy']",87.40%,Medium
1283,Find the Smallest Divisor Given a Threshold,"['Array', 'Binary Search']",61.70%,Medium
1284,Minimum Number of Flips to Convert Binary Matrix to Zero Matrix,"['Array', 'Hash Table', 'Bit Manipulation', 'Breadth-First Search', 'Matrix']",72.40%,Hard
1285,Find the Start and End Number of Continuous Ranges,['Database'],82.00%,Medium
1286,Iterator for Combination,"['String', 'Backtracking', 'Design', 'Iterator']",73.40%,Medium
1287,Element Appearing More Than 25% In Sorted Array,['Array'],61.00%,Easy
1288,Remove Covered Intervals,"['Array', 'Sorting']",56.20%,Medium
1289,Minimum Falling Path Sum II,"['Array', 'Dynamic Programming', 'Matrix']",64.30%,Hard
1290,Convert Binary Number in a Linked List to Integer,"['Linked List', 'Math']",81.20%,Easy
1291,Sequential Digits,['Enumeration'],65.30%,Medium
1292,Maximum Side Length of a Square with Sum Less than or Equal to Threshold,"['Array', 'Binary Search', 'Matrix', 'Prefix Sum']",53.80%,Medium
1293,Shortest Path in a Grid with Obstacles Elimination,"['Array', 'Breadth-First Search', 'Matrix']",45.30%,Hard
1294,Weather Type in Each Country,['Database'],66.80%,Easy
1295,Find Numbers with Even Number of Digits,"['Array', 'Math']",77.50%,Easy
1296,Divide Array in Sets of K Consecutive Numbers,"['Array', 'Hash Table', 'Greedy', 'Sorting']",58.50%,Medium
1297,Maximum Number of Occurrences of a Substring,"['Hash Table', 'String', 'Sliding Window']",52.40%,Medium
1298,Maximum Candies You Can Get from Boxes,"['Array', 'Breadth-First Search', 'Graph']",57.80%,Hard
1299,Replace Elements with Greatest Element on Right Side,['Array'],71.30%,Easy
1300,Sum of Mutated Array Closest to Target,"['Array', 'Binary Search', 'Sorting']",44.90%,Medium
1301,Number of Paths with Max Score,"['Array', 'Dynamic Programming', 'Matrix']",40.10%,Hard
1302,Deepest Leaves Sum,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",86.30%,Medium
1303,Find the Team Size,['Database'],89.60%,Easy
1304,Find N Unique Integers Sum up to Zero,"['Array', 'Math']",76.20%,Easy
1305,All Elements in Two Binary Search Trees,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Sorting', 'Binary Tree']",79.90%,Medium
1306,Jump Game III,"['Array', 'Depth-First Search', 'Breadth-First Search']",65.40%,Medium
1307,Verbal Arithmetic Puzzle,"['Array', 'Math', 'String', 'Backtracking']",34.60%,Hard
1308,Running Total for Different Genders,['Database'],86.30%,Medium
1309,Decrypt String from Alphabet to Integer Mapping,['String'],80.00%,Easy
1310,XOR Queries of a Subarray,"['Array', 'Bit Manipulation', 'Prefix Sum']",78.70%,Medium
1311,Get Watched Videos by Your Friends,"['Array', 'Hash Table', 'Breadth-First Search', 'Graph', 'Sorting']",48.10%,Medium
1312,Minimum Insertion Steps to Make a String Palindrome,"['String', 'Dynamic Programming']",71.50%,Hard
1313,Decompress Run-Length Encoded List,['Array'],85.90%,Easy
1314,Matrix Block Sum,"['Array', 'Matrix', 'Prefix Sum']",75.70%,Medium
1315,Sum of Nodes with Even-Valued Grandparent,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",85.60%,Medium
1316,Distinct Echo Substrings,"['String', 'Trie', 'Rolling Hash', 'Hash Function']",51.20%,Hard
1317,Convert Integer to the Sum of Two No-Zero Integers,['Math'],53.90%,Easy
1318,Minimum Flips to Make a OR b Equal to c,['Bit Manipulation'],71.20%,Medium
1319,Number of Operations to Make Network Connected,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",63.60%,Medium
1320,Minimum Distance to Type a Word Using Two Fingers,"['String', 'Dynamic Programming']",59.00%,Hard
1321,Restaurant Growth,['Database'],54.00%,Medium
1322,Ads Performance,['Database'],59.50%,Easy
1323,Maximum 69 Number,"['Math', 'Greedy']",82.50%,Easy
1324,Print Words Vertically,"['Array', 'String', 'Simulation']",65.10%,Medium
1325,Delete Leaves With a Given Value,"['Tree', 'Depth-First Search', 'Binary Tree']",77.40%,Medium
1326,Minimum Number of Taps to Open to Water a Garden,"['Array', 'Dynamic Programming', 'Greedy']",50.70%,Hard
1327,List the Products Ordered in a Period,['Database'],71.50%,Easy
1328,Break a Palindrome,"['String', 'Greedy']",51.70%,Medium
1329,Sort the Matrix Diagonally,"['Array', 'Sorting', 'Matrix']",82.90%,Medium
1330,Reverse Subarray To Maximize Array Value,"['Array', 'Math', 'Greedy']",42.00%,Hard
1331,Rank Transform of an Array,"['Array', 'Hash Table', 'Sorting']",70.50%,Easy
1332,Remove Palindromic Subsequences,"['Two Pointers', 'String']",76.60%,Easy
1333," Filter Restaurants by Vegan-Friendly,Price and Distance","['Array', 'Sorting']",62.20%,Medium
1334,Find the City With the Smallest Number of Neighbors at a Threshold Distance,"['Dynamic Programming', 'Graph', 'Shortest Path']",68.70%,Medium
1335,Minimum Difficulty of a Job Schedule,"['Array', 'Dynamic Programming']",59.60%,Hard
1336,Number of Transactions per Visit,['Database'],47.70%,Hard
1337,The K Weakest Rows in a Matrix,"['Array', 'Binary Search', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",73.70%,Easy
1338,Reduce Array Size to The Half,"['Array', 'Hash Table', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",69.00%,Medium
1339,Maximum Product of Splitted Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",47.80%,Medium
1340,Jump Game V,"['Array', 'Dynamic Programming', 'Sorting']",63.80%,Hard
1341,Movie Rating,['Database'],40.70%,Medium
1342,Number of Steps to Reduce a Number to Zero,"['Math', 'Bit Manipulation']",85.40%,Easy
1343,Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold,"['Array', 'Sliding Window']",69.20%,Medium
1344,Angle Between Hands of a Clock,['Math'],64.00%,Medium
1345,Jump Game IV,"['Array', 'Hash Table', 'Breadth-First Search']",46.10%,Hard
1346,Check If N and Its Double Exist,"['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Sorting']",37.50%,Easy
1347,Minimum Number of Steps to Make Two Strings Anagram,"['Hash Table', 'String', 'Counting']",82.10%,Medium
1348,Tweet Counts Per Frequency,"['Hash Table', 'Binary Search', 'Design', 'Sorting', 'Ordered Set']",44.80%,Medium
1349,Maximum Students Taking Exam,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Matrix', 'Bitmask']",51.30%,Hard
1350,Students With Invalid Departments,['Database'],89.80%,Easy
1351,Count Negative Numbers in a Sorted Matrix,"['Array', 'Binary Search', 'Matrix']",77.50%,Easy
1352,Product of the Last K Numbers,"['Array', 'Math', 'Design', 'Data Stream', 'Prefix Sum']",52.00%,Medium
1353,Maximum Number of Events That Can Be Attended,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",32.50%,Medium
1354,Construct Target Array With Multiple Sums,"['Array', 'Heap (Priority Queue)']",36.20%,Hard
1355,Activity Participants,['Database'],72.30%,Medium
1356,Sort Integers by The Number of 1 Bits,"['Array', 'Bit Manipulation', 'Sorting', 'Counting']",78.40%,Easy
1357,Apply Discount Every n Orders,"['Array', 'Hash Table', 'Design']",71.60%,Medium
1358,Number of Substrings Containing All Three Characters,"['Hash Table', 'String', 'Sliding Window']",68.10%,Medium
1359,Count All Valid Pickup and Delivery Options,"['Math', 'Dynamic Programming', 'Combinatorics']",64.90%,Hard
1360,Number of Days Between Two Dates,"['Math', 'String']",50.70%,Easy
1361,Validate Binary Tree Nodes,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph', 'Binary Tree']",43.80%,Medium
1362,Closest Divisors,['Math'],61.20%,Medium
1363,Largest Multiple of Three,"['Array', 'Dynamic Programming', 'Greedy']",32.70%,Hard
1364,Number of Trusted Contacts of a Customer,['Database'],74.90%,Medium
1365,How Many Numbers Are Smaller Than the Current Number,"['Array', 'Hash Table', 'Sorting', 'Counting Sort']",87.00%,Easy
1366,Rank Teams by Votes,"['Array', 'Hash Table', 'String', 'Sorting', 'Counting']",58.70%,Medium
1367,Linked List in Binary Tree,"['Linked List', 'Tree', 'Depth-First Search', 'Binary Tree']",52.10%,Medium
1368,Minimum Cost to Make at Least One Valid Path in a Grid,"['Array', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",62.60%,Hard
1369,Get the Second Most Recent Activity,['Database'],67.60%,Hard
1370,Increasing Decreasing String,"['Hash Table', 'String', 'Counting']",76.70%,Easy
1371,Find the Longest Substring Containing Vowels in Even Counts,"['Hash Table', 'String', 'Bit Manipulation', 'Prefix Sum']",76.30%,Medium
1372,Longest ZigZag Path in a Binary Tree,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Tree']",66.00%,Medium
1373,Maximum Sum BST in Binary Tree,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",42.40%,Hard
1374,Generate a String With Characters That Have Odd Counts,['String'],78.10%,Easy
1375,Number of Times Binary String Is Prefix-Aligned,['Array'],65.80%,Medium
1376,Time Needed to Inform All Employees,"['Tree', 'Depth-First Search', 'Breadth-First Search']",60.10%,Medium
1377,Frog Position After T Seconds,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Graph']",35.60%,Hard
1378,Replace Employee ID With The Unique Identifier,['Database'],83.60%,Easy
1379,Find a Corresponding Node of a Binary Tree in a Clone of That Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",85.90%,Easy
1380,Lucky Numbers in a Matrix,"['Array', 'Matrix']",79.90%,Easy
1381,Design a Stack With Increment Operation,"['Array', 'Stack', 'Design']",80.60%,Medium
1382,Balance a Binary Search Tree,"['Divide and Conquer', 'Greedy', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",84.70%,Medium
1383,Maximum Performance of a Team,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",47.60%,Hard
1384,Total Sales Amount by Year,['Database'],60.90%,Hard
1385,Find the Distance Value Between Two Arrays,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",69.20%,Easy
1386,Cinema Seat Allocation,"['Array', 'Hash Table', 'Greedy', 'Bit Manipulation']",42.30%,Medium
1387,Sort Integers by The Power Value,"['Dynamic Programming', 'Memoization', 'Sorting']",70.30%,Medium
1388,Pizza With 3n Slices,"['Array', 'Dynamic Programming', 'Greedy', 'Heap (Priority Queue)']",52.30%,Hard
1389,Create Target Array in the Given Order,"['Array', 'Simulation']",86.10%,Easy
1390,Four Divisors,"['Array', 'Math']",43.70%,Medium
1391,Check if There is a Valid Path in a Grid,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",48.40%,Medium
1392,Longest Happy Prefix,"['String', 'Rolling Hash', 'String Matching', 'Hash Function']",47.10%,Hard
1393,Capital Gain/Loss,['Database'],85.30%,Medium
1394,Find Lucky Integer in an Array,"['Array', 'Hash Table', 'Counting']",68.10%,Easy
1395,Count Number of Teams,"['Array', 'Dynamic Programming', 'Binary Indexed Tree', 'Segment Tree']",70.10%,Medium
1396,Design Underground System,"['Hash Table', 'String', 'Design']",74.70%,Medium
1397,Find All Good Strings,"['String', 'Dynamic Programming', 'String Matching']",43.00%,Hard
1398,Customers Who Bought Products A and B but Not C,['Database'],72.40%,Medium
1399,Count Largest Group,"['Hash Table', 'Math']",66.50%,Easy
1400,Construct K Palindrome Strings,"['Hash Table', 'String', 'Greedy', 'Counting']",62.20%,Medium
1401,Circle and Rectangle Overlapping,"['Math', 'Geometry']",47.00%,Medium
1402,Reducing Dishes,"['Array', 'Dynamic Programming', 'Greedy', 'Sorting']",76.30%,Hard
1403,Minimum Subsequence in Non-Increasing Order,"['Array', 'Greedy', 'Sorting']",72.80%,Easy
1404,Number of Steps to Reduce a Number in Binary Representation to One,"['String', 'Bit Manipulation']",61.50%,Medium
1405,Longest Happy String,"['String', 'Greedy', 'Heap (Priority Queue)']",65.50%,Medium
1406,Stone Game III,"['Array', 'Math', 'Dynamic Programming', 'Game Theory']",63.60%,Hard
1407,Top Travellers,['Database'],57.40%,Easy
1408,String Matching in an Array,"['Array', 'String', 'String Matching']",64.20%,Easy
1409,Queries on a Permutation With Key,"['Array', 'Binary Indexed Tree', 'Simulation']",84.50%,Medium
1410,HTML Entity Parser,"['Hash Table', 'String']",50.80%,Medium
1411,Number of Ways to Paint N x 3 Grid,['Dynamic Programming'],64.00%,Hard
1412,Find the Quiet Students in All Exams,['Database'],58.80%,Hard
1413,Minimum Value to Get Positive Step by Step Sum,"['Array', 'Prefix Sum']",65.10%,Easy
1414,Find the Minimum Number of Fibonacci Numbers Whose Sum Is K,"['Math', 'Greedy']",65.50%,Medium
1415,The k-th Lexicographical String of All Happy Strings of Length n,"['String', 'Backtracking']",75.20%,Medium
1416,Restore The Array,"['String', 'Dynamic Programming']",47.30%,Hard
1417,Reformat The String,['String'],52.50%,Easy
1418,Display Table of Food Orders in a Restaurant,"['Array', 'Hash Table', 'String', 'Sorting', 'Ordered Set']",75.40%,Medium
1419,Minimum Number of Frogs Croaking,"['String', 'Counting']",50.50%,Medium
1420,Build Array Where You Can Find The Maximum Exactly K Comparisons,"['Dynamic Programming', 'Prefix Sum']",67.90%,Hard
1421,NPV Queries,['Database'],82.90%,Easy
1422,Maximum Score After Splitting a String,"['String', 'Prefix Sum']",62.20%,Easy
1423,Maximum Points You Can Obtain from Cards,"['Array', 'Sliding Window', 'Prefix Sum']",54.20%,Medium
1424,Diagonal Traverse II,"['Array', 'Sorting', 'Heap (Priority Queue)']",57.20%,Medium
1425,Constrained Subsequence Sum,"['Array', 'Dynamic Programming', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Monotonic Queue']",56.50%,Hard
1426,Counting Elements,"['Array', 'Hash Table']",60.30%,Easy
1427,Perform String Shifts,"['Array', 'Math', 'String']",54.90%,Easy
1428,Leftmost Column with at Least a One,"['Array', 'Binary Search', 'Matrix']",54.70%,Medium
1429,First Unique Number,"['Array', 'Hash Table', 'Design']",54.90%,Medium
1430,Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree,"['Tree', 'Depth-First Search']",47.10%,Medium
1431,Kids With the Greatest Number of Candies,['Array'],87.80%,Easy
1432,Max Difference You Can Get From Changing an Integer,"['Math', 'Greedy']",41.00%,Medium
1433,Check If a String Can Break Another String,"['String', 'Greedy', 'Sorting']",70.00%,Medium
1434,Number of Ways to Wear Different Hats to Each Other,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",44.50%,Hard
1435,Create a Session Bar Chart,['Database'],74.90%,Easy
1436,Destination City,"['Array', 'Hash Table', 'String']",79.50%,Easy
1437,Check If All 1's Are at Least Length K Places Away,['Array'],58.20%,Easy
1438,Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit,"['Array', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Ordered Set', 'Monotonic Queue']",56.60%,Medium
1439,Find the Kth Smallest Sum of a Matrix With Sorted Rows,"['Array', 'Binary Search', 'Heap (Priority Queue)', 'Matrix']",62.10%,Hard
1440,Evaluate Boolean Expression,['Database'],72.60%,Medium
1441,Build an Array With Stack Operations,"['Array', 'Stack', 'Simulation']",80.10%,Medium
1442,Count Triplets That Can Form Two Arrays of Equal XOR,"['Array', 'Hash Table', 'Math', 'Bit Manipulation', 'Prefix Sum']",84.90%,Medium
1443,Minimum Time to Collect All Apples in a Tree,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search']",62.60%,Medium
1444,Number of Ways of Cutting a Pizza,"['Array', 'Dynamic Programming', 'Memoization', 'Matrix', 'Prefix Sum']",61.90%,Hard
1445,Apples & Oranges,['Database'],86.00%,Medium
1446,Consecutive Characters,['String'],60.20%,Easy
1447,Simplified Fractions,"['Math', 'String', 'Number Theory']",67.50%,Medium
1448,Count Good Nodes in Binary Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",73.10%,Medium
1449,Form Largest Integer With Digits That Add up to Target,"['Array', 'Dynamic Programming']",48.50%,Hard
1450,Number of Students Doing Homework at a Given Time,['Array'],75.80%,Easy
1451,Rearrange Words in a Sentence,"['String', 'Sorting']",65.20%,Medium
1452,People Whose List of Favorite Companies Is Not a Subset of Another List,"['Array', 'Hash Table', 'String']",58.70%,Medium
1453,Maximum Number of Darts Inside of a Circular Dartboard,"['Array', 'Math', 'Geometry']",38.70%,Hard
1454,Active Users,['Database'],36.70%,Medium
1455,Check If a Word Occurs As a Prefix of Any Word in a Sentence,"['Two Pointers', 'String', 'String Matching']",64.60%,Easy
1456,Maximum Number of Vowels in a Substring of Given Length,"['String', 'Sliding Window']",59.20%,Medium
1457,Pseudo-Palindromic Paths in a Binary Tree,"['Bit Manipulation', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",68.30%,Medium
1458,Max Dot Product of Two Subsequences,"['Array', 'Dynamic Programming']",62.40%,Hard
1459,Rectangles Area,['Database'],68.50%,Medium
1460,Make Two Arrays Equal by Reversing Subarrays,"['Array', 'Hash Table', 'Sorting']",76.00%,Easy
1461,Check If a String Contains All Binary Codes of Size K,"['Hash Table', 'String', 'Bit Manipulation', 'Rolling Hash', 'Hash Function']",56.60%,Medium
1462,Course Schedule IV,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",50.30%,Medium
1463,Cherry Pickup II,"['Array', 'Dynamic Programming', 'Matrix']",71.90%,Hard
1464,Maximum Product of Two Elements in an Array,"['Array', 'Sorting', 'Heap (Priority Queue)']",83.00%,Easy
1465,Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts,"['Array', 'Greedy', 'Sorting']",41.10%,Medium
1466,Reorder Routes to Make All Paths Lead to the City Zero,"['Depth-First Search', 'Breadth-First Search', 'Graph']",64.50%,Medium
1467,Probability of a Two Boxes Having The Same Number of Distinct Balls,"['Array', 'Math', 'Dynamic Programming', 'Backtracking', 'Combinatorics', 'Probability and Statistics']",60.20%,Hard
1468,Calculate Salaries,['Database'],78.40%,Medium
1469,Find All The Lonely Nodes,"['Tree', 'Depth-First Search']",83.80%,Easy
1470,Shuffle the Array,['Array'],88.70%,Easy
1471,The k Strongest Values in an Array,"['Array', 'Two Pointers', 'Sorting']",61.50%,Medium
1472,Design Browser History,"['Array', 'Linked List', 'Stack', 'Design', 'Doubly-Linked List', 'Data Stream']",77.70%,Medium
1473,Paint House III,"['Array', 'Dynamic Programming']",61.00%,Hard
1474,Delete N Nodes After M Nodes of a Linked List,['Linked List'],73.40%,Easy
1475,Final Prices With a Special Discount in a Shop,"['Array', 'Stack', 'Monotonic Stack']",78.70%,Easy
1476,Subrectangle Queries,"['Array', 'Design', 'Matrix']",88.20%,Medium
1477,Find Two Non-overlapping Sub-arrays Each With Target Sum,"['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming', 'Sliding Window']",36.50%,Medium
1478,Allocate Mailboxes,"['Array', 'Math', 'Dynamic Programming', 'Sorting']",55.60%,Hard
1479,Sales by Day of the Week,['Database'],77.50%,Hard
1480,Running Sum of 1d Array,"['Array', 'Prefix Sum']",86.90%,Easy
1481,Least Number of Unique Integers after K Removals,"['Array', 'Hash Table', 'Greedy', 'Sorting', 'Counting']",63.20%,Medium
1482,Minimum Number of Days to Make m Bouquets,"['Array', 'Binary Search']",55.50%,Medium
1483,Kth Ancestor of a Tree Node,"['Binary Search', 'Dynamic Programming', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design']",35.10%,Hard
1484,Group Sold Products By The Date,['Database'],77.40%,Easy
1485,Clone Binary Tree With Random Pointer,"['Hash Table', 'Tree']",80.70%,Medium
1486,XOR Operation in an Array,"['Math', 'Bit Manipulation']",86.30%,Easy
1487,Making File Names Unique,"['Array', 'Hash Table', 'String']",37.40%,Medium
1488,Avoid Flood in The City,"['Array', 'Hash Table', 'Binary Search', 'Greedy', 'Heap (Priority Queue)']",27.10%,Medium
1489,Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree,"['Union Find', 'Graph', 'Sorting', 'Minimum Spanning Tree', 'Strongly Connected Component']",67.20%,Hard
1490,Clone N-ary Tree,"['Hash Table', 'Tree']",83.10%,Medium
1491,Average Salary Excluding the Minimum and Maximum Salary,"['Array', 'Sorting']",63.50%,Easy
1492,The kth Factor of n,"['Math', 'Number Theory']",68.60%,Medium
1493,Longest Subarray of 1's After Deleting One Element,"['Array', 'Dynamic Programming', 'Sliding Window']",68.10%,Medium
1494,Parallel Courses II,"['Dynamic Programming', 'Bit Manipulation', 'Graph', 'Bitmask']",29.60%,Hard
1495,Friendly Movies Streamed Last Month,['Database'],49.00%,Easy
1496,Path Crossing,"['Hash Table', 'String']",62.50%,Easy
1497,Check If Array Pairs Are Divisible by k,"['Array', 'Hash Table', 'Counting']",46.20%,Medium
1498,Number of Subsequences That Satisfy the Given Sum Condition,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",43.60%,Medium
1499,Max Value of Equation,"['Array', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Monotonic Queue']",44.20%,Hard
1500,Design a File Sharing System,"['Hash Table', 'Design', 'Sorting']",42.50%,Medium
1501,Countries You Can Safely Invest In,['Database'],50.30%,Medium
1502,Can Make Arithmetic Progression From Sequence,"['Array', 'Sorting']",69.50%,Easy
1503,Last Moment Before All Ants Fall Out of a Plank,"['Array', 'Brainteaser', 'Simulation']",68.50%,Medium
1504,Count Submatrices With All Ones,"['Array', 'Dynamic Programming', 'Stack', 'Matrix', 'Monotonic Stack']",57.30%,Medium
1505,Minimum Possible Integer After at Most K Adjacent Swaps On Digits,"['String', 'Greedy', 'Binary Indexed Tree', 'Segment Tree']",40.00%,Hard
1506,Find Root of N-Ary Tree,"['Hash Table', 'Bit Manipulation', 'Tree']",78.40%,Medium
1507,Reformat Date,['String'],66.90%,Easy
1508,Range Sum of Sorted Subarray Sums,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",63.20%,Medium
1509,Minimum Difference Between Largest and Smallest Value in Three Moves,"['Array', 'Greedy', 'Sorting']",59.20%,Medium
1510,Stone Game IV,"['Math', 'Dynamic Programming', 'Game Theory']",59.60%,Hard
1511,Customer Order Frequency,['Database'],67.40%,Easy
1512,Number of Good Pairs,"['Array', 'Hash Table', 'Math', 'Counting']",89.30%,Easy
1513,Number of Substrings With Only 1s,"['Math', 'String']",47.20%,Medium
1514,Path with Maximum Probability,"['Array', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",65.40%,Medium
1515,Best Position for a Service Centre,"['Array', 'Math', 'Geometry', 'Randomized']",34.60%,Hard
1516,Move Sub-Tree of N-Ary Tree,"['Tree', 'Depth-First Search']",61.10%,Hard
1517,Find Users With Valid E-Mails,['Database'],44.00%,Easy
1518,Water Bottles,"['Math', 'Simulation']",71.00%,Easy
1519,Number of Nodes in the Sub-Tree With the Same Label,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Counting']",55.00%,Medium
1520,Maximum Number of Non-Overlapping Substrings,"['String', 'Greedy']",39.90%,Hard
1521,Find a Value of a Mysterious Function Closest to Target,"['Array', 'Binary Search', 'Bit Manipulation', 'Segment Tree']",45.50%,Hard
1522,Diameter of N-Ary Tree,"['Tree', 'Depth-First Search']",74.50%,Medium
1523,Count Odd Numbers in an Interval Range,['Math'],50.00%,Easy
1524,Number of Sub-arrays With Odd Sum,"['Array', 'Math', 'Dynamic Programming', 'Prefix Sum']",43.80%,Medium
1525,Number of Good Ways to Split a String,"['Hash Table', 'String', 'Dynamic Programming', 'Bit Manipulation']",68.30%,Medium
1526,Minimum Number of Increments on Subarrays to Form a Target Array,"['Array', 'Dynamic Programming', 'Stack', 'Greedy', 'Monotonic Stack']",71.80%,Hard
1527,Patients With a Condition,['Database'],40.20%,Easy
1528,Shuffle String,"['Array', 'String']",84.90%,Easy
1529,Minimum Suffix Flips,"['String', 'Greedy']",73.50%,Medium
1530,Number of Good Leaf Nodes Pairs,"['Tree', 'Depth-First Search', 'Binary Tree']",71.90%,Medium
1531,String Compression II,"['String', 'Dynamic Programming']",52.40%,Hard
1532,The Most Recent Three Orders,['Database'],68.60%,Medium
1533,Find the Index of the Large Integer,"['Array', 'Binary Search', 'Interactive']",56.10%,Medium
1534,Count Good Triplets,"['Array', 'Enumeration']",81.50%,Easy
1535,Find the Winner of an Array Game,"['Array', 'Simulation']",56.90%,Medium
1536,Minimum Swaps to Arrange a Binary Grid,"['Array', 'Greedy', 'Matrix']",47.80%,Medium
1537,Get the Maximum Score,"['Array', 'Two Pointers', 'Dynamic Programming', 'Greedy']",39.70%,Hard
1538,Guess the Majority in a Hidden Array,"['Array', 'Math', 'Interactive']",69.90%,Medium
1539,Kth Missing Positive Number,"['Array', 'Binary Search']",61.00%,Easy
1540,Can Convert String in K Moves,"['Hash Table', 'String']",35.60%,Medium
1541,Minimum Insertions to Balance a Parentheses String,"['String', 'Stack', 'Greedy']",52.70%,Medium
1542,Find Longest Awesome Substring,"['Hash Table', 'String', 'Bit Manipulation']",44.40%,Hard
1543,Fix Product Name Format,['Database'],59.20%,Easy
1544,Make The String Great,"['String', 'Stack']",68.30%,Easy
1545,Find Kth Bit in Nth Binary String,"['String', 'Recursion', 'Simulation']",70.30%,Medium
1546,Maximum Number of Non-Overlapping Subarrays With Sum Equals Target,"['Array', 'Hash Table', 'Greedy', 'Prefix Sum']",48.10%,Medium
1547,Minimum Cost to Cut a Stick,"['Array', 'Dynamic Programming', 'Sorting']",61.80%,Hard
1548,The Most Similar Path in a Graph,"['Dynamic Programming', 'Graph']",59.20%,Hard
1549,The Most Recent Orders for Each Product,['Database'],64.90%,Medium
1550,Three Consecutive Odds,['Array'],68.30%,Easy
1551,Minimum Operations to Make Array Equal,['Math'],82.50%,Medium
1552,Magnetic Force Between Two Balls,"['Array', 'Binary Search', 'Sorting']",71.10%,Medium
1553,Minimum Number of Days to Eat N Oranges,"['Dynamic Programming', 'Memoization']",35.50%,Hard
1554,Strings Differ by One Character,"['Hash Table', 'String', 'Rolling Hash']",41.50%,Medium
1555,Bank Account Summary,['Database'],51.40%,Medium
1556,Thousand Separator,['String'],53.70%,Easy
1557,Minimum Number of Vertices to Reach All Nodes,['Graph'],81.00%,Medium
1558,Minimum Numbers of Function Calls to Make Target Array,"['Array', 'Greedy', 'Bit Manipulation']",63.60%,Medium
1559,Detect Cycles in 2D Grid,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",49.00%,Medium
1560,Most Visited Sector in a Circular Track,"['Array', 'Simulation']",59.10%,Easy
1561,Maximum Number of Coins You Can Get,"['Array', 'Math', 'Greedy', 'Sorting', 'Game Theory']",84.50%,Medium
1562,Find Latest Group of Size M,"['Array', 'Hash Table', 'Binary Search', 'Simulation']",43.00%,Medium
1563,Stone Game V,"['Array', 'Math', 'Dynamic Programming', 'Game Theory']",41.20%,Hard
1564,Put Boxes Into the Warehouse I,"['Array', 'Greedy', 'Sorting']",67.40%,Medium
1565,Unique Orders and Customers Per Month,['Database'],82.10%,Easy
1566,Detect Pattern of Length M Repeated K or More Times,"['Array', 'Enumeration']",43.40%,Easy
1567,Maximum Length of Subarray With Positive Product,"['Array', 'Dynamic Programming', 'Greedy']",44.30%,Medium
1568,Minimum Number of Days to Disconnect Island,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix', 'Strongly Connected Component']",59.70%,Hard
1569,Number of Ways to Reorder Array to Get Same BST,"['Array', 'Math', 'Divide and Conquer', 'Dynamic Programming', 'Tree', 'Union Find', 'Binary Search Tree', 'Memoization', 'Combinatorics', 'Binary Tree']",53.60%,Hard
1570,Dot Product of Two Sparse Vectors,"['Array', 'Hash Table', 'Two Pointers']",89.90%,Medium
1571,Warehouse Manager,['Database'],87.60%,Easy
1572,Matrix Diagonal Sum,"['Array', 'Matrix']",83.30%,Easy
1573,Number of Ways to Split a String,"['Math', 'String']",33.60%,Medium
1574,Shortest Subarray to be Removed to Make Array Sorted,"['Array', 'Two Pointers', 'Binary Search', 'Stack', 'Monotonic Stack']",38.20%,Medium
1575,Count All Possible Routes,"['Array', 'Dynamic Programming', 'Memoization']",65.20%,Hard
1576,Replace All ?'s to Avoid Consecutive Repeating Characters,['String'],46.00%,Easy
1577,Number of Ways Where Square of Number Is Equal to Product of Two Numbers,"['Array', 'Hash Table', 'Math', 'Two Pointers']",41.60%,Medium
1578,Minimum Time to Make Rope Colorful,"['Array', 'String', 'Dynamic Programming', 'Greedy']",63.70%,Medium
1579,Remove Max Number of Edges to Keep Graph Fully Traversable,"['Union Find', 'Graph']",70.70%,Hard
1580,Put Boxes Into the Warehouse II,"['Array', 'Greedy', 'Sorting']",66.10%,Medium
1581,Customer Who Visited but Did Not Make Any Transactions,['Database'],67.80%,Easy
1582,Special Positions in a Binary Matrix,"['Array', 'Matrix']",68.70%,Easy
1583,Count Unhappy Friends,"['Array', 'Simulation']",61.70%,Medium
1584,Min Cost to Connect All Points,"['Array', 'Union Find', 'Graph', 'Minimum Spanning Tree']",67.70%,Medium
1585,Check If String Is Transformable With Substring Sort Operations,"['String', 'Greedy', 'Sorting']",48.90%,Hard
1586,Binary Search Tree Iterator II,"['Stack', 'Tree', 'Design']",62.70%,Medium
1587,Bank Account Summary II,['Database'],83.40%,Easy
1588,Sum of All Odd Length Subarrays,"['Array', 'Math', 'Prefix Sum']",83.30%,Easy
1589,Maximum Sum Obtained of Any Permutation,"['Array', 'Greedy', 'Sorting', 'Prefix Sum']",38.60%,Medium
1590,Make Sum Divisible by P,"['Array', 'Hash Table', 'Prefix Sum']",39.70%,Medium
1591,Strange Printer II,"['Array', 'Graph', 'Topological Sort', 'Matrix']",59.80%,Hard
1592,Rearrange Spaces Between Words,['String'],43.60%,Easy
1593,Split a String Into the Max Number of Unique Substrings,"['Hash Table', 'String', 'Backtracking']",68.20%,Medium
1594,Maximum Non Negative Product in a Matrix,"['Array', 'Dynamic Programming', 'Matrix']",34.20%,Medium
1595,Minimum Cost to Connect Two Groups of Points,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Matrix', 'Bitmask']",49.00%,Hard
1596,The Most Frequently Ordered Products for Each Customer,['Database'],78.30%,Medium
1597,Build Binary Expression Tree From Infix Expression,"['String', 'Stack', 'Tree']",62.50%,Hard
1598,Crawler Log Folder,"['Array', 'String', 'Stack']",71.70%,Easy
1599,Maximum Profit of Operating a Centennial Wheel,"['Array', 'Simulation']",44.20%,Medium
1600,Throne Inheritance,"['Hash Table', 'Tree', 'Depth-First Search', 'Design']",65.60%,Medium
1601,Maximum Number of Achievable Transfer Requests,"['Array', 'Backtracking', 'Bit Manipulation', 'Enumeration']",64.40%,Hard
1602,Find Nearest Right Node in Binary Tree,"[]",75.00%,Medium
1603,Design Parking System,"['Design', 'Simulation', 'Counting']",87.00%,Easy
1604,Alert Using Same Key-Card Three or More Times in a One Hour Period,"['Array', 'Hash Table', 'String', 'Sorting']",45.80%,Medium
1605,Find Valid Matrix Given Row and Column Sums,"['Array', 'Greedy', 'Matrix']",82.90%,Medium
1606,Find Servers That Handled Most Number of Requests,"['Array', 'Greedy', 'Heap (Priority Queue)', 'Ordered Set']",43.70%,Hard
1607,Sellers With No Sales,['Database'],54.40%,Easy
1608,Special Array With X Elements Greater Than or Equal X,"['Array', 'Binary Search', 'Sorting']",66.80%,Easy
1609,Even Odd Tree,"['Tree', 'Breadth-First Search', 'Binary Tree']",66.20%,Medium
1610,Maximum Number of Visible Points,"['Array', 'Math', 'Geometry', 'Sliding Window', 'Sorting']",37.40%,Hard
1611,Minimum One Bit Operations to Make Integers Zero,"['Dynamic Programming', 'Bit Manipulation', 'Memoization']",74.00%,Hard
1612,Check If Two Expression Trees are Equivalent,"['Hash Table', 'Tree']",70.80%,Medium
1613,Find the Missing IDs,['Database'],73.00%,Medium
1614,Maximum Nesting Depth of the Parentheses,"['String', 'Stack']",84.00%,Easy
1615,Maximal Network Rank,['Graph'],65.20%,Medium
1616,Split Two Strings to Make Palindrome,"['Two Pointers', 'String']",31.10%,Medium
1617,Count Subtrees With Max Distance Between Cities,"['Dynamic Programming', 'Bit Manipulation', 'Tree', 'Enumeration', 'Bitmask']",66.50%,Hard
1618,Maximum Font to Fit a Sentence in a Screen,"['Array', 'String', 'Binary Search']",61.00%,Medium
1619,Mean of Array After Removing Some Elements,"['Array', 'Sorting']",69.30%,Easy
1620,Coordinate With Maximum Network Quality,"['Array', 'Enumeration']",38.40%,Medium
1621,Number of Sets of K Non-Overlapping Line Segments,"['Math', 'Dynamic Programming', 'Combinatorics']",44.10%,Medium
1622,Fancy Sequence,"['Math', 'Design', 'Segment Tree']",17.70%,Hard
1623,All Valid Triplets That Can Represent a Country,['Database'],81.80%,Easy
1624,Largest Substring Between Two Equal Characters,"['Hash Table', 'String']",68.50%,Easy
1625,Lexicographically Smallest String After Applying Operations,"['String', 'Depth-First Search', 'Breadth-First Search', 'Enumeration']",66.00%,Medium
1626,Best Team With No Conflicts,"['Array', 'Dynamic Programming', 'Sorting']",50.40%,Medium
1627,Graph Connectivity With Threshold,"['Array', 'Math', 'Union Find', 'Number Theory']",47.50%,Hard
1628,Design an Expression Tree With Evaluate Function,"['Array', 'Math', 'Stack']",82.40%,Medium
1629,Slowest Key,"['Array', 'String']",59.20%,Easy
1630,Arithmetic Subarrays,"['Array', 'Hash Table', 'Sorting']",83.70%,Medium
1631,Path With Minimum Effort,"['Array', 'Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Heap (Priority Queue)', 'Matrix']",60.50%,Medium
1632,Rank Transform of a Matrix,"['Array', 'Union Find', 'Graph', 'Topological Sort', 'Sorting', 'Matrix']",41.10%,Hard
1633,Percentage of Users Attended a Contest,['Database'],58.30%,Easy
1634,Add Two Polynomials Represented as Linked Lists,"['Linked List', 'Math', 'Two Pointers']",60.50%,Medium
1635,Hopper Company Queries I,['Database'],47.80%,Hard
1636,Sort Array by Increasing Frequency,"['Array', 'Hash Table', 'Sorting']",79.90%,Easy
1637,Widest Vertical Area Between Two Points Containing No Points,"['Array', 'Sorting']",87.30%,Easy
1638,Count Substrings That Differ by One Character,"['Hash Table', 'String', 'Dynamic Programming', 'Enumeration']",71.40%,Medium
1639,Number of Ways to Form a Target String Given a Dictionary,"['Array', 'String', 'Dynamic Programming']",50.70%,Hard
1640,Check Array Formation Through Concatenation,"['Array', 'Hash Table']",56.80%,Easy
1641,Count Sorted Vowel Strings,"['Math', 'Dynamic Programming', 'Combinatorics']",78.70%,Medium
1642,Furthest Building You Can Reach,"['Array', 'Greedy', 'Heap (Priority Queue)']",50.00%,Medium
1643,Kth Smallest Instructions,"['Array', 'Math', 'Dynamic Programming', 'Combinatorics']",48.60%,Hard
1644,Lowest Common Ancestor of a Binary Tree II,"['Tree', 'Depth-First Search', 'Binary Tree']",65.50%,Medium
1645,Hopper Company Queries II,['Database'],39.20%,Hard
1646,Get Maximum in Generated Array,"['Array', 'Simulation']",50.70%,Easy
1647,Minimum Deletions to Make Character Frequencies Unique,"['Hash Table', 'String', 'Greedy', 'Sorting']",61.30%,Medium
1648,Sell Diminishing-Valued Colored Balls,"['Array', 'Math', 'Binary Search', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",30.00%,Medium
1649,Create Sorted Array through Instructions,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",39.40%,Hard
1650,Lowest Common Ancestor of a Binary Tree III,"['Hash Table', 'Two Pointers', 'Tree']",80.90%,Medium
1651,Hopper Company Queries III,['Database'],65.50%,Hard
1652,Defuse the Bomb,"['Array', 'Sliding Window']",67.30%,Easy
1653,Minimum Deletions to Make String Balanced,"['String', 'Dynamic Programming', 'Stack']",65.80%,Medium
1654,Minimum Jumps to Reach Home,"['Array', 'Dynamic Programming', 'Breadth-First Search']",29.80%,Medium
1655,Distribute Repeating Integers,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",39.90%,Hard
1656,Design an Ordered Stream,"['Array', 'Hash Table', 'Design', 'Data Stream']",84.40%,Easy
1657,Determine if Two Strings Are Close,"['Hash Table', 'String', 'Sorting', 'Counting']",54.30%,Medium
1658,Minimum Operations to Reduce X to Zero,"['Array', 'Hash Table', 'Binary Search', 'Sliding Window', 'Prefix Sum']",39.80%,Medium
1659,Maximize Grid Happiness,"['Dynamic Programming', 'Bit Manipulation', 'Memoization', 'Bitmask']",40.10%,Hard
1660,Correct a Binary Tree,"['Hash Table', 'Tree']",74.40%,Medium
1661,Average Time of Process per Machine,['Database'],68.60%,Easy
1662,Check If Two String Arrays are Equivalent,"['Array', 'String']",85.60%,Easy
1663,Smallest String With A Given Numeric Value,"['String', 'Greedy']",66.90%,Medium
1664,Ways to Make a Fair Array,"['Array', 'Prefix Sum']",63.80%,Medium
1665,Minimum Initial Energy to Finish Tasks,"['Array', 'Greedy', 'Sorting']",58.60%,Hard
1666,Change the Root of a Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",74.40%,Medium
1667,Fix Names in a Table,['Database'],61.40%,Easy
1668,Maximum Repeating Substring,"['String', 'Dynamic Programming', 'String Matching']",39.00%,Easy
1669,Merge In Between Linked Lists,['Linked List'],81.90%,Medium
1670,Design Front Middle Back Queue,"['Array', 'Linked List', 'Design', 'Queue', 'Data Stream']",56.90%,Medium
1671,Minimum Number of Removals to Make Mountain Array,"['Array', 'Binary Search', 'Dynamic Programming', 'Greedy']",55.20%,Hard
1672,Richest Customer Wealth,"['Array', 'Matrix']",88.30%,Easy
1673,Find the Most Competitive Subsequence,"['Array', 'Stack', 'Greedy', 'Monotonic Stack']",51.10%,Medium
1674,Minimum Moves to Make Array Complementary,"['Array', 'Hash Table', 'Prefix Sum']",40.70%,Medium
1675,Minimize Deviation in Array,"['Array', 'Greedy', 'Heap (Priority Queue)', 'Ordered Set']",54.00%,Hard
1676,Lowest Common Ancestor of a Binary Tree IV,"['Hash Table', 'Tree']",78.60%,Medium
1677,Product's Worth Over Invoices,['Database'],38.30%,Easy
1678,Goal Parser Interpretation,['String'],87.50%,Easy
1679,Max Number of K-Sum Pairs,"['Array', 'Hash Table', 'Two Pointers', 'Sorting']",55.40%,Medium
1680,Concatenation of Consecutive Binary Numbers,"['Math', 'Bit Manipulation', 'Simulation']",57.20%,Medium
1681,Minimum Incompatibility,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",39.40%,Hard
1682,Longest Palindromic Subsequence II,"['String', 'Dynamic Programming']",50.00%,Medium
1683,Invalid Tweets,['Database'],85.60%,Easy
1684,Count the Number of Consistent Strings,"['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Counting']",88.10%,Easy
1685,Sum of Absolute Differences in a Sorted Array,"['Array', 'Math', 'Prefix Sum']",68.30%,Medium
1686,Stone Game VI,"['Array', 'Math', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Game Theory']",57.90%,Medium
1687,Delivering Boxes from Storage to Ports,"['Array', 'Dynamic Programming', 'Segment Tree', 'Queue', 'Heap (Priority Queue)', 'Prefix Sum', 'Monotonic Queue']",39.00%,Hard
1688,Count of Matches in Tournament,"['Math', 'Simulation']",85.70%,Easy
1689,Partitioning Into Minimum Number Of Deci-Binary Numbers,"['String', 'Greedy']",88.80%,Medium
1690,Stone Game VII,"['Array', 'Math', 'Dynamic Programming', 'Game Theory']",58.20%,Medium
1691,Maximum Height by Stacking Cuboids,"['Array', 'Dynamic Programming', 'Sorting']",58.80%,Hard
1692,Count Ways to Distribute Candies,['Dynamic Programming'],62.60%,Hard
1693,Daily Leads and Partners,['Database'],86.60%,Easy
1694,Reformat Phone Number,['String'],66.50%,Easy
1695,Maximum Erasure Value,"['Array', 'Hash Table', 'Sliding Window']",58.70%,Medium
1696,Jump Game VI,"['Array', 'Dynamic Programming', 'Queue', 'Heap (Priority Queue)', 'Monotonic Queue']",45.70%,Medium
1697,Checking Existence of Edge Length Limited Paths,"['Array', 'Two Pointers', 'Union Find', 'Graph', 'Sorting']",62.60%,Hard
1698,Number of Distinct Substrings in a String,"['String', 'Trie', 'Rolling Hash']",64.60%,Medium
1699,Number of Calls Between Two Persons,['Database'],81.10%,Medium
1700,Number of Students Unable to Eat Lunch,"['Array', 'Stack', 'Queue', 'Simulation']",78.40%,Easy
1701,Average Waiting Time,"['Array', 'Simulation']",73.10%,Medium
1702,Maximum Binary String After Change,"['String', 'Greedy']",46.90%,Medium
1703,Minimum Adjacent Swaps for K Consecutive Ones,"['Array', 'Greedy', 'Sliding Window', 'Prefix Sum']",42.40%,Hard
1704,Determine if String Halves Are Alike,"['String', 'Counting']",78.70%,Easy
1705,Maximum Number of Eaten Apples,"['Array', 'Greedy', 'Heap (Priority Queue)']",39.80%,Medium
1706,Where Will the Ball Fall,"['Array', 'Matrix', 'Simulation']",71.90%,Medium
1707,Maximum XOR With an Element From Array,"['Array', 'Bit Manipulation', 'Trie']",52.40%,Hard
1708,Largest Subarray Length K,"['Array', 'Greedy']",64.50%,Easy
1709,Biggest Window Between Visits,['Database'],70.40%,Medium
1710,Maximum Units on a Truck,"['Array', 'Greedy', 'Sorting']",73.90%,Easy
1711,Count Good Meals,"['Array', 'Hash Table']",30.80%,Medium
1712,Ways to Split Array Into Three Subarrays,"['Array', 'Two Pointers', 'Binary Search', 'Prefix Sum']",33.10%,Medium
1713,Minimum Operations to Make a Subsequence,"['Array', 'Hash Table', 'Binary Search', 'Greedy']",47.80%,Hard
1714,Sum Of Special Evenly-Spaced Elements In Array,"['Array', 'Dynamic Programming']",49.70%,Hard
1715,Count Apples and Oranges,['Database'],75.70%,Medium
1716,Calculate Money in Leetcode Bank,['Math'],78.40%,Easy
1717,Maximum Score From Removing Substrings,"['String', 'Stack', 'Greedy']",63.00%,Medium
1718,Construct the Lexicographically Largest Valid Sequence,"['Array', 'Backtracking']",54.30%,Medium
1719,Number Of Ways To Reconstruct A Tree,"['Tree', 'Graph']",44.50%,Hard
1720,Decode XORed Array,"['Array', 'Bit Manipulation']",86.70%,Easy
1721,Swapping Nodes in a Linked List,"['Linked List', 'Two Pointers']",68.10%,Medium
1722,Minimize Hamming Distance After Swap Operations,"['Array', 'Depth-First Search', 'Union Find']",49.00%,Medium
1723,Find Minimum Time to Finish All Jobs,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",42.80%,Hard
1724,Checking Existence of Edge Length Limited Paths II,"['Union Find', 'Graph']",50.90%,Hard
1725,Number Of Rectangles That Can Form The Largest Square,['Array'],78.90%,Easy
1726,Tuple with Same Product,"['Array', 'Hash Table', 'Counting']",61.30%,Medium
1727,Largest Submatrix With Rearrangements,"['Array', 'Greedy', 'Sorting', 'Matrix']",75.30%,Medium
1728,Cat and Mouse II,"['Array', 'Math', 'Dynamic Programming', 'Graph', 'Topological Sort', 'Memoization', 'Matrix', 'Game Theory']",39.90%,Hard
1729,Find Followers Count,['Database'],69.30%,Easy
1730,Shortest Path to Get Food,"['Array', 'Breadth-First Search', 'Matrix']",55.30%,Medium
1731,The Number of Employees Which Report to Each Employee,['Database'],50.30%,Easy
1732,Find the Highest Altitude,"['Array', 'Prefix Sum']",83.60%,Easy
1733,Minimum Number of People to Teach,"['Array', 'Hash Table', 'Greedy']",43.40%,Medium
1734,Decode XORed Permutation,"['Array', 'Bit Manipulation']",65.60%,Medium
1735,Count Ways to Make Array With Product,"['Array', 'Math', 'Dynamic Programming', 'Combinatorics', 'Number Theory']",52.10%,Hard
1736,Latest Time by Replacing Hidden Digits,"['String', 'Greedy']",43.00%,Easy
1737,Change Minimum Characters to Satisfy One of Three Conditions,"['Hash Table', 'String', 'Counting', 'Prefix Sum']",37.00%,Medium
1738,Find Kth Largest XOR Coordinate Value,"['Array', 'Divide and Conquer', 'Bit Manipulation', 'Sorting', 'Heap (Priority Queue)', 'Matrix', 'Prefix Sum', 'Quickselect']",62.40%,Medium
1739,Building Boxes,"['Math', 'Binary Search', 'Greedy']",51.90%,Hard
1740,Find Distance in a Binary Tree,"['Hash Table', 'Tree']",73.70%,Medium
1741,Find Total Time Spent by Each Employee,['Database'],86.90%,Easy
1742,Maximum Number of Balls in a Box,"['Hash Table', 'Math', 'Counting']",73.70%,Easy
1743,Restore the Array From Adjacent Pairs,"['Array', 'Hash Table', 'Depth-First Search']",74.70%,Medium
1744,Can You Eat Your Favorite Candy on Your Favorite Day?,"['Array', 'Prefix Sum']",34.60%,Medium
1745,Palindrome Partitioning IV,"['String', 'Dynamic Programming']",44.50%,Hard
1746,Maximum Subarray Sum After One Operation,"['Array', 'Dynamic Programming']",62.00%,Medium
1747,Leetflex Banned Accounts,['Database'],62.90%,Medium
1748,Sum of Unique Elements,"['Array', 'Hash Table', 'Counting']",78.40%,Easy
1749,Maximum Absolute Sum of Any Subarray,"['Array', 'Dynamic Programming']",60.50%,Medium
1750,Minimum Length of String After Deleting Similar Ends,"['Two Pointers', 'String']",55.90%,Medium
1751,Maximum Number of Events That Can Be Attended II,"['Array', 'Binary Search', 'Dynamic Programming', 'Sorting']",61.30%,Hard
1752,Check if Array Is Sorted and Rotated,['Array'],51.80%,Easy
1753,Maximum Score From Removing Stones,"['Math', 'Greedy', 'Heap (Priority Queue)']",67.60%,Medium
1754,Largest Merge Of Two Strings,"['Two Pointers', 'String', 'Greedy']",49.30%,Medium
1755,Closest Subsequence Sum,"['Array', 'Two Pointers', 'Dynamic Programming', 'Bit Manipulation', 'Sorting', 'Bitmask']",40.40%,Hard
1756,Design Most Recently Used Queue,"['Array', 'Hash Table', 'Stack']",75.80%,Medium
1757,Recyclable and Low Fat Products,['Database'],89.30%,Easy
1758,Minimum Changes To Make Alternating Binary String,['String'],63.80%,Easy
1759,Count Number of Homogenous Substrings,"['Math', 'String']",57.60%,Medium
1760,Minimum Limit of Balls in a Bag,"['Array', 'Binary Search']",60.40%,Medium
1761,Minimum Degree of a Connected Trio in a Graph,['Graph'],42.90%,Hard
1762,Buildings With an Ocean View,"['Array', 'Stack', 'Monotonic Stack']",80.10%,Medium
1763,Longest Nice Substring,"['Hash Table', 'String', 'Divide and Conquer', 'Bit Manipulation', 'Sliding Window']",61.20%,Easy
1764,Form Array by Concatenating Subarrays of Another Array,"['Array', 'Two Pointers', 'Greedy', 'String Matching']",53.90%,Medium
1765,Map of Highest Peak,"['Array', 'Breadth-First Search', 'Matrix']",63.10%,Medium
1766,Tree of Coprimes,"['Array', 'Math', 'Tree', 'Depth-First Search', 'Number Theory']",41.40%,Hard
1767,Find the Subtasks That Did Not Execute,['Database'],77.80%,Hard
1768,Merge Strings Alternately,"['Two Pointers', 'String']",81.00%,Easy
1769,Minimum Number of Operations to Move All Balls to Each Box,"['Array', 'String', 'Prefix Sum']",86.00%,Medium
1770,Maximum Score from Performing Multiplication Operations,"['Array', 'Dynamic Programming']",41.20%,Hard
1771,Maximize Palindrome Length From Subsequences,"['String', 'Dynamic Programming']",36.90%,Hard
1772,Sort Features by Popularity,"['Array', 'Hash Table', 'String']",65.70%,Medium
1773,Count Items Matching a Rule,"['Array', 'String']",84.70%,Easy
1774,Closest Dessert Cost,"['Array', 'Dynamic Programming', 'Backtracking']",47.80%,Medium
1775,Equal Sum Arrays With Minimum Number of Operations,"['Array', 'Hash Table', 'Greedy', 'Counting']",53.80%,Medium
1776,Car Fleet II,"['Array', 'Math', 'Stack', 'Heap (Priority Queue)', 'Monotonic Stack']",55.70%,Hard
1777,Product's Price for Each Store,['Database'],82.40%,Easy
1778,Shortest Path in a Hidden Grid,"['Depth-First Search']",41.30%,Medium
1779,Find Nearest Point That Has the Same X or Y Coordinate,['Array'],69.00%,Easy
1780,Check if Number is a Sum of Powers of Three,['Math'],68.30%,Medium
1781,Sum of Beauty of All Substrings,"['Hash Table', 'String', 'Counting']",68.30%,Medium
1782,Count Pairs Of Nodes,"['Array', 'Two Pointers', 'Binary Search', 'Graph', 'Sorting']",40.40%,Hard
1783,Grand Slam Titles,['Database'],83.20%,Medium
1784,Check if Binary String Has at Most One Segment of Ones,['String'],39.30%,Easy
1785,Minimum Elements to Add to Form a Given Sum,"['Array', 'Greedy']",43.90%,Medium
1786,Number of Restricted Paths From First to Last Node,"['Dynamic Programming', 'Graph', 'Topological Sort', 'Heap (Priority Queue)', 'Shortest Path']",39.30%,Medium
1787,Make the XOR of All Segments Equal to Zero,"['Array', 'Dynamic Programming', 'Bit Manipulation']",39.70%,Hard
1788,Maximize the Beauty of the Garden,"['Array', 'Hash Table', 'Greedy']",65.40%,Hard
1789,Primary Department for Each Employee,['Database'],67.30%,Easy
1790,Check if One String Swap Can Make Strings Equal,"['Hash Table', 'String', 'Counting']",46.00%,Easy
1791,Find Center of Star Graph,['Graph'],86.60%,Easy
1792,Maximum Average Pass Ratio,"['Array', 'Greedy', 'Heap (Priority Queue)']",54.40%,Medium
1793,Maximum Score of a Good Subarray,"['Array', 'Two Pointers', 'Binary Search', 'Stack', 'Monotonic Stack']",64.30%,Hard
1794,Count Pairs of Equal Substrings With Minimum Difference,"['Hash Table', 'String', 'Greedy']",65.00%,Medium
1795,Rearrange Products Table,['Database'],85.40%,Easy
1796,Second Largest Digit in a String,"['Hash Table', 'String']",51.00%,Easy
1797,Design Authentication Manager,"['Hash Table', 'Linked List', 'Design', 'Doubly-Linked List']",57.90%,Medium
1798,Maximum Number of Consecutive Values You Can Make,"['Array', 'Greedy', 'Sorting']",61.30%,Medium
1799,Maximize Score After N Operations,"['Array', 'Math', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Number Theory', 'Bitmask']",57.80%,Hard
1800,Maximum Ascending Subarray Sum,['Array'],62.00%,Easy
1801,Number of Orders in the Backlog,"['Array', 'Heap (Priority Queue)', 'Simulation']",50.60%,Medium
1802,Maximum Value at a Given Index in a Bounded Array,"['Binary Search', 'Greedy']",39.10%,Medium
1803,Count Pairs With XOR in a Range,"['Array', 'Bit Manipulation', 'Trie']",48.20%,Hard
1804,Implement Trie II (Prefix Tree),"['Hash Table', 'String', 'Design']",62.90%,Medium
1805,Number of Different Integers in a String,"['Hash Table', 'String']",38.60%,Easy
1806,Minimum Number of Operations to Reinitialize a Permutation,"['Array', 'Math', 'Simulation']",73.10%,Medium
1807,Evaluate the Bracket Pairs of a String,"['Array', 'Hash Table', 'String']",67.30%,Medium
1808,Maximize Number of Nice Divisors,"['Math', 'Recursion', 'Number Theory']",33.90%,Hard
1809,Ad-Free Sessions,['Database'],58.60%,Easy
1810,Minimum Path Cost in a Hidden Grid,"['Depth-First Search']",57.50%,Medium
1811,Find Interview Candidates,['Database'],60.70%,Medium
1812,Determine Color of a Chessboard Square,"['Math', 'String']",78.90%,Easy
1813,Sentence Similarity III,"['Array', 'Two Pointers', 'String']",48.90%,Medium
1814,Count Nice Pairs in an Array,"['Array', 'Hash Table', 'Math', 'Counting']",48.60%,Medium
1815,Maximum Number of Groups Getting Fresh Donuts,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Memoization', 'Bitmask']",40.10%,Hard
1816,Truncate Sentence,"['Array', 'String']",85.70%,Easy
1817,Finding the Users Active Minutes,"['Array', 'Hash Table']",80.40%,Medium
1818,Minimum Absolute Sum Difference,"['Array', 'Binary Search', 'Sorting', 'Ordered Set']",30.90%,Medium
1819,Number of Different Subsequences GCDs,"['Array', 'Math', 'Counting', 'Number Theory']",41.40%,Hard
1820,Maximum Number of Accepted Invitations,"['Array', 'Depth-First Search', 'Graph']",51.10%,Medium
1821,Find Customers With Positive Revenue this Year,['Database'],87.80%,Easy
1822,Sign of the Product of an Array,"['Array', 'Math']",65.30%,Easy
1823,Find the Winner of the Circular Game,"['Array', 'Math', 'Recursion', 'Queue', 'Simulation']",81.80%,Medium
1824,Minimum Sideway Jumps,"['Array', 'Dynamic Programming', 'Greedy']",50.40%,Medium
1825,Finding MK Average,"['Design', 'Queue', 'Heap (Priority Queue)', 'Data Stream', 'Ordered Set']",37.50%,Hard
1826,Faulty Sensor,"['Array', 'Two Pointers']",50.30%,Easy
1827,Minimum Operations to Make the Array Increasing,"['Array', 'Greedy']",80.40%,Easy
1828,Queries on Number of Points Inside a Circle,"['Array', 'Math', 'Geometry']",86.40%,Medium
1829,Maximum XOR for Each Query,"['Array', 'Bit Manipulation', 'Prefix Sum']",77.10%,Medium
1830,Minimum Number of Operations to Make String Sorted,"['Math', 'String', 'Combinatorics']",50.20%,Hard
1831,Maximum Transaction Each Day,['Database'],82.00%,Medium
1832,Check if the Sentence Is Pangram,"['Hash Table', 'String']",83.50%,Easy
1833,Maximum Ice Cream Bars,"['Array', 'Greedy', 'Sorting', 'Counting Sort']",73.80%,Medium
1834,Single-Threaded CPU,"['Array', 'Sorting', 'Heap (Priority Queue)']",45.90%,Medium
1835,Find XOR Sum of All Pairs Bitwise AND,"['Array', 'Math', 'Bit Manipulation']",61.30%,Hard
1836,Remove Duplicates From an Unsorted Linked List,"['Hash Table', 'Linked List']",74.80%,Medium
1837,Sum of Digits in Base K,['Math'],77.60%,Easy
1838,Frequency of the Most Frequent Element,"['Array', 'Binary Search', 'Greedy', 'Sliding Window', 'Sorting', 'Prefix Sum']",44.10%,Medium
1839,Longest Substring Of All Vowels in Order,"['String', 'Sliding Window']",49.70%,Medium
1840,Maximum Building Height,"['Array', 'Math', 'Sorting']",36.70%,Hard
1841,League Statistics,['Database'],53.40%,Medium
1842,Next Palindrome Using Same Digits,"['Two Pointers', 'String']",53.50%,Hard
1843,Suspicious Bank Accounts,['Database'],45.00%,Medium
1844,Replace All Digits with Characters,['String'],81.80%,Easy
1845,Seat Reservation Manager,"['Design', 'Heap (Priority Queue)']",69.50%,Medium
1846,Maximum Element After Decreasing and Rearranging,"['Array', 'Greedy', 'Sorting']",65.80%,Medium
1847,Closest Room,"['Array', 'Binary Search', 'Sorting', 'Ordered Set']",38.80%,Hard
1848,Minimum Distance to the Target Element,['Array'],54.40%,Easy
1849,Splitting a String Into Descending Consecutive Values,"['String', 'Backtracking']",36.50%,Medium
1850,Minimum Adjacent Swaps to Reach the Kth Smallest Number,"['Two Pointers', 'String', 'Greedy']",71.60%,Medium
1851,Minimum Interval to Include Each Query,"['Array', 'Binary Search', 'Line Sweep', 'Sorting', 'Heap (Priority Queue)']",50.80%,Hard
1852,Distinct Numbers in Each Subarray,"['Array', 'Hash Table', 'Sliding Window']",71.60%,Medium
1853,Convert Date Format,['Database'],85.60%,Easy
1854,Maximum Population Year,"['Array', 'Counting', 'Prefix Sum']",61.50%,Easy
1855,Maximum Distance Between a Pair of Values,"['Array', 'Two Pointers', 'Binary Search']",53.40%,Medium
1856,Maximum Subarray Min-Product,"['Array', 'Stack', 'Monotonic Stack', 'Prefix Sum']",38.40%,Medium
1857,Largest Color Value in a Directed Graph,"['Hash Table', 'Dynamic Programming', 'Graph', 'Topological Sort', 'Memoization', 'Counting']",49.70%,Hard
1858,Longest Word With All Prefixes,"['Depth-First Search', 'Trie']",71.10%,Medium
1859,Sorting the Sentence,"['String', 'Sorting']",83.40%,Easy
1860,Incremental Memory Leak,"['Math', 'Simulation']",72.50%,Medium
1861,Rotating the Box,"['Array', 'Two Pointers', 'Matrix']",68.00%,Medium
1862,Sum of Floored Pairs,"['Array', 'Math', 'Binary Search', 'Prefix Sum']",29.10%,Hard
1863,Sum of All Subset XOR Totals,"['Array', 'Math', 'Backtracking', 'Bit Manipulation', 'Combinatorics', 'Enumeration']",87.80%,Easy
1864,Minimum Number of Swaps to Make the Binary String Alternating,"['String', 'Greedy']",43.60%,Medium
1865,Finding Pairs With a Certain Sum,"['Array', 'Hash Table', 'Design']",51.10%,Medium
1866,Number of Ways to Rearrange Sticks With K Sticks Visible,"['Math', 'Dynamic Programming', 'Combinatorics']",58.10%,Hard
1867,Orders With Maximum Quantity Above Average,['Database'],71.00%,Medium
1868,Product of Two Run-Length Encoded Arrays,"['Array', 'Two Pointers']",58.80%,Medium
1869,Longer Contiguous Segments of Ones than Zeros,['String'],61.50%,Easy
1870,Minimum Speed to Arrive on Time,"['Array', 'Binary Search']",46.90%,Medium
1871,Jump Game VII,"['String', 'Dynamic Programming', 'Sliding Window', 'Prefix Sum']",25.10%,Medium
1872,Stone Game VIII,"['Array', 'Math', 'Dynamic Programming', 'Prefix Sum', 'Game Theory']",53.40%,Hard
1873,Calculate Special Bonus,['Database'],57.50%,Easy
1874,Minimize Product Sum of Two Arrays,"['Array', 'Greedy', 'Sorting']",89.50%,Medium
1875,Group Employees of the Same Salary,['Database'],67.00%,Medium
1876,Substrings of Size Three with Distinct Characters,"['Hash Table', 'String', 'Sliding Window', 'Counting']",74.40%,Easy
1877,Minimize Maximum Pair Sum in Array,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",81.50%,Medium
1878,Get Biggest Three Rhombus Sums in a Grid,"['Array', 'Math', 'Sorting', 'Heap (Priority Queue)', 'Matrix', 'Prefix Sum']",48.40%,Medium
1879,Minimum XOR Sum of Two Arrays,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",48.40%,Hard
1880,Check if Word Equals Summation of Two Words,['String'],74.50%,Easy
1881,Maximum Value after Insertion,"['String', 'Greedy']",38.30%,Medium
1882,Process Tasks Using Servers,"['Array', 'Heap (Priority Queue)']",40.60%,Medium
1883,Minimum Skips to Arrive at Meeting On Time,"['Array', 'Dynamic Programming']",38.00%,Hard
1884,Egg Drop With 2 Eggs and N Floors,"['Math', 'Dynamic Programming']",73.40%,Medium
1885,Count Pairs in Two Arrays,"['Array', 'Two Pointers', 'Binary Search']",60.50%,Medium
1886,Determine Whether Matrix Can Be Obtained By Rotation,"['Array', 'Matrix']",57.60%,Easy
1887,Reduction Operations to Make the Array Elements Equal,"['Array', 'Sorting']",72.80%,Medium
1888,Minimum Number of Flips to Make the Binary String Alternating,"['String', 'Dynamic Programming', 'Greedy', 'Sliding Window']",40.20%,Medium
1889,Minimum Space Wasted From Packaging,"['Array', 'Binary Search', 'Sorting', 'Prefix Sum']",32.00%,Hard
1890,The Latest Login in 2020,['Database'],77.30%,Easy
1891,Cutting Ribbons,"['Array', 'Binary Search']",49.90%,Medium
1892,Page Recommendations II,['Database'],44.40%,Hard
1893,Check if All the Integers in a Range Are Covered,"['Array', 'Hash Table', 'Prefix Sum']",50.10%,Easy
1894,Find the Student that Will Replace the Chalk,"['Array', 'Binary Search', 'Simulation', 'Prefix Sum']",53.20%,Medium
1895,Largest Magic Square,"['Array', 'Matrix', 'Prefix Sum']",53.10%,Medium
1896,Minimum Cost to Change the Final Value of Expression,"['Math', 'String', 'Dynamic Programming', 'Stack']",53.50%,Hard
1897,Redistribute Characters to Make All Strings Equal,"['Hash Table', 'String', 'Counting']",67.10%,Easy
1898,Maximum Number of Removable Characters,"['Array', 'Two Pointers', 'String', 'Binary Search']",44.50%,Medium
1899,Merge Triplets to Form Target Triplet,"['Array', 'Greedy']",66.70%,Medium
1900,The Earliest and Latest Rounds Where Players Compete,"['Dynamic Programming', 'Memoization']",50.60%,Hard
1901,Find a Peak Element II,"['Array', 'Binary Search', 'Matrix']",52.30%,Medium
1902,Depth of BST Given Insertion Order,"['Array', 'Tree', 'Binary Search Tree']",43.10%,Medium
1903,Largest Odd Number in String,"['Math', 'String', 'Greedy']",64.00%,Easy
1904,The Number of Full Rounds You Have Played,"['Math', 'String']",44.00%,Medium
1905,Count Sub Islands,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",72.90%,Medium
1906,Minimum Absolute Difference Queries,"['Array', 'Hash Table']",44.60%,Medium
1907,Count Salary Categories,['Database'],62.10%,Medium
1908,Game of Nim,"['Array', 'Math']",63.20%,Medium
1909,Remove One Element to Make the Array Strictly Increasing,['Array'],28.10%,Easy
1910,Remove All Occurrences of a Substring,"['String', 'Stack', 'Simulation']",78.10%,Medium
1911,Maximum Alternating Subsequence Sum,"['Array', 'Dynamic Programming']",58.80%,Medium
1912,Design Movie Rental System,"['Array', 'Hash Table', 'Design', 'Heap (Priority Queue)', 'Ordered Set']",36.70%,Hard
1913,Maximum Product Difference Between Two Pairs,"['Array', 'Sorting']",82.90%,Easy
1914,Cyclically Rotating a Grid,"['Array', 'Matrix', 'Simulation']",49.90%,Medium
1915,Number of Wonderful Substrings,"['Hash Table', 'String', 'Bit Manipulation', 'Prefix Sum']",66.80%,Medium
1916,Count Ways to Build Rooms in an Ant Colony,"['Math', 'Dynamic Programming', 'Tree', 'Graph', 'Topological Sort', 'Combinatorics']",48.90%,Hard
1917,Leetcodify Friends Recommendations,['Database'],27.40%,Hard
1918,Kth Smallest Subarray Sum,"['Array', 'Binary Search', 'Sliding Window']",52.80%,Medium
1919,Leetcodify Similar Friends,['Database'],42.30%,Hard
1920,Build Array from Permutation,"['Array', 'Simulation']",90.10%,Easy
1921,Eliminate Maximum Number of Monsters,"['Array', 'Greedy', 'Sorting']",50.90%,Medium
1922,Count Good Numbers,"['Math', 'Recursion']",47.10%,Medium
1923,Longest Common Subpath,"['Array', 'Binary Search', 'Rolling Hash', 'Suffix Array', 'Hash Function']",28.60%,Hard
1924,Erect the Fence II,"['Array', 'Math', 'Geometry']",50.00%,Hard
1925,Count Square Sum Triples,"['Math', 'Enumeration']",68.30%,Easy
1926,Nearest Exit from Entrance in Maze,"['Array', 'Breadth-First Search', 'Matrix']",46.90%,Medium
1927,Sum Game,"['Math', 'String', 'Greedy', 'Game Theory']",47.90%,Medium
1928,Minimum Cost to Reach Destination in Time,"['Array', 'Dynamic Programming', 'Graph']",39.00%,Hard
1929,Concatenation of Array,"['Array', 'Simulation']",90.20%,Easy
1930,Unique Length-3 Palindromic Subsequences,"['Hash Table', 'String', 'Bit Manipulation', 'Prefix Sum']",66.10%,Medium
1931,Painting a Grid With Three Different Colors,['Dynamic Programming'],58.20%,Hard
1932,Merge BSTs to Create Single BST,"['Hash Table', 'Binary Search', 'Tree', 'Depth-First Search', 'Binary Tree']",36.50%,Hard
1933,Check if String Is Decomposable Into Value-Equal Substrings,['String'],51.00%,Easy
1934,Confirmation Rate,['Database'],59.90%,Medium
1935,Maximum Number of Words You Can Type,"['Hash Table', 'String']",74.00%,Easy
1936,Add Minimum Number of Rungs,"['Array', 'Greedy']",43.10%,Medium
1937,Maximum Number of Points with Cost,"['Array', 'Dynamic Programming', 'Matrix']",42.90%,Medium
1938,Maximum Genetic Difference Query,"['Array', 'Hash Table', 'Bit Manipulation', 'Depth-First Search', 'Trie']",43.10%,Hard
1939,Users That Actively Request Confirmation Messages,['Database'],56.30%,Easy
1940,Longest Common Subsequence Between Sorted Arrays,"['Array', 'Hash Table', 'Counting']",81.30%,Medium
1941,Check if All Characters Have Equal Number of Occurrences,"['Hash Table', 'String', 'Counting']",78.10%,Easy
1942,The Number of the Smallest Unoccupied Chair,"['Array', 'Hash Table', 'Heap (Priority Queue)']",60.90%,Medium
1943,Describe the Painting,"['Array', 'Hash Table', 'Sorting', 'Prefix Sum']",50.50%,Medium
1944,Number of Visible People in a Queue,"['Array', 'Stack', 'Monotonic Stack']",70.10%,Hard
1945,Sum of Digits of String After Convert,"['String', 'Simulation']",74.90%,Easy
1946,Largest Number After Mutating Substring,"['Array', 'String', 'Greedy']",36.40%,Medium
1947,Maximum Compatibility Score Sum,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",62.90%,Medium
1948,Delete Duplicate Folders in System,"['Array', 'Hash Table', 'String', 'Trie', 'Hash Function']",54.80%,Hard
1949,Strong Friendship,['Database'],54.70%,Medium
1950,Maximum of Minimum Values in All Subarrays,"['Array', 'Stack', 'Monotonic Stack']",49.30%,Medium
1951,All the Pairs With the Maximum Number of Common Followers,['Database'],68.90%,Medium
1952,Three Divisors,"['Math', 'Enumeration', 'Number Theory']",61.40%,Easy
1953,Maximum Number of Weeks for Which You Can Work,"['Array', 'Greedy']",41.00%,Medium
1954,Minimum Garden Perimeter to Collect Enough Apples,"['Math', 'Binary Search']",54.80%,Medium
1955,Count Number of Special Subsequences,"['Array', 'Dynamic Programming']",51.60%,Hard
1956,Minimum Time For K Virus Variants to Spread,"['Array', 'Math', 'Binary Search']",48.20%,Hard
1957,Delete Characters to Make Fancy String,['String'],72.20%,Easy
1958,Check if Move is Legal,"['Array', 'Matrix', 'Enumeration']",49.30%,Medium
1959,Minimum Total Space Wasted With K Resizing Operations,"['Array', 'Dynamic Programming']",43.30%,Medium
1960,Maximum Product of the Length of Two Palindromic Substrings,"['String', 'Rolling Hash', 'Hash Function']",31.30%,Hard
1961,Check If String Is a Prefix of Array,"['Array', 'Two Pointers', 'String']",52.90%,Easy
1962,Remove Stones to Minimize the Total,"['Array', 'Greedy', 'Heap (Priority Queue)']",63.40%,Medium
1963,Minimum Number of Swaps to Make the String Balanced,"['Two Pointers', 'String', 'Stack', 'Greedy']",78.00%,Medium
1964,Find the Longest Valid Obstacle Course at Each Position,"['Array', 'Binary Search', 'Binary Indexed Tree']",62.80%,Hard
1965,Employees With Missing Information,['Database'],72.50%,Easy
1966,Binary Searchable Numbers in an Unsorted Array,"['Array', 'Binary Search']",64.00%,Medium
1967,Number of Strings That Appear as Substrings in Word,"['Array', 'String']",81.40%,Easy
1968,Array With Elements Not Equal to Average of Neighbors,"['Array', 'Greedy', 'Sorting']",50.50%,Medium
1969,Minimum Non-Zero Product of the Array Elements,"['Math', 'Greedy', 'Recursion']",35.90%,Medium
1970,Last Day Where You Can Still Cross,"['Array', 'Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",61.90%,Hard
1971,Find if Path Exists in Graph,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",53.80%,Easy
1972,First and Last Call On the Same Day,['Database'],50.80%,Hard
1973,Count Nodes Equal to Sum of Descendants,"['Tree', 'Depth-First Search', 'Binary Tree']",76.80%,Medium
1974,Minimum Time to Type Word Using Special Typewriter,"['String', 'Greedy']",75.90%,Easy
1975,Maximum Matrix Sum,"['Array', 'Greedy', 'Matrix']",50.70%,Medium
1976,Number of Ways to Arrive at Destination,"['Dynamic Programming', 'Graph', 'Topological Sort', 'Shortest Path']",27.80%,Medium
1977,Number of Ways to Separate Numbers,"['String', 'Dynamic Programming', 'Suffix Array']",21.00%,Hard
1978,Employees Whose Manager Left the Company,['Database'],48.80%,Easy
1979,Find Greatest Common Divisor of Array,"['Array', 'Math', 'Number Theory']",78.30%,Easy
1980,Find Unique Binary String,"['Array', 'Hash Table', 'String', 'Backtracking']",74.80%,Medium
1981,Minimize the Difference Between Target and Chosen Elements,"['Array', 'Dynamic Programming', 'Matrix']",35.40%,Medium
1982,Find Array Given Subset Sums,"['Array', 'Divide and Conquer']",48.90%,Hard
1983,Widest Pair of Indices With Equal Range Sum,"['Array', 'Hash Table', 'Prefix Sum']",53.90%,Medium
1984,Minimum Difference Between Highest and Lowest of K Scores,"['Array', 'Sliding Window', 'Sorting']",57.60%,Easy
1985,Find the Kth Largest Integer in the Array,"['Array', 'String', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Quickselect']",46.10%,Medium
1986,Minimum Number of Work Sessions to Finish the Tasks,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",33.50%,Medium
1987,Number of Unique Good Subsequences,"['String', 'Dynamic Programming']",52.20%,Hard
1988,Find Cutoff Score for Each School,['Database'],66.90%,Medium
1989,Maximum Number of People That Can Be Caught in Tag,"['Array', 'Greedy']",51.00%,Medium
1990,Count the Number of Experiments,['Database'],49.30%,Medium
1991,Find the Middle Index in Array,"['Array', 'Prefix Sum']",67.80%,Easy
1992,Find All Groups of Farmland,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",75.70%,Medium
1993,Operations on Tree,"['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design']",46.40%,Medium
1994,The Number of Good Subsets,"['Array', 'Math', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",35.60%,Hard
1995,Count Special Quadruplets,"['Array', 'Hash Table', 'Enumeration']",62.00%,Easy
1996,The Number of Weak Characters in the Game,"['Array', 'Stack', 'Greedy', 'Sorting', 'Monotonic Stack']",44.10%,Medium
1997,First Day Where You Have Been in All the Rooms,"['Array', 'Dynamic Programming']",37.70%,Medium
1998,GCD Sort of an Array,"['Array', 'Math', 'Union Find', 'Sorting', 'Number Theory']",46.20%,Hard
1999,Smallest Greater Multiple Made of Two Digits,"['Math', 'Enumeration']",48.40%,Medium
2000,Reverse Prefix of Word,"['Two Pointers', 'String', 'Stack']",86.30%,Easy
2001,Number of Pairs of Interchangeable Rectangles,"['Array', 'Hash Table', 'Math', 'Counting', 'Number Theory']",51.40%,Medium
2002,Maximum Product of the Length of Two Palindromic Subsequences,"['String', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",61.20%,Medium
2003,Smallest Missing Genetic Value in Each Subtree,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Union Find']",46.30%,Hard
2004,The Number of Seniors and Juniors to Join the Company,"[]",45.10%,Hard
2005,Subtree Removal Game with Fibonacci Tree,"[]",57.00%,Hard
2006,Count Number of Pairs With Absolute Difference K,"['Array', 'Hash Table', 'Counting']",84.80%,Easy
2007,Find Original Array From Doubled Array,"['Array', 'Hash Table', 'Greedy', 'Sorting']",40.50%,Medium
2008,Maximum Earnings From Taxi,"['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming', 'Sorting']",44.40%,Medium
2009,Minimum Number of Operations to Make Array Continuous,"['Array', 'Hash Table', 'Binary Search', 'Sliding Window']",52.60%,Hard
2010,The Number of Seniors and Juniors to Join the Company II,['Database'],62.90%,Hard
2011,Final Value of Variable After Performing Operations,"['Array', 'String', 'Simulation']",89.50%,Easy
2012,Sum of Beauty in the Array,['Array'],48.60%,Medium
2013,Detect Squares,"['Array', 'Hash Table', 'Design', 'Counting']",51.50%,Medium
2014,Longest Subsequence Repeated k Times,"['String', 'Backtracking', 'Greedy', 'Counting', 'Enumeration']",55.90%,Hard
2015,Average Height of Buildings in Each Segment,"['Array', 'Greedy', 'Sorting']",59.80%,Medium
2016,Maximum Difference Between Increasing Elements,['Array'],57.60%,Easy
2017,Grid Game,"['Array', 'Matrix', 'Prefix Sum']",46.20%,Medium
2018,Check if Word Can Be Placed In Crossword,"['Array', 'Matrix', 'Enumeration']",49.90%,Medium
2019,The Score of Students Solving Math Expression,"['Array', 'Math', 'String', 'Dynamic Programming', 'Stack', 'Memoization']",33.70%,Hard
2020,Number of Accounts That Did Not Stream,['Database'],72.10%,Medium
2021,Brightest Position on Street,"['Array', 'Prefix Sum', 'Ordered Set']",61.50%,Medium
2022,Convert 1D Array Into 2D Array,"['Array', 'Matrix', 'Simulation']",71.60%,Easy
2023,Number of Pairs of Strings With Concatenation Equal to Target,"['Array', 'Hash Table', 'String', 'Counting']",75.20%,Medium
2024,Maximize the Confusion of an Exam,"['String', 'Binary Search', 'Sliding Window', 'Prefix Sum']",67.70%,Medium
2025,Maximum Number of Ways to Partition an Array,"['Array', 'Hash Table', 'Counting', 'Enumeration', 'Prefix Sum']",34.30%,Hard
2026,Low-Quality Problems,['Database'],84.30%,Easy
2027,Minimum Moves to Convert String,"['String', 'Greedy']",55.70%,Easy
2028,Find Missing Observations,"['Array', 'Math', 'Simulation']",57.50%,Medium
2029,Stone Game IX,"['Array', 'Math', 'Greedy', 'Counting', 'Game Theory']",28.90%,Medium
2030,Smallest K-Length Subsequence With Occurrences of a Letter,"['String', 'Stack', 'Greedy', 'Monotonic Stack']",39.50%,Hard
2031,Count Subarrays With More Ones Than Zeros,"['Array', 'Binary Search']",51.60%,Medium
2032,Two Out of Three,"['Array', 'Hash Table', 'Bit Manipulation']",75.90%,Easy
2033,Minimum Operations to Make a Uni-Value Grid,"['Array', 'Math', 'Sorting', 'Matrix']",53.60%,Medium
2034,Stock Price Fluctuation,"['Hash Table', 'Design', 'Heap (Priority Queue)', 'Data Stream', 'Ordered Set']",48.60%,Medium
2035,Partition Array Into Two Arrays to Minimize Sum Difference,"['Array', 'Two Pointers', 'Binary Search', 'Dynamic Programming', 'Bit Manipulation', 'Ordered Set', 'Bitmask']",20.80%,Hard
2036,Maximum Alternating Subarray Sum,"['Array', 'Dynamic Programming']",39.90%,Medium
2037,Minimum Number of Moves to Seat Everyone,"['Array', 'Greedy', 'Sorting', 'Counting Sort']",87.50%,Easy
2038,Remove Colored Pieces if Both Neighbors are the Same Color,"['Math', 'String', 'Greedy', 'Game Theory']",62.80%,Medium
2039,The Time When the Network Becomes Idle,"['Array', 'Breadth-First Search', 'Graph']",52.80%,Medium
2040,Kth Smallest Product of Two Sorted Arrays,"['Array', 'Binary Search']",29.30%,Hard
2041,Accepted Candidates From the Interviews,['Database'],78.50%,Medium
2042,Check if Numbers Are Ascending in a Sentence,['String'],70.50%,Easy
2043,Simple Bank System,"['Array', 'Hash Table', 'Design', 'Simulation']",63.70%,Medium
2044,Count Number of Maximum Bitwise-OR Subsets,"['Array', 'Backtracking', 'Bit Manipulation', 'Enumeration']",88.20%,Medium
2045,Second Minimum Time to Reach Destination,"['Breadth-First Search', 'Graph', 'Shortest Path']",63.00%,Hard
2046,Sort Linked List Already Sorted Using Absolute Values,"['Linked List', 'Two Pointers', 'Sorting']",66.90%,Medium
2047,Number of Valid Words in a Sentence,['String'],29.50%,Easy
2048,Next Greater Numerically Balanced Number,"['Math', 'Backtracking', 'Enumeration']",48.80%,Medium
2049,Count Nodes With the Highest Score,"['Array', 'Tree', 'Depth-First Search', 'Binary Tree']",50.30%,Medium
2050,Parallel Courses III,"['Array', 'Dynamic Programming', 'Graph', 'Topological Sort']",67.10%,Hard
2051,The Category of Each Member in the Store,['Database'],70.20%,Medium
2052,Minimum Cost to Separate Sentence Into Rows,"['Array', 'Dynamic Programming']",49.70%,Medium
2053,Kth Distinct String in an Array,"['Array', 'Hash Table', 'String', 'Counting']",82.10%,Easy
2054,Two Best Non-Overlapping Events,"['Array', 'Binary Search', 'Dynamic Programming', 'Sorting', 'Heap (Priority Queue)']",46.80%,Medium
2055,Plates Between Candles,"['Array', 'String', 'Binary Search', 'Prefix Sum']",45.50%,Medium
2056,Number of Valid Move Combinations On Chessboard,"['Array', 'String', 'Backtracking', 'Simulation']",52.30%,Hard
2057,Smallest Index With Equal Value,['Array'],73.20%,Easy
2058,Find the Minimum and Maximum Number of Nodes Between Critical Points,['Linked List'],69.60%,Medium
2059,Minimum Operations to Convert Number,"['Array', 'Breadth-First Search']",49.80%,Medium
2060,Check if an Original String Exists Given Two Encoded Strings,"['String', 'Dynamic Programming']",43.80%,Hard
2061,Number of Spaces Cleaning Robot Cleaned,"['Array', 'Matrix', 'Simulation']",62.50%,Medium
2062,Count Vowel Substrings of a String,"['Hash Table', 'String']",68.90%,Easy
2063,Vowels of All Substrings,"['Math', 'String', 'Dynamic Programming', 'Combinatorics']",54.30%,Medium
2064,Minimized Maximum of Products Distributed to Any Store,"['Array', 'Binary Search']",54.00%,Medium
2065,Maximum Path Quality of a Graph,"['Array', 'Backtracking', 'Graph']",59.10%,Hard
2066,Account Balance,['Database'],82.00%,Medium
2067,Number of Equal Count Substrings,"['String', 'Counting', 'Prefix Sum']",45.90%,Medium
2068,Check Whether Two Strings are Almost Equivalent,"['Hash Table', 'String', 'Counting']",64.00%,Easy
2069,Walking Robot Simulation II,"['Design', 'Simulation']",26.60%,Medium
2070,Most Beautiful Item for Each Query,"['Array', 'Binary Search', 'Sorting']",49.90%,Medium
2071,Maximum Number of Tasks You Can Assign,"['Array', 'Binary Search', 'Greedy', 'Queue', 'Sorting', 'Monotonic Queue']",33.60%,Hard
2072,The Winner University,['Database'],74.40%,Easy
2073,Time Needed to Buy Tickets,"['Array', 'Queue', 'Simulation']",70.00%,Easy
2074,Reverse Nodes in Even Length Groups,['Linked List'],59.20%,Medium
2075,Decode the Slanted Ciphertext,"['String', 'Simulation']",49.10%,Medium
2076,Process Restricted Friend Requests,"['Union Find', 'Graph']",56.10%,Hard
2077,Paths in Maze That Lead to Same Room,['Graph'],56.00%,Medium
2078,Two Furthest Houses With Different Colors,"['Array', 'Greedy']",65.80%,Easy
2079,Watering Plants,"['Array', 'Simulation']",79.90%,Medium
2080,Range Frequency Queries,"['Array', 'Hash Table', 'Binary Search', 'Design', 'Segment Tree']",40.60%,Medium
2081,Sum of k-Mirror Numbers,"['Math', 'Enumeration']",42.40%,Hard
2082,The Number of Rich Customers,['Database'],77.30%,Easy
2083,Substrings That Begin and End With the Same Letter,"['Hash Table', 'Math', 'String']",74.10%,Medium
2084,Drop Type 1 Orders for Customers With Type 0 Orders,['Database'],86.90%,Medium
2085,Count Common Words With One Occurrence,"['Array', 'Hash Table', 'String', 'Counting']",71.50%,Easy
2086,Minimum Number of Food Buckets to Feed the Hamsters,"['String', 'Dynamic Programming', 'Greedy']",47.00%,Medium
2087,Minimum Cost Homecoming of a Robot in a Grid,"['Array', 'Greedy']",51.10%,Medium
2088,Count Fertile Pyramids in a Land,"['Array', 'Dynamic Programming', 'Matrix']",65.20%,Hard
2089,Find Target Indices After Sorting Array,"['Array', 'Binary Search', 'Sorting']",76.90%,Easy
2090,K Radius Subarray Averages,"['Array', 'Sliding Window']",46.00%,Medium
2091,Removing Minimum and Maximum From Array,"['Array', 'Greedy']",55.00%,Medium
2092,Find All People With Secret,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph', 'Sorting']",45.40%,Hard
2093,Minimum Cost to Reach City With Discounts,"['Graph', 'Heap (Priority Queue)']",59.70%,Medium
2094,Finding 3-Digit Even Numbers,"['Array', 'Hash Table', 'Sorting', 'Enumeration']",61.80%,Easy
2095,Delete the Middle Node of a Linked List,"['Linked List', 'Two Pointers']",59.70%,Medium
2096,Step-By-Step Directions From a Binary Tree Node to Another,"['String', 'Tree', 'Depth-First Search', 'Binary Tree']",56.30%,Medium
2097,Valid Arrangement of Pairs,"['Depth-First Search', 'Graph', 'Eulerian Circuit']",44.80%,Hard
2098,Subsequence of Size K With the Largest Even Sum,"['Array', 'Greedy', 'Sorting']",36.30%,Medium
2099,Find Subsequence of Length K With the Largest Sum,"['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)']",44.30%,Easy
2100,Find Good Days to Rob the Bank,"['Array', 'Dynamic Programming', 'Prefix Sum']",49.60%,Medium
2101,Detonate the Maximum Bombs,"['Array', 'Math', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Geometry']",49.00%,Medium
2102,Sequentially Ordinal Rank Tracker,"['Design', 'Heap (Priority Queue)', 'Data Stream', 'Ordered Set']",64.50%,Hard
2103,Rings and Rods,"['Hash Table', 'String']",81.00%,Easy
2104,Sum of Subarray Ranges,"['Array', 'Stack', 'Monotonic Stack']",60.30%,Medium
2105,Watering Plants II,"['Array', 'Two Pointers', 'Simulation']",48.10%,Medium
2106,Maximum Fruits Harvested After at Most K Steps,"['Array', 'Binary Search', 'Sliding Window', 'Prefix Sum']",36.30%,Hard
2107,Number of Unique Flavors After Sharing K Candies,"[]",59.70%,Medium
2108,Find First Palindromic String in the Array,"['Array', 'Two Pointers', 'String']",83.90%,Easy
2109,Adding Spaces to a String,"['Array', 'Two Pointers', 'String', 'Simulation']",71.70%,Medium
2110,Number of Smooth Descent Periods of a Stock,"['Array', 'Math', 'Dynamic Programming']",59.10%,Medium
2111,Minimum Operations to Make the Array K-Increasing,"['Array', 'Binary Search']",38.80%,Hard
2112,The Airport With the Most Traffic,"[]",71.40%,Medium
2113,Elements in Array After Removing and Replacing Elements,"[]",69.70%,Medium
2114,Maximum Number of Words Found in Sentences,"['Array', 'String']",86.60%,Easy
2115,Find All Possible Recipes from Given Supplies,"['Array', 'Hash Table', 'String', 'Graph', 'Topological Sort']",50.60%,Medium
2116,Check if a Parentheses String Can Be Valid,"['String', 'Stack', 'Greedy']",44.70%,Medium
2117,Abbreviating the Product of a Range,['Math'],25.70%,Hard
2118,Build the Equation,"[]",56.40%,Hard
2119,A Number After a Double Reversal,['Math'],81.00%,Easy
2120,Execution of All Suffix Instructions Staying in a Grid,"['String', 'Simulation']",82.60%,Medium
2121,Intervals Between Identical Elements,"['Array', 'Hash Table', 'Prefix Sum']",44.60%,Medium
2122,Recover the Original Array,"['Array', 'Hash Table', 'Two Pointers', 'Sorting', 'Enumeration']",39.80%,Hard
2123,Minimum Operations to Remove Adjacent Ones in Matrix,"['Array', 'Graph', 'Matrix']",40.00%,Hard
2124,Check if All A's Appears Before All B's,['String'],72.20%,Easy
2125,Number of Laser Beams in a Bank,"['Array', 'Math', 'String', 'Matrix']",85.50%,Medium
2126,Destroying Asteroids,"['Array', 'Greedy', 'Sorting']",51.90%,Medium
2127,Maximum Employees to Be Invited to a Meeting,"['Depth-First Search', 'Graph', 'Topological Sort']",37.40%,Hard
2128,Remove All Ones With Row and Column Flips,"['Array', 'Math', 'Bit Manipulation']",76.20%,Medium
2129,Capitalize the Title,['String'],65.30%,Easy
2130,Maximum Twin Sum of a Linked List,"['Linked List', 'Two Pointers', 'Stack']",81.10%,Medium
2131,Longest Palindrome by Concatenating Two Letter Words,"['Array', 'Hash Table', 'String', 'Greedy', 'Counting']",47.90%,Medium
2132,Stamping the Grid,"['Array', 'Greedy', 'Matrix', 'Prefix Sum']",32.60%,Hard
2133,Check if Every Row and Column Contains All Numbers,"['Array', 'Hash Table', 'Matrix']",52.20%,Easy
2134,Minimum Swaps to Group All 1's Together II,"['Array', 'Sliding Window']",65.50%,Medium
2135,Count Words Obtained After Adding a Letter,"['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Sorting']",43.20%,Medium
2136,Earliest Possible Day of Full Bloom,"['Array', 'Greedy', 'Sorting']",71.50%,Hard
2137,Pour Water Between Buckets to Make Water Levels Equal,"['Array', 'Binary Search']",66.90%,Medium
2138,Divide a String Into Groups of Size k,"['String', 'Simulation']",67.10%,Easy
2139,Minimum Moves to Reach Target Score,"['Math', 'Greedy']",51.20%,Medium
2140,Solving Questions With Brainpower,"['Array', 'Dynamic Programming']",55.10%,Medium
2141,Maximum Running Time of N Computers,"['Array', 'Binary Search', 'Greedy', 'Sorting']",49.90%,Hard
2142,The Number of Passengers in Each Bus I,['Database'],48.70%,Medium
2143,Choose Numbers From Two Arrays in Range,"['Array', 'Dynamic Programming']",52.50%,Hard
2144,Minimum Cost of Buying Candies With Discount,"['Array', 'Greedy', 'Sorting']",61.70%,Easy
2145,Count the Hidden Sequences,"['Array', 'Prefix Sum']",39.20%,Medium
2146,K Highest Ranked Items Within a Price Range,"['Array', 'Breadth-First Search', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",43.60%,Medium
2147,Number of Ways to Divide a Long Corridor,"['Math', 'String', 'Dynamic Programming']",49.20%,Hard
2148,Count Elements With Strictly Smaller and Greater Elements,"['Array', 'Sorting', 'Counting']",59.40%,Easy
2149,Rearrange Array Elements by Sign,"['Array', 'Two Pointers', 'Simulation']",84.10%,Medium
2150,Find All Lonely Numbers in the Array,"['Array', 'Hash Table', 'Counting']",60.90%,Medium
2151,Maximum Good People Based on Statements,"['Array', 'Backtracking', 'Bit Manipulation', 'Enumeration']",50.70%,Hard
2152,Minimum Number of Lines to Cover Points,"['Array', 'Hash Table', 'Math']",42.70%,Medium
2153,The Number of Passengers in Each Bus II,['Database'],39.30%,Hard
2154,Keep Multiplying Found Values by Two,"['Array', 'Hash Table', 'Sorting', 'Simulation']",71.30%,Easy
2155,All Divisions With the Highest Score of a Binary Array,['Array'],64.50%,Medium
2156,Find Substring With Given Hash Value,"['String', 'Sliding Window', 'Rolling Hash', 'Hash Function']",24.00%,Hard
2157,Groups of Strings,"['String', 'Bit Manipulation', 'Union Find']",26.20%,Hard
2158,Amount of New Area Painted Each Day,"['Array', 'Segment Tree', 'Ordered Set']",55.30%,Hard
2159,Order Two Columns Independently,['Database'],60.60%,Medium
2160,Minimum Sum of Four Digit Number After Splitting Digits,"['Math', 'Greedy', 'Sorting']",86.30%,Easy
2161,Partition Array According to Given Pivot,"['Array', 'Two Pointers', 'Simulation']",85.20%,Medium
2162,Minimum Cost to Set Cooking Time,"['Math', 'Enumeration']",41.30%,Medium
2163,Minimum Difference in Sums After Removal of Elements,"['Array', 'Dynamic Programming', 'Heap (Priority Queue)']",48.00%,Hard
2164,Sort Even and Odd Indices Independently,"['Array', 'Sorting']",62.50%,Easy
2165,Smallest Value of the Rearranged Number,"['Math', 'Sorting']",52.60%,Medium
2166,Design Bitset,"['Array', 'Hash Table', 'String', 'Design']",32.60%,Medium
2167,Minimum Time to Remove All Cars Containing Illegal Goods,"['String', 'Dynamic Programming']",41.70%,Hard
2168,Unique Substrings With Equal Digit Frequency,"['Hash Table', 'String', 'Rolling Hash']",59.90%,Medium
2169,Count Operations to Obtain Zero,"['Math', 'Simulation']",74.60%,Easy
2170,Minimum Operations to Make the Array Alternating,"['Array', 'Hash Table', 'Greedy', 'Counting']",33.40%,Medium
2171,Removing Minimum Number of Magic Beans,"['Array', 'Greedy', 'Sorting', 'Enumeration', 'Prefix Sum']",43.10%,Medium
2172,Maximum AND Sum of Array,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",49.40%,Hard
2173,Longest Winning Streak,['Database'],52.60%,Hard
2174,Remove All Ones With Row and Column Flips II,"['Array', 'Bit Manipulation']",67.20%,Medium
2175,The Change in Global Rankings,['Database'],60.30%,Medium
2176,Count Equal and Divisible Pairs in an Array,['Array'],79.60%,Easy
2177,Find Three Consecutive Integers That Sum to a Given Number,"['Math', 'Simulation']",64.80%,Medium
2178,Maximum Split of Positive Even Integers,"['Math', 'Backtracking', 'Greedy']",59.30%,Medium
2179,Count Good Triplets in an Array,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",41.50%,Hard
2180,Count Integers With Even Digit Sum,"['Math', 'Simulation']",67.70%,Easy
2181,Merge Nodes in Between Zeros,"['Linked List', 'Simulation']",89.80%,Medium
2182,Construct String With Repeat Limit,"['Hash Table', 'String', 'Greedy', 'Heap (Priority Queue)', 'Counting']",55.00%,Medium
2183,Count Array Pairs Divisible by K,"['Array', 'Math', 'Number Theory']",29.60%,Hard
2184,Number of Ways to Build Sturdy Brick Wall,"['Array', 'Dynamic Programming']",49.20%,Medium
2185,Counting Words With a Given Prefix,"['Array', 'String', 'String Matching']",78.40%,Easy
2186,Minimum Number of Steps to Make Two Strings Anagram II,"['Hash Table', 'String', 'Counting']",72.80%,Medium
2187,Minimum Time to Complete Trips,"['Array', 'Binary Search']",38.80%,Medium
2188,Minimum Time to Finish the Race,"['Array', 'Dynamic Programming']",41.80%,Hard
2189,Number of Ways to Build House of Cards,"['Math', 'Dynamic Programming']",63.00%,Medium
2190,Most Frequent Number Following Key In an Array,"['Array', 'Hash Table', 'Counting']",59.10%,Easy
2191,Sort the Jumbled Numbers,"['Array', 'Sorting']",60.20%,Medium
2192,All Ancestors of a Node in a Directed Acyclic Graph,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",62.20%,Medium
2193,Minimum Number of Moves to Make Palindrome,"['Two Pointers', 'String', 'Greedy', 'Binary Indexed Tree']",51.40%,Hard
2194,Cells in a Range on an Excel Sheet,['String'],84.10%,Easy
2195,Append K Integers With Minimal Sum,"['Array', 'Math', 'Greedy', 'Sorting']",25.70%,Medium
2196,Create Binary Tree From Descriptions,"['Array', 'Hash Table', 'Tree', 'Binary Tree']",81.80%,Medium
2197,Replace Non-Coprime Numbers in Array,"['Array', 'Math', 'Stack', 'Number Theory']",39.90%,Hard
2198,Number of Single Divisor Triplets,['Math'],53.70%,Medium
2199,Finding the Topic of Each Post,['Database'],50.10%,Hard
2200,Find All K-Distant Indices in an Array,"['Array', 'Two Pointers']",66.40%,Easy
2201,Count Artifacts That Can Be Extracted,"['Array', 'Hash Table', 'Simulation']",56.30%,Medium
2202,Maximize the Topmost Element After K Moves,"['Array', 'Greedy']",23.10%,Medium
2203,Minimum Weighted Subgraph With the Required Paths,"['Graph', 'Shortest Path']",37.20%,Hard
2204,Distance to a Cycle in Undirected Graph,"['Depth-First Search']",68.20%,Hard
2205,The Number of Users That Are Eligible for Discount,['Database'],50.10%,Easy
2206,Divide Array Into Equal Pairs,"['Array', 'Hash Table', 'Bit Manipulation', 'Counting']",74.00%,Easy
2207,Maximize Number of Subsequences in a String,"['String', 'Greedy', 'Prefix Sum']",35.10%,Medium
2208,Minimum Operations to Halve Array Sum,"['Array', 'Greedy', 'Heap (Priority Queue)']",47.40%,Medium
2209,Minimum White Tiles After Covering With Carpets,"['String', 'Dynamic Programming', 'Prefix Sum']",37.20%,Hard
2210,Count Hills and Valleys in an Array,['Array'],61.40%,Easy
2211,Count Collisions on a Road,"['String', 'Stack', 'Simulation']",43.90%,Medium
2212,Maximum Points in an Archery Competition,"['Array', 'Backtracking', 'Bit Manipulation', 'Enumeration']",50.20%,Medium
2213,Longest Substring of One Repeating Character,"['Array', 'String', 'Segment Tree', 'Ordered Set']",32.20%,Hard
2214,Minimum Health to Beat Game,"['Array', 'Greedy']",57.60%,Medium
2215,Find the Difference of Two Arrays,"['Array', 'Hash Table']",79.80%,Easy
2216,Minimum Deletions to Make Array Beautiful,"['Array', 'Stack', 'Greedy']",48.60%,Medium
2217,Find Palindrome With Fixed Length,"['Array', 'Math']",37.40%,Medium
2218,Maximum Value of K Coins From Piles,"['Array', 'Dynamic Programming', 'Prefix Sum']",60.50%,Hard
2219,Maximum Sum Score of Array,"['Array', 'Prefix Sum']",61.80%,Medium
2220,Minimum Bit Flips to Convert Number,['Bit Manipulation'],87.50%,Easy
2221,Find Triangular Sum of an Array,"['Array', 'Math', 'Simulation', 'Combinatorics']",78.80%,Medium
2222,Number of Ways to Select Buildings,"['String', 'Dynamic Programming', 'Prefix Sum']",50.80%,Medium
2223,Sum of Scores of Built Strings,"['String', 'Binary Search', 'Rolling Hash', 'Suffix Array', 'String Matching', 'Hash Function']",40.90%,Hard
2224,Minimum Number of Operations to Convert Time,"['String', 'Greedy']",65.50%,Easy
2225,Find Players With Zero or One Losses,"['Array', 'Hash Table', 'Sorting', 'Counting']",73.00%,Medium
2226,Maximum Candies Allocated to K Children,"['Array', 'Binary Search']",38.50%,Medium
2227,Encrypt and Decrypt Strings,"['Array', 'Hash Table', 'String', 'Design', 'Trie']",40.90%,Hard
2228,Users With Two Purchases Within Seven Days,['Database'],45.10%,Medium
2229,Check if an Array Is Consecutive,"['Array', 'Hash Table', 'Sorting']",61.50%,Easy
2230,The Users That Are Eligible for Discount,['Database'],50.20%,Easy
2231,Largest Number After Digit Swaps by Parity,"['Sorting', 'Heap (Priority Queue)']",62.50%,Easy
2232,Minimize Result by Adding Parentheses to Expression,"['String', 'Enumeration']",68.00%,Medium
2233,Maximum Product After K Increments,"['Array', 'Greedy', 'Heap (Priority Queue)']",41.80%,Medium
2234,Maximum Total Beauty of the Gardens,"['Array', 'Two Pointers', 'Binary Search', 'Greedy', 'Sorting']",29.70%,Hard
2235,Add Two Integers,['Math'],88.00%,Easy
2236,Root Equals Sum of Children,"['Tree', 'Binary Tree']",84.80%,Easy
2237,Count Positions on Street With Required Brightness,"['Array', 'Prefix Sum']",61.80%,Medium
2238,Number of Times a Driver Was a Passenger,['Database'],71.40%,Medium
2239,Find Closest Number to Zero,['Array'],46.50%,Easy
2240,Number of Ways to Buy Pens and Pencils,"['Math', 'Enumeration']",57.30%,Medium
2241,Design an ATM Machine,"['Array', 'Greedy', 'Design']",42.80%,Medium
2242,Maximum Score of a Node Sequence,"['Array', 'Graph', 'Sorting', 'Enumeration']",38.60%,Hard
2243,Calculate Digit Sum of a String,"['String', 'Simulation']",66.40%,Easy
2244,Minimum Rounds to Complete All Tasks,"['Array', 'Hash Table', 'Greedy', 'Counting']",62.90%,Medium
2245,Maximum Trailing Zeros in a Cornered Path,"['Array', 'Matrix', 'Prefix Sum']",36.40%,Medium
2246,Longest Path With Different Adjacent Characters,"['Array', 'String', 'Tree', 'Depth-First Search', 'Graph', 'Topological Sort']",54.20%,Hard
2247,Maximum Cost of Trip With K Highways,"['Dynamic Programming']",50.20%,Hard
2248,Intersection of Multiple Arrays,"['Array', 'Hash Table', 'Sorting', 'Counting']",68.30%,Easy
2249,Count Lattice Points Inside a Circle,"['Array', 'Hash Table', 'Math', 'Geometry', 'Enumeration']",53.90%,Medium
2250,Count Number of Rectangles Containing Each Point,"['Array', 'Binary Search', 'Binary Indexed Tree', 'Sorting']",35.30%,Medium
2251,Number of Flowers in Full Bloom,"['Array', 'Hash Table', 'Binary Search', 'Sorting', 'Prefix Sum', 'Ordered Set']",56.90%,Hard
2252,Dynamic Pivoting of a Table,['Database'],55.80%,Hard
2253,Dynamic Unpivoting of a Table,['Database'],66.30%,Hard
2254,Design Video Sharing Platform,"['Hash Table', 'Stack', 'Design']",62.90%,Hard
2255,Count Prefixes of a Given String,"['Array', 'String']",72.80%,Easy
2256,Minimum Average Difference,"['Array', 'Prefix Sum']",43.30%,Medium
2257,Count Unguarded Cells in the Grid,"['Array', 'Matrix', 'Simulation']",52.50%,Medium
2258,Escape the Spreading Fire,"['Array', 'Binary Search', 'Breadth-First Search', 'Matrix']",35.20%,Hard
2259,Remove Digit From Number to Maximize Result,"['String', 'Greedy', 'Enumeration']",46.20%,Easy
2260,Minimum Consecutive Cards to Pick Up,"['Array', 'Hash Table', 'Sliding Window']",51.80%,Medium
2261,K Divisible Elements Subarrays,"['Array', 'Hash Table', 'Trie', 'Rolling Hash', 'Hash Function', 'Enumeration']",52.60%,Medium
2262,Total Appeal of A String,"['Hash Table', 'String', 'Dynamic Programming']",55.80%,Hard
2263,Make Array Non-decreasing or Non-increasing,"['Dynamic Programming', 'Greedy']",66.10%,Hard
2264,Largest 3-Same-Digit Number in String,['String'],69.00%,Easy
2265,Count Nodes Equal to Average of Subtree,"['Tree', 'Depth-First Search', 'Binary Tree']",86.40%,Medium
2266,Count Number of Texts,"['Hash Table', 'Math', 'String', 'Dynamic Programming']",48.20%,Medium
2267,Check if There Is a Valid Parentheses String Path,"['Array', 'Dynamic Programming', 'Matrix']",39.20%,Hard
2268,Minimum Number of Keypresses,"['Hash Table', 'String', 'Greedy']",71.10%,Medium
2269,Find the K-Beauty of a Number,"['Math', 'String', 'Sliding Window']",60.80%,Easy
2270,Number of Ways to Split Array,"['Array', 'Prefix Sum']",48.40%,Medium
2271,Maximum White Tiles Covered by a Carpet,"['Array', 'Binary Search', 'Greedy', 'Sliding Window', 'Sorting', 'Prefix Sum']",33.90%,Medium
2272,Substring With Largest Variance,"['Array', 'Dynamic Programming']",46.20%,Hard
2273,Find Resultant Array After Removing Anagrams,"['Array', 'Hash Table', 'String', 'Sorting']",58.70%,Easy
2274,Maximum Consecutive Floors Without Special Floors,"['Array', 'Sorting']",51.90%,Medium
2275,Largest Combination With Bitwise AND Greater Than Zero,"['Array', 'Hash Table', 'Bit Manipulation', 'Counting']",72.90%,Medium
2276,Count Integers in Intervals,"['Design', 'Segment Tree', 'Ordered Set']",35.40%,Hard
2277,Closest Node to Path in Tree,"['Array', 'Tree', 'Depth-First Search']",62.50%,Hard
2278,Percentage of Letter in String,['String'],74.20%,Easy
2279,Maximum Bags With Full Capacity of Rocks,"['Array', 'Greedy', 'Sorting']",67.50%,Medium
2280,Minimum Lines to Represent a Line Chart,"['Array', 'Math', 'Geometry', 'Sorting', 'Number Theory']",25.60%,Medium
2281,Sum of Total Strength of Wizards,"['Array', 'Stack', 'Monotonic Stack', 'Prefix Sum']",28.20%,Hard
2282,Number of People That Can Be Seen in a Grid,"['Array', 'Stack', 'Matrix']",47.70%,Medium
2283,Check if Number Has Equal Digit Count and Digit Value,"['Hash Table', 'String', 'Counting']",72.60%,Easy
2284,Sender With Largest Word Count,"['Array', 'Hash Table', 'String', 'Counting']",57.40%,Medium
2285,Maximum Total Importance of Roads,"['Greedy', 'Graph', 'Sorting', 'Heap (Priority Queue)']",69.30%,Medium
2286,Booking Concert Tickets in Groups,"['Binary Search', 'Design', 'Binary Indexed Tree', 'Segment Tree']",18.10%,Hard
2287,Rearrange Characters to Make Target String,"['Hash Table', 'String', 'Counting']",59.60%,Easy
2288,Apply Discount to Prices,['String'],31.60%,Medium
2289,Steps to Make Array Non-decreasing,"['Array', 'Linked List', 'Stack', 'Monotonic Stack']",22.40%,Medium
2290,Minimum Obstacle Removal to Reach Corner,"['Array', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",55.60%,Hard
2291,Maximum Profit From Trading Stocks,"['Array', 'Dynamic Programming']",45.60%,Medium
2292,Products With Three or More Orders in Two Consecutive Years,['Database'],39.60%,Medium
2293,Min Max Game,"['Array', 'Simulation']",63.50%,Easy
2294,Partition Array Such That Maximum Difference Is K,"['Array', 'Greedy', 'Sorting']",74.00%,Medium
2295,Replace Elements in an Array,"['Array', 'Hash Table', 'Simulation']",58.10%,Medium
2296,Design a Text Editor,"['Linked List', 'String', 'Stack', 'Design', 'Simulation', 'Doubly-Linked List']",46.20%,Hard
2297,Jump Game VIII,"['Array', 'Dynamic Programming']",45.30%,Medium
2298,Tasks Count in the Weekend,['Database'],81.60%,Medium
2299,Strong Password Checker II,['String'],55.00%,Easy
2300,Successful Pairs of Spells and Potions,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",44.00%,Medium
2301,Match Substring After Replacement,"['Array', 'Hash Table', 'String', 'String Matching']",41.50%,Hard
2302,Count Subarrays With Score Less Than K,"['Array', 'Binary Search', 'Sliding Window', 'Prefix Sum']",55.40%,Hard
2303,Calculate Amount Paid in Taxes,"['Array', 'Simulation']",66.30%,Easy
2304,Minimum Path Cost in a Grid,"['Array', 'Dynamic Programming', 'Matrix']",66.90%,Medium
2305,Fair Distribution of Cookies,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",69.30%,Medium
2306,Naming a Company,"['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Enumeration']",46.40%,Hard
2307,Check for Contradictions in Equations,"['Array', 'Depth-First Search']",43.10%,Hard
2308,Arrange Table by Gender,['Database'],69.50%,Medium
2309,Greatest English Letter in Upper and Lower Case,"['Hash Table', 'String', 'Enumeration']",70.50%,Easy
2310,Sum of Numbers With Units Digit K,"['Math', 'Dynamic Programming', 'Greedy', 'Enumeration']",27.00%,Medium
2311,Longest Binary Subsequence Less Than or Equal to K,"['String', 'Dynamic Programming', 'Greedy', 'Memoization']",38.10%,Medium
2312,Selling Pieces of Wood,"['Array', 'Dynamic Programming', 'Memoization']",50.90%,Hard
2313,Minimum Flips in Binary Tree to Get Result,"['Dynamic Programming', 'Tree']",56.90%,Hard
2314,The First Day of the Maximum Recorded Degree in Each City,['Database'],72.30%,Medium
2315,Count Asterisks,['String'],82.40%,Easy
2316,Count Unreachable Pairs of Nodes in an Undirected Graph,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",49.20%,Medium
2317,Maximum XOR After Operations,"['Array', 'Math', 'Bit Manipulation']",79.50%,Medium
2318,Number of Distinct Roll Sequences,"['Dynamic Programming', 'Memoization']",57.10%,Hard
2319,Check if Matrix Is X-Matrix,"['Array', 'Matrix']",65.30%,Easy
2320,Count Number of Ways to Place Houses,['Dynamic Programming'],42.20%,Medium
2321,Maximum Score Of Spliced Array,"['Array', 'Dynamic Programming']",57.10%,Hard
2322,Minimum Score After Removals on a Tree,"['Array', 'Bit Manipulation', 'Tree', 'Depth-First Search']",52.00%,Hard
2323,Find Minimum Time to Finish All Jobs II,"['Array', 'Greedy', 'Sorting']",65.90%,Medium
2324,Product Sales Analysis IV,['Database'],74.80%,Medium
2325,Decode the Message,"['Hash Table', 'String']",84.80%,Easy
2326,Spiral Matrix IV,"['Array', 'Linked List', 'Matrix', 'Simulation']",82.30%,Medium
2327,Number of People Aware of a Secret,"['Dynamic Programming', 'Queue', 'Simulation']",46.00%,Medium
2328,Number of Increasing Paths in a Grid,"['Array', 'Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort', 'Memoization', 'Matrix']",58.00%,Hard
2329,Product Sales Analysis V,['Database'],69.90%,Easy
2330,Valid Palindrome IV,"['Two Pointers', 'String']",76.00%,Medium
2331,Evaluate Boolean Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",82.70%,Easy
2332,The Latest Time to Catch a Bus,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",27.70%,Medium
2333,Minimum Sum of Squared Difference,"['Array', 'Binary Search', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",25.50%,Medium
2334,Subarray With Elements Greater Than Varying Threshold,"['Array', 'Stack', 'Union Find', 'Monotonic Stack']",44.10%,Hard
2335,Minimum Amount of Time to Fill Cups,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",58.30%,Easy
2336,Smallest Number in Infinite Set,"['Hash Table', 'Design', 'Heap (Priority Queue)', 'Ordered Set']",71.50%,Medium
2337,Move Pieces to Obtain a String,"['Two Pointers', 'String']",47.70%,Medium
2338,Count the Number of Ideal Arrays,"['Math', 'Dynamic Programming', 'Combinatorics', 'Number Theory']",26.90%,Hard
2339,All the Matches of the League,['Database'],88.00%,Easy
2340,Minimum Adjacent Swaps to Make a Valid Array,"['Array', 'Greedy']",72.70%,Medium
2341,Maximum Number of Pairs in Array,"['Array', 'Hash Table', 'Counting']",75.40%,Easy
2342,Max Sum of a Pair With Equal Sum of Digits,"['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)']",55.50%,Medium
2343,Query Kth Smallest Trimmed Number,"['Array', 'String', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Radix Sort', 'Quickselect']",44.50%,Medium
2344,Minimum Deletions to Make Array Divisible,"['Array', 'Math', 'Sorting', 'Heap (Priority Queue)', 'Number Theory']",56.50%,Hard
2345,Finding the Number of Visible Mountains,"['Array', 'Stack', 'Sorting']",37.40%,Medium
2346,Compute the Rank as a Percentage,['Database'],33.60%,Medium
2347,Best Poker Hand,"['Array', 'Hash Table', 'Counting']",60.90%,Easy
2348,Number of Zero-Filled Subarrays,"['Array', 'Math']",66.70%,Medium
2349,Design a Number Container System,"['Hash Table', 'Design', 'Heap (Priority Queue)', 'Ordered Set']",44.80%,Medium
2350,Shortest Impossible Sequence of Rolls,"['Array', 'Hash Table', 'Greedy']",68.60%,Hard
2351,First Letter to Appear Twice,"['Hash Table', 'String', 'Bit Manipulation', 'Counting']",73.90%,Easy
2352,Equal Row and Column Pairs,"['Array', 'Hash Table', 'Matrix', 'Simulation']",70.40%,Medium
2353,Design a Food Rating System,"['Array', 'Hash Table', 'String', 'Design', 'Heap (Priority Queue)', 'Ordered Set']",45.20%,Medium
2354,Number of Excellent Pairs,"['Array', 'Hash Table', 'Binary Search', 'Bit Manipulation']",47.70%,Hard
2355,Maximum Number of Books You Can Take,"['Array', 'Dynamic Programming']",39.80%,Hard
2356,Number of Unique Subjects Taught by Each Teacher,['Database'],89.00%,Easy
2357,Make Array Zero by Subtracting Equal Amounts,"['Array', 'Hash Table', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",72.50%,Easy
2358,Maximum Number of Groups Entering a Competition,"['Array', 'Math', 'Binary Search', 'Greedy']",68.00%,Medium
2359,Find Closest Node to Given Two Nodes,"['Depth-First Search', 'Graph']",45.50%,Medium
2360,Longest Cycle in a Graph,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",49.70%,Hard
2361,Minimum Costs Using the Train Line,"['Array', 'Dynamic Programming']",78.30%,Hard
2362,Generate the Invoice,['Database'],74.80%,Hard
2363,Merge Similar Items,"['Array', 'Hash Table', 'Sorting', 'Ordered Set']",75.90%,Easy
2364,Count Number of Bad Pairs,"['Array', 'Hash Table', 'Math', 'Counting']",41.90%,Medium
2365,Task Scheduler II,"['Array', 'Hash Table', 'Simulation']",53.10%,Medium
2366,Minimum Replacements to Sort the Array,"['Array', 'Math', 'Greedy']",53.40%,Hard
2367,Number of Arithmetic Triplets,"['Array', 'Hash Table', 'Two Pointers', 'Enumeration']",84.60%,Easy
2368,Reachable Nodes With Restrictions,"['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",59.00%,Medium
2369,Check if There is a Valid Partition For The Array,"['Array', 'Dynamic Programming']",51.90%,Medium
2370,Longest Ideal Subsequence,"['Hash Table', 'String', 'Dynamic Programming']",47.10%,Medium
2371,Minimize Maximum Value in a Grid,"['Array', 'Union Find', 'Graph']",66.40%,Hard
2372,Calculate the Influence of Each Salesperson,['Database'],83.20%,Medium
2373,Largest Local Values in a Matrix,"['Array', 'Matrix']",87.80%,Easy
2374,Node With Highest Edge Score,"['Hash Table', 'Graph']",48.00%,Medium
2375,Construct Smallest Number From DI String,"['String', 'Backtracking', 'Stack', 'Greedy']",76.20%,Medium
2376,Count Special Integers,"['Math', 'Dynamic Programming']",39.60%,Hard
2377,Sort the Olympic Table,['Database'],79.20%,Easy
2378,Choose Edges to Maximize Score in a Tree,"['Dynamic Programming', 'Tree']",58.10%,Medium
2379,Minimum Recolors to Get K Consecutive Black Blocks,"['String', 'Sliding Window']",59.40%,Easy
2380,Time Needed to Rearrange a Binary String,"['String', 'Dynamic Programming', 'Simulation']",51.10%,Medium
2381,Shifting Letters II,"['Array', 'String', 'Prefix Sum']",38.10%,Medium
2382,Maximum Segment Sum After Removals,"['Array', 'Union Find', 'Prefix Sum', 'Ordered Set']",48.80%,Hard
2383,Minimum Hours of Training to Win a Competition,"['Array', 'Greedy']",41.60%,Easy
2384,Largest Palindromic Number,"['Hash Table', 'String', 'Greedy', 'Counting']",35.80%,Medium
2385,Amount of Time for Binary Tree to Be Infected,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",62.80%,Medium
2386,Find the K-Sum of an Array,"['Array', 'Sorting', 'Heap (Priority Queue)']",39.10%,Hard
2387,Median of a Row Wise Sorted Matrix,"['Array', 'Binary Search', 'Matrix']",69.40%,Medium
2388,Change Null Values in a Table to the Previous Value,['Database'],51.00%,Medium
2389,Longest Subsequence With Limited Sum,"['Array', 'Binary Search', 'Greedy', 'Sorting', 'Prefix Sum']",72.10%,Easy
2390,Removing Stars From a String,"['String', 'Stack', 'Simulation']",76.50%,Medium
2391,Minimum Amount of Time to Collect Garbage,"['Array', 'String', 'Prefix Sum']",85.20%,Medium
2392,Build a Matrix With Conditions,"['Array', 'Graph', 'Topological Sort', 'Matrix']",79.50%,Hard
2393,Count Strictly Increasing Subarrays,"['Array', 'Math', 'Dynamic Programming']",73.70%,Medium
2394,Employees With Deductions,['Database'],41.00%,Medium
2395,Find Subarrays With Equal Sum,"['Array', 'Hash Table']",65.60%,Easy
2396,Strictly Palindromic Number,"['Math', 'Two Pointers', 'Brainteaser']",88.00%,Medium
2397,Maximum Rows Covered by Columns,"['Array', 'Backtracking', 'Bit Manipulation', 'Matrix', 'Enumeration']",56.10%,Medium
2398,Maximum Number of Robots Within Budget,"['Array', 'Binary Search', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Prefix Sum', 'Monotonic Queue']",35.50%,Hard
2399,Check Distances Between Same Letters,"['Array', 'Hash Table', 'String']",71.00%,Easy
2400,Number of Ways to Reach a Position After Exactly k Steps,"['Math', 'Dynamic Programming', 'Combinatorics']",35.50%,Medium
2401,Longest Nice Subarray,"['Array', 'Bit Manipulation', 'Sliding Window']",51.80%,Medium
2402,Meeting Rooms III,"['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",44.10%,Hard
2403,Minimum Time to Kill All Monsters,"['Array', 'Dynamic Programming']",56.50%,Hard
2404,Most Frequent Even Element,"['Array', 'Hash Table', 'Counting']",51.00%,Easy
2405,Optimal Partition of String,"['Hash Table', 'String', 'Greedy']",78.00%,Medium
2406,Divide Intervals Into Minimum Number of Groups,"['Array', 'Two Pointers', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Prefix Sum']",63.70%,Medium
2407,Longest Increasing Subsequence II,"['Array', 'Divide and Conquer', 'Dynamic Programming', 'Binary Indexed Tree', 'Segment Tree', 'Queue', 'Monotonic Queue']",24.60%,Hard
2408,Design SQL,"['Array', 'Hash Table', 'String']",78.00%,Medium
2409,Count Days Spent Together,"['Math', 'String']",45.60%,Easy
2410,Maximum Matching of Players With Trainers,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",64.50%,Medium
2411,Smallest Subarrays With Maximum Bitwise OR,"['Array', 'Binary Search', 'Bit Manipulation', 'Sliding Window']",44.60%,Medium
2412,Minimum Money Required Before Transactions,"['Array', 'Greedy', 'Sorting']",40.70%,Hard
2413,Smallest Even Multiple,"['Math', 'Number Theory']",88.00%,Easy
2414,Length of the Longest Alphabetical Continuous Substring,['String'],59.00%,Medium
2415,Reverse Odd Levels of Binary Tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",78.50%,Medium
2416,Sum of Prefix Scores of Strings,"['Array', 'String', 'Trie', 'Counting']",60.60%,Hard
2417,Closest Fair Integer,"['Math', 'Enumeration']",45.20%,Medium
2418,Sort the People,"['Array', 'Hash Table', 'String', 'Sorting']",84.90%,Easy
2419,Longest Subarray With Maximum Bitwise AND,"['Array', 'Bit Manipulation', 'Brainteaser']",61.80%,Medium
2420,Find All Good Indices,"['Array', 'Dynamic Programming', 'Prefix Sum']",39.10%,Medium
2421,Number of Good Paths,"['Array', 'Hash Table', 'Tree', 'Union Find', 'Graph', 'Sorting']",56.20%,Hard
2422,Merge Operations to Turn Array Into a Palindrome,"['Array', 'Two Pointers', 'Greedy']",69.10%,Medium
2423,Remove Letter To Equalize Frequency,"['Hash Table', 'String', 'Counting']",17.50%,Easy
2424,Longest Uploaded Prefix,"['Binary Search', 'Union Find', 'Design', 'Binary Indexed Tree', 'Segment Tree', 'Heap (Priority Queue)', 'Ordered Set']",55.90%,Medium
2425,Bitwise XOR of All Pairings,"['Array', 'Bit Manipulation', 'Brainteaser']",58.00%,Medium
2426,Number of Pairs Satisfying Inequality,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",44.30%,Hard
2427,Number of Common Factors,"['Math', 'Enumeration', 'Number Theory']",79.20%,Easy
2428,Maximum Sum of an Hourglass,"['Array', 'Matrix', 'Prefix Sum']",75.30%,Medium
2429,Minimize XOR,"['Greedy', 'Bit Manipulation']",44.60%,Medium
2430,Maximum Deletions on a String,"['String', 'Dynamic Programming', 'Rolling Hash', 'String Matching', 'Hash Function']",33.90%,Hard
2431,Maximize Total Tastiness of Purchased Fruits,"['Array', 'Dynamic Programming']",63.70%,Medium
2432,The Employee That Worked on the Longest Task,['Array'],50.60%,Easy
2433,Find The Original Array of Prefix Xor,"['Array', 'Bit Manipulation']",88.00%,Medium
2434,Using a Robot to Print the Lexicographically Smallest String,"['Hash Table', 'String', 'Stack', 'Greedy']",40.60%,Medium
2435,Paths in Matrix Whose Sum Is Divisible by K,"['Array', 'Dynamic Programming', 'Matrix']",43.30%,Hard
2436,Minimum Split Into Subarrays With GCD Greater Than One,"['Array', 'Math']",71.40%,Medium
2437,Number of Valid Clock Times,"['String', 'Enumeration']",47.10%,Easy
2438,Range Product Queries of Powers,"['Array', 'Bit Manipulation', 'Prefix Sum']",41.10%,Medium
2439,Minimize Maximum of Array,"['Array', 'Binary Search', 'Dynamic Programming', 'Greedy', 'Prefix Sum']",46.40%,Medium
2440,Create Components With Same Value,"['Array', 'Math', 'Tree', 'Depth-First Search', 'Enumeration']",53.00%,Hard
2441,Largest Positive Integer That Exists With Its Negative,"['Array', 'Hash Table', 'Two Pointers', 'Sorting']",75.00%,Easy
2442,Count Number of Distinct Integers After Reverse Operations,"['Array', 'Hash Table', 'Math', 'Counting']",79.90%,Medium
2443,Sum of Number and Its Reverse,"['Math', 'Enumeration']",47.90%,Medium
2444,Count Subarrays With Fixed Bounds,"['Array', 'Queue', 'Sliding Window', 'Monotonic Queue']",67.80%,Hard
2445,Number of Nodes With Value One,"['Tree', 'Depth-First Search']",68.10%,Medium
2446,Determine if Two Events Have Conflict,"['Array', 'String']",51.70%,Easy
2447,Number of Subarrays With GCD Equal to K,"['Array', 'Math', 'Number Theory']",50.50%,Medium
2448,Minimum Cost to Make Array Equal,"['Array', 'Binary Search', 'Greedy', 'Sorting', 'Prefix Sum']",46.10%,Hard
2449,Minimum Number of Operations to Make Arrays Similar,"['Array', 'Greedy', 'Sorting']",61.80%,Hard
2450,Number of Distinct Binary Strings After Applying Operations,"['Math', 'String']",64.20%,Medium
2451,Odd String Difference,"['Array', 'Hash Table', 'String']",59.90%,Easy
2452,Words Within Two Edits of Dictionary,"['Array', 'String']",60.90%,Medium
2453,Destroy Sequential Targets,"['Array', 'Hash Table', 'Counting']",39.80%,Medium
2454,Next Greater Element IV,"['Array', 'Binary Search', 'Stack', 'Sorting', 'Heap (Priority Queue)', 'Monotonic Stack']",38.90%,Hard
2455,Average Value of Even Numbers That Are Divisible by Three,"['Array', 'Math']",60.80%,Easy
2456,Most Popular Video Creator,"['Array', 'Hash Table', 'String', 'Sorting', 'Heap (Priority Queue)']",44.10%,Medium
2457,Minimum Addition to Make Integer Beautiful,"['Math', 'Greedy']",37.80%,Medium
2458,Height of Binary Tree After Subtree Removal Queries,"['Array', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",55.10%,Hard
2459,Sort Array by Moving Items to Empty Space,"['Array', 'Greedy', 'Sorting']",45.00%,Hard
2460,Apply Operations to an Array,"['Array', 'Two Pointers', 'Simulation']",68.20%,Easy
2461,Maximum Sum of Distinct Subarrays With Length K,"['Array', 'Hash Table', 'Sliding Window']",34.30%,Medium
2462,Total Cost to Hire K Workers,"['Array', 'Two Pointers', 'Heap (Priority Queue)', 'Simulation']",42.80%,Medium
2463,Minimum Total Distance Traveled,"['Array', 'Dynamic Programming', 'Sorting']",59.80%,Hard
2464,Minimum Subarrays in a Valid Split,"['Array', 'Math']",54.50%,Medium
2465,Number of Distinct Averages,"['Array', 'Hash Table', 'Two Pointers', 'Sorting']",58.40%,Easy
2466,Count Ways To Build Good Strings,['Dynamic Programming'],54.30%,Medium
2467,Most Profitable Path in a Tree,"['Array', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Graph']",49.50%,Medium
2468,Split Message Based on Limit,"['String', 'Binary Search']",43.80%,Hard
2469,Convert the Temperature,['Math'],89.90%,Easy
2470,Number of Subarrays With LCM Equal to K,"['Array', 'Math', 'Number Theory']",39.30%,Medium
2471,Minimum Number of Operations to Sort a Binary Tree by Level,"['Tree', 'Breadth-First Search', 'Binary Tree']",62.30%,Medium
2472,Maximum Number of Non-overlapping Palindrome Substrings,"['Two Pointers', 'String', 'Dynamic Programming', 'Greedy']",40.80%,Hard
2473,Minimum Cost to Buy Apples,"['Array', 'Graph']",67.50%,Medium
2474,Customers With Strictly Increasing Purchases,['Database'],45.70%,Hard
2475,Number of Unequal Triplets in Array,"['Array', 'Hash Table', 'Sorting']",71.80%,Easy
2476,Closest Nodes Queries in a Binary Search Tree,"['Array', 'Binary Search', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",41.50%,Medium
2477,Minimum Fuel Cost to Report to the Capital,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Graph']",64.30%,Medium
2478,Number of Beautiful Partitions,"['String', 'Dynamic Programming']",31.50%,Hard
2479,Maximum XOR of Two Non-Overlapping Subtrees,"['Tree', 'Depth-First Search', 'Graph']",47.90%,Hard
2480,Form a Chemical Bond,['Database'],76.60%,Easy
2481,Minimum Cuts to Divide a Circle,"['Math', 'Geometry']",53.70%,Easy
2482,Difference Between Ones and Zeros in Row and Column,"['Array', 'Matrix', 'Simulation']",84.40%,Medium
2483,Minimum Penalty for a Shop,"['String', 'Prefix Sum']",67.40%,Medium
2484,Count Palindromic Subsequences,"['String', 'Dynamic Programming']",38.30%,Hard
2485,Find the Pivot Integer,"['Math', 'Prefix Sum']",83.90%,Easy
2486,Append Characters to String to Make Subsequence,"['Two Pointers', 'String', 'Greedy']",73.00%,Medium
2487,Remove Nodes From Linked List,"['Linked List', 'Stack', 'Recursion', 'Monotonic Stack']",74.40%,Medium
2488,Count Subarrays With Median K,"['Array', 'Hash Table', 'Prefix Sum']",44.50%,Hard
2489,Number of Substrings With Fixed Ratio,"['Hash Table', 'Math', 'String']",56.60%,Medium
2490,Circular Sentence,['String'],66.90%,Easy
2491,Divide Players Into Teams of Equal Skill,"['Array', 'Hash Table', 'Two Pointers', 'Sorting']",69.00%,Medium
2492,Minimum Score of a Path Between Two Cities,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",57.50%,Medium
2493,Divide Nodes Into the Maximum Number of Groups,"['Breadth-First Search', 'Union Find', 'Graph']",40.20%,Hard
2494,Merge Overlapping Events in the Same Hall,['Database'],32.70%,Hard
2495,Number of Subarrays Having Even Product,"['Array', 'Math', 'Dynamic Programming']",62.80%,Medium
2496,Maximum Value of a String in an Array,"['Array', 'String']",72.80%,Easy
2497,Maximum Star Sum of a Graph,"['Array', 'Greedy', 'Graph', 'Sorting', 'Heap (Priority Queue)']",40.00%,Medium
2498,Frog Jump II,"['Array', 'Binary Search', 'Greedy']",62.10%,Medium
2499,Minimum Total Cost to Make Arrays Unequal,"['Array', 'Hash Table', 'Greedy', 'Counting']",43.00%,Hard
2500,Delete Greatest Value in Each Row,"['Array', 'Sorting', 'Heap (Priority Queue)', 'Matrix', 'Simulation']",78.60%,Easy
2501,Longest Square Streak in an Array,"['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming', 'Sorting']",53.00%,Medium
2502,Design Memory Allocator,"['Array', 'Hash Table', 'Design', 'Simulation']",53.50%,Medium
2503,Maximum Number of Points From Grid Queries,"['Array', 'Two Pointers', 'Breadth-First Search', 'Union Find', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",38.40%,Hard
2504,Concatenate the Name and the Profession,['Database'],76.80%,Easy
2505,Bitwise OR of All Subsequence Sums,"['Array', 'Math', 'Bit Manipulation']",66.70%,Medium
2506,Count Pairs Of Similar Strings,"['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Counting']",71.50%,Easy
2507,Smallest Value After Replacing With Sum of Prime Factors,"['Math', 'Simulation', 'Number Theory']",49.10%,Medium
2508,Add Edges to Make Degrees of All Nodes Even,"['Hash Table', 'Graph']",32.90%,Hard
2509,Cycle Length Queries in a Tree,"['Array', 'Tree', 'Binary Tree']",56.90%,Hard
2510,Check if There is a Path With Equal Number of 0's And 1's,"['Array', 'Dynamic Programming', 'Matrix']",50.60%,Medium
2511,Maximum Enemy Forts That Can Be Captured,"['Array', 'Two Pointers']",38.90%,Easy
2512,Reward Top K Students,"['Array', 'Hash Table', 'String', 'Sorting', 'Heap (Priority Queue)']",45.40%,Medium
2513,Minimize the Maximum of Two Arrays,"['Math', 'Binary Search', 'Number Theory']",30.60%,Medium
2514,Count Anagrams,"['Hash Table', 'Math', 'String', 'Combinatorics', 'Counting']",34.00%,Hard
2515,Shortest Distance to Target String in a Circular Array,"['Array', 'String']",49.90%,Easy
2516,Take K of Each Character From Left and Right,"['Hash Table', 'String', 'Sliding Window']",34.50%,Medium
2517,Maximum Tastiness of Candy Basket,"['Array', 'Binary Search', 'Greedy', 'Sorting']",64.40%,Medium
2518,Number of Great Partitions,"['Array', 'Dynamic Programming']",31.90%,Hard
2519,Count the Number of K-Big Indices,"['Array', 'Binary Search']",53.30%,Hard
2520,Count the Digits That Divide a Number,['Math'],85.10%,Easy
2521,Distinct Prime Factors of Product of Array,"['Array', 'Hash Table', 'Math', 'Number Theory']",52.00%,Medium
2522,Partition String Into Substrings With Values at Most K,"['String', 'Dynamic Programming', 'Greedy']",46.60%,Medium
2523,Closest Prime Numbers in Range,"['Math', 'Number Theory']",38.40%,Medium
2524,Maximum Frequency Score of a Subarray,"['Array', 'Hash Table', 'Math']",37.80%,Hard
2525,Categorize Box According to Criteria,['Math'],36.30%,Easy
2526,Find Consecutive Integers from a Data Stream,"['Hash Table', 'Design', 'Queue', 'Counting', 'Data Stream']",49.60%,Medium
2527,Find Xor-Beauty of Array,"['Array', 'Math', 'Bit Manipulation']",68.70%,Medium
2528,Maximize the Minimum Powered City,"['Array', 'Binary Search', 'Greedy', 'Queue', 'Sliding Window', 'Prefix Sum']",32.70%,Hard
2529,Maximum Count of Positive Integer and Negative Integer,"['Array', 'Binary Search', 'Counting']",71.10%,Easy
2530,Maximal Score After Applying K Operations,"['Array', 'Greedy', 'Heap (Priority Queue)']",63.70%,Medium
2531,Make Number of Distinct Characters Equal,"['Hash Table', 'String', 'Counting']",26.70%,Medium
2532,Time to Cross a Bridge,"['Array', 'Heap (Priority Queue)', 'Simulation']",44.00%,Hard
2533,Number of Good Binary Strings,['Dynamic Programming'],51.80%,Medium
2534,Time Taken to Cross the Door,"['Array', 'Queue', 'Simulation']",49.30%,Hard
2535,Difference Between Element Sum and Digit Sum of an Array,"['Array', 'Math']",84.70%,Easy
2536,Increment Submatrices by One,"['Array', 'Matrix', 'Prefix Sum']",50.30%,Medium
2537,Count the Number of Good Subarrays,"['Array', 'Hash Table', 'Sliding Window']",52.00%,Medium
2538,Difference Between Maximum and Minimum Price Sum,"['Array', 'Dynamic Programming', 'Tree', 'Depth-First Search']",32.20%,Hard
2539,Count the Number of Good Subsequences,"['Hash Table', 'Math', 'String']",52.80%,Medium
2540,Minimum Common Value,"['Array', 'Hash Table', 'Two Pointers', 'Binary Search']",58.50%,Easy
2541,Minimum Operations to Make Array Equal II,"['Array', 'Math', 'Greedy']",31.90%,Medium
2542,Maximum Subsequence Score,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",53.90%,Medium
2543,Check if Point Is Reachable,"['Math', 'Number Theory']",43.10%,Hard
2544,Alternating Digit Sum,['Math'],68.40%,Easy
2545,Sort the Students by Their Kth Score,"['Array', 'Sorting', 'Matrix']",85.60%,Medium
2546,Apply Bitwise Operations to Make Strings Equal,"['String', 'Bit Manipulation']",41.60%,Medium
2547,Minimum Cost to Split an Array,"['Array', 'Hash Table', 'Dynamic Programming', 'Counting']",41.30%,Hard
2548,Maximum Price to Fill a Bag,"['Array', 'Greedy', 'Sorting']",66.10%,Medium
2549,Count Distinct Numbers on Board,"['Array', 'Hash Table', 'Math', 'Simulation']",60.70%,Easy
2550,Count Collisions of Monkeys on a Polygon,"['Math', 'Recursion']",28.20%,Medium
2551,Put Marbles in Bags,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",66.40%,Hard
2552,Count Increasing Quadruplets,"['Array', 'Dynamic Programming', 'Binary Indexed Tree', 'Enumeration', 'Prefix Sum']",33.60%,Hard
2553,Separate the Digits in an Array,"['Array', 'Simulation']",79.80%,Easy
2554,Maximum Number of Integers to Choose From a Range I,"['Array', 'Hash Table', 'Binary Search', 'Greedy', 'Sorting']",54.60%,Medium
2555,Maximize Win From Two Segments,"['Array', 'Binary Search', 'Sliding Window']",33.80%,Medium
2556,Disconnect Path in a Binary Matrix by at Most One Flip,"['Array', 'Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",27.30%,Medium
2557,Maximum Number of Integers to Choose From a Range II,"['Array', 'Binary Search', 'Greedy']",38.10%,Medium
2558,Take Gifts From the Richest Pile,"['Array', 'Heap (Priority Queue)', 'Simulation']",67.40%,Easy
2559,Count Vowel Strings in Ranges,"['Array', 'String', 'Prefix Sum']",53.00%,Medium
2560,House Robber IV,"['Array', 'Binary Search']",44.70%,Medium
2561,Rearranging Fruits,"['Array', 'Hash Table', 'Greedy']",34.20%,Hard
2562,Find the Array Concatenation Value,"['Array', 'Two Pointers', 'Simulation']",70.40%,Easy
2563,Count the Number of Fair Pairs,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",33.40%,Medium
2564,Substring XOR Queries,"['Array', 'Hash Table', 'String', 'Bit Manipulation']",33.60%,Medium
2565,Subsequence With the Minimum Score,"['Two Pointers', 'String', 'Binary Search']",32.20%,Hard
2566,Maximum Difference by Remapping a Digit,"['Math', 'Greedy']",60.20%,Easy
2567,Minimum Score by Changing Two Elements,"['Array', 'Greedy', 'Sorting']",48.30%,Medium
2568,Minimum Impossible OR,"['Array', 'Bit Manipulation', 'Brainteaser']",57.80%,Medium
2569,Handling Sum Queries After Update,"['Array', 'Segment Tree']",28.80%,Hard
2570,Merge Two 2D Arrays by Summing Values,"['Array', 'Hash Table', 'Two Pointers']",74.10%,Easy
2571,Minimum Operations to Reduce an Integer to 0,"['Dynamic Programming', 'Greedy', 'Bit Manipulation']",56.00%,Medium
2572,Count the Number of Square-Free Subsets,"['Array', 'Math', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",23.70%,Medium
2573,Find the String with LCP,"['Array', 'String', 'Dynamic Programming', 'Greedy', 'Union Find', 'Matrix']",31.40%,Hard
2574,Left and Right Sum Differences,"['Array', 'Prefix Sum']",87.10%,Easy
2575,Find the Divisibility Array of a String,"['Array', 'Math', 'String']",33.70%,Medium
2576,Find the Maximum Number of Marked Indices,"['Array', 'Two Pointers', 'Binary Search', 'Greedy', 'Sorting']",39.10%,Medium
2577,Minimum Time to Visit a Cell In a Grid,"['Array', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",35.80%,Hard
2578,Split With Minimum Sum,"['Math', 'Greedy', 'Sorting']",71.30%,Easy
2579,Count Total Number of Colored Cells,['Math'],58.00%,Medium
2580,Count Ways to Group Overlapping Ranges,"['Array', 'Sorting']",36.70%,Medium
2581,Count Number of Possible Root Nodes,"['Array', 'Hash Table', 'Dynamic Programming', 'Tree', 'Depth-First Search']",46.20%,Hard
2582,Pass the Pillow,"['Math', 'Simulation']",56.90%,Easy
2583,Kth Largest Sum in a Binary Tree,"['Tree', 'Breadth-First Search', 'Sorting', 'Binary Tree']",59.40%,Medium
2584,Split the Array to Make Coprime Products,"['Array', 'Hash Table', 'Math', 'Number Theory']",23.30%,Hard
2585,Number of Ways to Earn Points,"['Array', 'Dynamic Programming']",57.90%,Hard
2586,Count the Number of Vowel Strings in Range,"['Array', 'String', 'Counting']",74.40%,Easy
2587,Rearrange Array to Maximize Prefix Score,"['Array', 'Greedy', 'Sorting', 'Prefix Sum']",41.40%,Medium
2588,Count the Number of Beautiful Subarrays,"['Array', 'Hash Table', 'Bit Manipulation', 'Prefix Sum']",50.80%,Medium
2589,Minimum Time to Complete All Tasks,"['Array', 'Binary Search', 'Stack', 'Greedy', 'Sorting']",39.90%,Hard
2590,Design a Todo List,"['Array', 'Hash Table', 'String']",58.20%,Medium
2591,Distribute Money to Maximum Children,"['Math', 'Greedy']",19.30%,Easy
2592,Maximize Greatness of an Array,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",58.70%,Medium
2593,Find Score of an Array After Marking All Elements,"['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",52.70%,Medium
2594,Minimum Time to Repair Cars,"['Array', 'Binary Search']",45.50%,Medium
2595,Number of Even and Odd Bits,['Bit Manipulation'],73.60%,Easy
2596,Check Knight Tour Configuration,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix', 'Simulation']",57.40%,Medium
2597,The Number of Beautiful Subsets,"['Array', 'Hash Table', 'Math', 'Dynamic Programming', 'Backtracking', 'Sorting', 'Combinatorics']",51.00%,Medium
2598,Smallest Missing Non-negative Integer After Operations,"['Array', 'Hash Table', 'Math', 'Greedy']",39.70%,Medium
2599,Make the Prefix Sum Non-negative,"['Array', 'Greedy', 'Heap (Priority Queue)']",48.20%,Medium
2600,K Items With the Maximum Sum,"['Math', 'Greedy']",62.00%,Easy
2601,Prime Subtraction Operation,"['Array', 'Math', 'Binary Search', 'Greedy', 'Number Theory']",38.40%,Medium
2602,Minimum Operations to Make All Array Elements Equal,"['Array', 'Binary Search', 'Sorting', 'Prefix Sum']",36.10%,Medium
2603,Collect Coins in a Tree,"['Array', 'Tree', 'Graph', 'Topological Sort']",36.60%,Hard
2604,Minimum Time to Eat All Grains,"['Array', 'Two Pointers', 'Binary Search']",40.80%,Hard
2605,Form Smallest Number From Two Digit Arrays,"['Array', 'Hash Table', 'Enumeration']",54.40%,Easy
2606,Find the Substring With Maximum Cost,"['Array', 'Hash Table', 'String', 'Dynamic Programming']",57.20%,Medium
2607,Make K-Subarray Sums Equal,"['Array', 'Math', 'Sorting', 'Number Theory']",37.30%,Medium
2608,Shortest Cycle in a Graph,"['Breadth-First Search', 'Graph']",36.60%,Hard
2609,Find the Longest Balanced Substring of a Binary String,['String'],46.60%,Easy
2610,Convert an Array Into a 2D Array With Conditions,"['Array', 'Hash Table']",87.00%,Medium
2611,Mice and Cheese,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",46.60%,Medium
2612,Minimum Reverse Operations,"['Array', 'Breadth-First Search', 'Ordered Set']",16.50%,Hard
2613,Beautiful Pairs,"['Array', 'Math', 'Divide and Conquer']",42.80%,Hard
2614,Prime In Diagonal,"['Array', 'Math', 'Matrix', 'Number Theory']",34.90%,Easy
2615,Sum of Distances,"['Array', 'Hash Table', 'Prefix Sum']",31.30%,Medium
2616,Minimize the Maximum Difference of Pairs,"['Array', 'Binary Search', 'Greedy']",44.00%,Medium
2617,Minimum Number of Visited Cells in a Grid,"['Array', 'Dynamic Programming', 'Stack', 'Breadth-First Search', 'Union Find', 'Heap (Priority Queue)', 'Matrix', 'Monotonic Stack']",24.70%,Hard
2618,Check if Object Instance of Class,[],27.70%,Medium
2619,Array Prototype Last,[],73.80%,Easy
2620,Counter,[],81.50%,Easy
2621,Sleep,[],87.30%,Easy
2622,Cache With Time Limit,[],74.90%,Medium
2623,Memoize,[],62.80%,Medium
2624,Snail Traversal,[],65.70%,Medium
2625,Flatten Deeply Nested Array,[],63.70%,Medium
2626,Array Reduce Transformation,[],85.00%,Easy
2627,Debounce,[],91.20%,Medium
2628,JSON Deep Equal,[],38.70%,Medium
2629,Function Composition,[],86.70%,Easy
2630,Memoize II,[],31.30%,Hard
2631,Group By,[],81.00%,Medium
2632,Curry,[],89.20%,Medium
2633,Convert Object to JSON String,[],77.30%,Medium
2634,Filter Elements from Array,[],85.00%,Easy
2635,Apply Transform Over Each Element in Array,[],86.00%,Easy
2636,Promise Pool,[],79.70%,Medium
2637,Promise Time Limit,[],81.80%,Medium
2638,Count the Number of K-Free Subsets,"['Array', 'Math']",46.70%,Medium
2639,Find the Width of Columns of a Grid,"['Array', 'Matrix']",68.30%,Easy
2640,Find the Score of All Prefixes of an Array,"['Array', 'Prefix Sum']",71.20%,Medium
2641,Cousins in Binary Tree II,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",75.30%,Medium
2642,Design Graph With Shortest Path Calculator,"['Graph', 'Design', 'Heap (Priority Queue)', 'Shortest Path']",70.60%,Hard
2643,Row With Maximum Ones,"['Array', 'Matrix']",75.10%,Easy
2644,Find the Maximum Divisibility Score,['Array'],49.80%,Easy
2645,Minimum Additions to Make Valid String,"['String', 'Dynamic Programming', 'Stack', 'Greedy']",50.60%,Medium
2646,Minimize the Total Price of the Trips,"['Array', 'Dynamic Programming', 'Tree', 'Depth-First Search', 'Graph']",46.30%,Hard
2647,Color the Triangle Red,"['Array', 'Math']",66.30%,Hard
2648,Generate Fibonacci Sequence,[],83.50%,Easy
2649,Nested Array Generator,[],79.10%,Medium
2650,Design Cancellable Function,[],49.30%,Hard
2651,Calculate Delayed Arrival Time,['Math'],78.10%,Easy
2652,Sum Multiples,['Math'],85.70%,Easy
2653,Sliding Subarray Beauty,"['Array', 'Hash Table', 'Sliding Window']",33.40%,Medium
2654,Minimum Number of Operations to Make All Array Elements Equal to 1,"['Array', 'Math', 'Number Theory']",35.50%,Medium
2655,Find Maximal Uncovered Ranges,"['Array', 'Sorting']",51.60%,Medium
2656,Maximum Sum With Exactly K Elements,"['Array', 'Greedy']",82.50%,Easy
2657,Find the Prefix Common Array of Two Arrays,"['Array', 'Hash Table', 'Bit Manipulation']",81.10%,Medium
2658,Maximum Number of Fish in a Grid,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",60.80%,Medium
2659,Make Array Empty,"['Array', 'Binary Search', 'Greedy', 'Binary Indexed Tree', 'Segment Tree', 'Sorting', 'Ordered Set']",25.40%,Hard
2660,Determine the Winner of a Bowling Game,"['Array', 'Simulation']",34.80%,Easy
2661,First Completely Painted Row or Column,"['Array', 'Hash Table', 'Matrix']",50.40%,Medium
2662,Minimum Cost of a Path With Special Roads,"['Array', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",39.90%,Medium
2663,Lexicographically Smallest Beautiful String,"['String', 'Greedy']",40.00%,Hard
2664,The Knight’s Tour,"['Array', 'Backtracking', 'Matrix']",73.60%,Medium
2665,Counter II,[],80.50%,Easy
2666,Allow One Function Call,[],86.60%,Easy
2667,Create Hello World Function,[],81.60%,Easy
2668,Find Latest Salaries,['Database'],73.20%,Easy
2669,Count Artist Occurrences On Spotify Ranking List,['Database'],73.30%,Easy
2670,Find the Distinct Difference Array,"['Array', 'Hash Table']",78.20%,Easy
2671,Frequency Tracker,"['Hash Table', 'Design']",30.30%,Medium
2672,Number of Adjacent Elements With the Same Color,['Array'],54.60%,Medium
2673,Make Costs of Paths Equal in a Binary Tree,"['Array', 'Dynamic Programming', 'Greedy', 'Tree', 'Binary Tree']",58.90%,Medium
2674,Split a Circular Linked List,"['Linked List', 'Two Pointers']",75.50%,Medium
2675,Array of Objects to Matrix,[],68.40%,Hard
2676,Throttle,[],82.80%,Medium
2677,Chunk Array,[],83.60%,Easy
2678,Number of Senior Citizens,"['Array', 'String']",81.60%,Easy
2679,Sum in a Matrix,"['Array', 'Sorting', 'Heap (Priority Queue)', 'Matrix', 'Simulation']",60.30%,Medium
2680,Maximum OR,"['Array', 'Greedy', 'Bit Manipulation', 'Prefix Sum']",41.30%,Medium
2681,Power of Heroes,"['Array', 'Math', 'Dynamic Programming', 'Sorting', 'Prefix Sum']",31.50%,Hard
2682,Find the Losers of the Circular Game,"['Array', 'Hash Table', 'Simulation']",49.50%,Easy
2683,Neighboring Bitwise XOR,"['Array', 'Bit Manipulation']",62.40%,Medium
2684,Maximum Number of Moves in a Grid,"['Array', 'Dynamic Programming', 'Matrix']",59.40%,Medium
2685,Count the Number of Complete Components,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",66.30%,Medium
2686,Immediate Food Delivery III,['Database'],68.20%,Medium
2687,Bikes Last Time Used,['Database'],80.70%,Easy
2688,Find Active Users,['Database'],43.30%,Medium
2689,Extract Kth Character From The Rope Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",74.30%,Easy
2690,Infinite Method Object,[],92.00%,Easy
2691,Immutability Helper,[],42.00%,Hard
2692,Make Object Immutable,[],64.40%,Medium
2693,Call Function with Custom Context,[],79.20%,Medium
2694,Event Emitter,[],73.90%,Medium
2695,Array Wrapper,[],88.40%,Easy
2696,Minimum String Length After Removing Substrings,"['String', 'Stack', 'Simulation']",77.90%,Easy
2697,Lexicographically Smallest Palindrome,"['Two Pointers', 'String', 'Greedy']",82.20%,Easy
2698,Find the Punishment Number of an Integer,"['Math', 'Backtracking']",63.30%,Medium
2699,Modify Graph Edge Weights,"['Graph', 'Heap (Priority Queue)', 'Shortest Path']",57.00%,Hard
2700,Differences Between Two Objects,[],75.40%,Medium
2701,Consecutive Transactions with Increasing Amounts,['Database'],32.90%,Hard
2702,Minimum Operations to Make Numbers Non-positive,"['Array', 'Binary Search']",41.90%,Hard
2703,Return Length of Arguments Passed,[],94.40%,Easy
2704,To Be Or Not To Be,[],62.50%,Easy
2705,Compact Object,[],65.50%,Medium
2706,Buy Two Chocolates,"['Array', 'Greedy', 'Sorting']",69.00%,Easy
2707,Extra Characters in a String,"['Array', 'Hash Table', 'String', 'Dynamic Programming', 'Trie']",57.50%,Medium
2708,Maximum Strength of a Group,"['Array', 'Dynamic Programming', 'Backtracking', 'Greedy', 'Bit Manipulation', 'Sorting', 'Enumeration']",24.60%,Medium
2709,Greatest Common Divisor Traversal,"['Array', 'Math', 'Union Find', 'Number Theory']",42.40%,Hard
2710,Remove Trailing Zeros From a String,['String'],79.00%,Easy
2711,Difference of Number of Distinct Values on Diagonals,"['Array', 'Hash Table', 'Matrix']",70.80%,Medium
2712,Minimum Cost to Make All Characters Equal,"['String', 'Dynamic Programming', 'Greedy']",55.00%,Medium
2713,Maximum Strictly Increasing Cells in a Matrix,"['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming', 'Memoization', 'Sorting', 'Matrix', 'Ordered Set']",31.00%,Hard
2714,Find Shortest Path with K Hops,"['Graph', 'Heap (Priority Queue)']",61.30%,Hard
2715,Timeout Cancellation,[],88.90%,Easy
2716,Minimize String Length,"['Hash Table', 'String']",77.10%,Easy
2717,Semi-Ordered Permutation,"['Array', 'Simulation']",64.40%,Easy
2718,Sum of Matrix After Queries,"['Array', 'Hash Table']",31.20%,Medium
2719,Count of Integers,"['Math', 'String', 'Dynamic Programming']",34.90%,Hard
2720,Popularity Percentage,['Database'],52.50%,Hard
2721,Execute Asynchronous Functions in Parallel,[],75.70%,Medium
2722,Join Two Arrays by ID,[],55.30%,Medium
2723,Add Two Promises,[],91.50%,Easy
2724,Sort By,[],82.80%,Easy
2725,Interval Cancellation,[],81.90%,Easy
2726,Calculator with Method Chaining,[],76.10%,Easy
2727,Is Object Empty,[],80.70%,Easy
2728,Count Houses in a Circular Street,"['Array', 'Interactive']",85.20%,Easy
2729,Check if The Number is Fascinating,"['Hash Table', 'Math']",52.50%,Easy
2730,Find the Longest Semi-Repetitive Substring,"['String', 'Sliding Window']",37.30%,Medium
2731,Movement of Robots,"['Array', 'Brainteaser', 'Sorting', 'Prefix Sum']",28.00%,Medium
2732,Find a Good Subset of the Matrix,"['Array', 'Hash Table', 'Bit Manipulation', 'Matrix']",45.70%,Hard
2733,Neither Minimum nor Maximum,"['Array', 'Sorting']",76.60%,Easy
2734,Lexicographically Smallest String After Substring Operation,"['String', 'Greedy']",32.20%,Medium
2735,Collecting Chocolates,"['Array', 'Enumeration']",34.00%,Medium
2736,Maximum Sum Queries,"['Array', 'Binary Search', 'Stack', 'Binary Indexed Tree', 'Segment Tree', 'Sorting', 'Monotonic Stack']",29.30%,Hard
2737,Find the Closest Marked Node,"['Array', 'Graph']",57.70%,Medium
2738,Count Occurrences in Text,['Database'],55.80%,Medium
2739,Total Distance Traveled,"['Math', 'Simulation']",39.50%,Easy
2740,Find the Value of the Partition,"['Array', 'Sorting']",65.50%,Medium
2741,Special Permutations,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",29.00%,Medium
2742,Painting the Walls,"['Array', 'Dynamic Programming']",50.70%,Hard
2743,Count Substrings Without Repeating Character,"['Hash Table', 'String', 'Sliding Window']",76.60%,Medium
2744,Find Maximum Number of String Pairs,"['Array', 'Hash Table', 'String', 'Simulation']",82.00%,Easy
2745,Construct the Longest New String,"['Math', 'Dynamic Programming', 'Greedy', 'Brainteaser']",54.50%,Medium
2746,Decremental String Concatenation,"['Array', 'String', 'Dynamic Programming']",27.30%,Medium
2747,Count Zero Request Servers,"['Array', 'Hash Table', 'Sliding Window', 'Sorting']",33.30%,Medium
2748,Number of Beautiful Pairs,"['Array', 'Hash Table', 'Math', 'Counting', 'Number Theory']",50.90%,Easy
2749,Minimum Operations to Make the Integer Zero,"['Bit Manipulation', 'Brainteaser']",30.40%,Medium
2750,Ways to Split Array Into Good Subarrays,"['Array', 'Math', 'Dynamic Programming']",34.60%,Medium
2751,Robot Collisions,"['Array', 'Stack', 'Sorting', 'Simulation']",56.10%,Hard
2752,Customers with Maximum Number of Transactions on Consecutive Days,"[]",41.00%,Hard
2753,Count Houses in a Circulat Street II,"[]",61.10%,Hard
2754,Bind Function to Context,[],86.70%,Medium
2755,Deep Merge of Two Objects,[],65.90%,Medium
2756,Query Batching,[],62.80%,Hard
2757,Generate Circular Array Values,[],72.80%,Medium
2758,Next Day,[],83.70%,Easy
2759,Convert JSON String to Object,[],61.20%,Hard
2760,Longest Even Odd Subarray With Threshold,"['Array', 'Sliding Window']",30.10%,Easy
2761,Prime Pairs With Target Sum,"['Array', 'Math', 'Enumeration', 'Number Theory']",34.70%,Medium
2762,Continuous Subarrays,"['Array', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Ordered Set', 'Monotonic Queue']",41.80%,Medium
2763,Sum of Imbalance Numbers of All Subarrays,"['Array', 'Hash Table', 'Ordered Set']",47.00%,Hard
2764,Is Array a Preorder of Some ‌Binary Tree,"['Stack', 'Tree', 'Depth-First Search']",65.80%,Medium
2765,Longest Alternating Subarray,"['Array', 'Enumeration']",34.40%,Easy
2766,Relocate Marbles,"['Array', 'Hash Table', 'Sorting', 'Simulation']",52.20%,Medium
2767,Partition String Into Minimum Beautiful Substrings,"['Hash Table', 'String', 'Dynamic Programming', 'Backtracking']",54.00%,Medium
2768,Number of Black Blocks,"['Array', 'Hash Table', 'Enumeration']",36.90%,Medium
2769,Find the Maximum Achievable Number,['Math'],91.00%,Easy
2770,Maximum Number of Jumps to Reach the Last Index,"['Array', 'Dynamic Programming']",31.80%,Medium
2771,Longest Non-decreasing Subarray From Two Arrays,"['Array', 'Dynamic Programming']",29.80%,Medium
2772,Apply Operations to Make All Array Elements Equal to Zero,"['Array', 'Prefix Sum']",33.40%,Medium
2773,Height of Special Binary Tree,"['Tree', 'Depth-First Search']",72.60%,Medium
2774,Array Upper Bound,[],81.90%,Easy
2775,Undefined to Null,[],70.00%,Medium
2776,Convert Callback Based Function to Promise Based Function,[],92.10%,Medium
2777,Date Range Generator,[],81.30%,Medium
2778,Sum of Squares of Special Elements,"['Array', 'Enumeration']",81.90%,Easy
2779,Maximum Beauty of an Array After Applying Operation,"['Array', 'Binary Search', 'Sliding Window', 'Sorting']",39.00%,Medium
2780,Minimum Index of a Valid Split,"['Array', 'Hash Table', 'Sorting']",62.60%,Medium
2781,Length of the Longest Valid Substring,"['Array', 'Hash Table', 'String', 'Sliding Window']",38.10%,Hard
2782,Number of Unique Categories,"['Union Find', 'Interactive', 'Counting']",83.10%,Medium
2783,Flight Occupancy and Waitlist Analysis,['Database'],37.80%,Medium
2784,Check if Array is Good,"['Array', 'Hash Table', 'Sorting']",49.40%,Easy
2785,Sort Vowels in a String,"['String', 'Sorting']",81.20%,Medium
2786,Visit Array Positions to Maximize Score,"['Array', 'Dynamic Programming']",36.40%,Medium
2787,Ways to Express an Integer as Sum of Powers,['Dynamic Programming'],34.20%,Medium
2788,Split Strings by Separator,"['Array', 'String']",75.00%,Easy
2789,Largest Element in an Array after Merge Operations,"['Array', 'Greedy']",47.50%,Medium
2790,Maximum Number of Groups With Increasing Length,"['Array', 'Math', 'Binary Search', 'Greedy', 'Sorting']",20.40%,Hard
2791,Count Paths That Can Form a Palindrome in a Tree,"['Dynamic Programming', 'Bit Manipulation', 'Tree', 'Depth-First Search', 'Bitmask']",48.00%,Hard
2792,Count Nodes That Are Great Enough,"['Divide and Conquer', 'Tree']",58.00%,Hard
2793,Status of Flight Tickets,[],75.80%,Hard
2794,Create Object from Two Arrays,[],64.00%,Easy
2795,Parallel Execution of Promises for Individual Results Retrieval,[],88.40%,Medium
2796,Repeat String,[],93.00%,Easy
2797,Partial Function with Placeholders,[],89.90%,Easy
2798,Number of Employees Who Met the Target,['Array'],87.90%,Easy
2799,Count Complete Subarrays in an Array,"['Array', 'Hash Table', 'Sliding Window']",65.90%,Medium
2800,Shortest String That Contains Three Strings,"['String', 'Greedy', 'Enumeration']",30.90%,Medium
2801,Count Stepping Numbers in Range,"['String', 'Dynamic Programming']",28.60%,Hard
2802,Find The K-th Lucky Number,"['Math', 'String', 'Bit Manipulation']",76.70%,Medium
2803,Factorial Generator,[],86.40%,Easy
2804,Array Prototype ForEach,[],88.60%,Easy
2805,Custom Interval,[],82.20%,Medium
2806,Account Balance After Rounded Purchase,['Math'],53.40%,Easy
2807,Insert Greatest Common Divisors in Linked List,"['Linked List', 'Math', 'Number Theory']",92.30%,Medium
2808,Minimum Seconds to Equalize a Circular Array,"['Array', 'Hash Table']",27.20%,Medium
2809,Minimum Time to Make Array Sum At Most x,"['Array', 'Dynamic Programming', 'Sorting']",27.20%,Hard
2810,Faulty Keyboard,"['String', 'Simulation']",84.30%,Easy
2811,Check if it is Possible to Split Array,"['Array', 'Dynamic Programming', 'Greedy']",34.00%,Medium
2812,Find the Safest Path in a Grid,"['Array', 'Binary Search', 'Breadth-First Search', 'Union Find', 'Heap (Priority Queue)', 'Matrix']",48.80%,Medium
2813,Maximum Elegance of a K-Length Subsequence,"['Array', 'Hash Table', 'Stack', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",33.30%,Hard
2814,Minimum Time Takes to Reach Destination Without Drowning,"['Array', 'Breadth-First Search', 'Matrix']",57.80%,Hard
2815,Max Pair Sum in an Array,"['Array', 'Hash Table']",58.90%,Easy
2816,Double a Number Represented as a Linked List,"['Linked List', 'Math', 'Stack']",61.50%,Medium
2817,Minimum Absolute Difference Between Elements With Constraint,"['Array', 'Binary Search', 'Ordered Set']",34.50%,Medium
2818,Apply Operations to Maximize Score,"['Array', 'Math', 'Stack', 'Greedy', 'Sorting', 'Monotonic Stack', 'Number Theory']",32.80%,Hard
2819,Minimum Relative Loss After Buying Chocolates,"['Array', 'Binary Search', 'Sorting']",49.40%,Hard
2820,Election Results,[],66.80%,Medium
2821,Delay the Resolution of Each Promise,[],67.70%,Medium
2822,Inversion of Object,[],58.30%,Easy
2823,Deep Object Filter,[],54.30%,Medium
2824,Count Pairs Whose Sum is Less than Target,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",87.50%,Easy
2825,Make String a Subsequence Using Cyclic Increments,"['Two Pointers', 'String']",49.80%,Medium
2826,Sorting Three Groups,"['Array', 'Binary Search', 'Dynamic Programming']",42.30%,Medium
2827,Number of Beautiful Integers in the Range,"['Math', 'Dynamic Programming']",18.70%,Hard
2828,Check if a String Is an Acronym of Words,"['Array', 'String']",83.20%,Easy
2829,Determine the Minimum Sum of a k-avoiding Array,"['Math', 'Greedy']",61.30%,Medium
2830,Maximize the Profit as the Salesman,"['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming', 'Sorting']",36.80%,Medium
2831,Find the Longest Equal Subarray,"['Array', 'Hash Table', 'Binary Search', 'Sliding Window']",36.10%,Medium
2832,Maximal Range That Each Element Is Maximum in It,"['Array', 'Stack', 'Monotonic Stack']",72.20%,Medium
2833,Furthest Point From Origin,"['String', 'Counting']",65.20%,Easy
2834,Find the Minimum Possible Sum of a Beautiful Array,"['Math', 'Greedy']",37.50%,Medium
2835,Minimum Operations to Form Subsequence With Target Sum,"['Array', 'Greedy', 'Bit Manipulation']",32.70%,Hard
2836,Maximize Value of Function in a Ball Passing Game,"['Array', 'Dynamic Programming', 'Bit Manipulation']",31.50%,Hard
2837,Total Traveled Distance,['Database'],76.20%,Easy
2838,Maximum Coins Heroes Can Collect,"['Array', 'Two Pointers', 'Binary Search']",69.70%,Medium
2839,Check if Strings Can be Made Equal With Operations I,['String'],47.50%,Easy
2840,Check if Strings Can be Made Equal With Operations II,"['Hash Table', 'String', 'Sorting']",56.20%,Medium
2841,Maximum Sum of Almost Unique Subarray,"['Array', 'Hash Table', 'Sliding Window']",38.60%,Medium
2842,Count K-Subsequences of a String With Maximum Beauty,"['Hash Table', 'Math', 'String', 'Greedy', 'Combinatorics']",29.80%,Hard
2843,Count Symmetric Integers,"['Math', 'Enumeration']",74.60%,Easy
2844,Minimum Operations to Make a Special Number,"['Math', 'String', 'Greedy', 'Enumeration']",38.40%,Medium
2845,Count of Interesting Subarrays,"['Array', 'Hash Table', 'Prefix Sum']",35.50%,Medium
2846,Minimum Edge Weight Equilibrium Queries in a Tree,"['Array', 'Tree', 'Graph', 'Strongly Connected Component']",44.70%,Hard
2847,Smallest Number With Given Digit Product,"['Math', 'Greedy']",44.10%,Medium
2848,Points That Intersect With Cars,"['Array', 'Hash Table', 'Prefix Sum']",75.50%,Easy
2849,Determine if a Cell Is Reachable at a Given Time,['Math'],35.70%,Medium
2850,Minimum Moves to Spread Stones Over Grid,"['Array', 'Dynamic Programming', 'Breadth-First Search', 'Matrix']",45.20%,Medium
2851,String Transformation,"['Math', 'String', 'Dynamic Programming', 'String Matching']",30.40%,Hard
2852,Sum of Remoteness of All Cells,"['Array', 'Hash Table']",64.80%,Medium
2853,Highest Salaries Difference,['Database'],73.60%,Easy
2854,Rolling Average Steps,['Database'],68.20%,Medium
2855,Minimum Right Shifts to Sort the Array,['Array'],58.30%,Easy
2856,Minimum Array Length After Pair Removals,"['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Greedy', 'Counting']",23.40%,Medium
2857,Count Pairs of Points With Distance k,"['Array', 'Hash Table', 'Bit Manipulation']",32.30%,Medium
2858,Minimum Edge Reversals So Every Node Is Reachable,"['Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Graph']",58.20%,Hard
2859,Sum of Values at Indices With K Set Bits,"['Array', 'Bit Manipulation']",86.80%,Easy
2860,Happy Students,"['Array', 'Sorting', 'Enumeration']",52.60%,Medium
2861,Maximum Number of Alloys,"['Array', 'Binary Search']",38.90%,Medium
2862,Maximum Element-Sum of a Complete Subset of Indices,"['Array', 'Math', 'Number Theory']",44.40%,Hard
2863,Maximum Length of Semi-Decreasing Subarrays,"['Array', 'Stack', 'Sorting']",70.60%,Medium
2864,Maximum Odd Binary Number,"['Math', 'String', 'Greedy']",83.20%,Easy
2865,Beautiful Towers I,"['Array', 'Stack', 'Monotonic Stack']",43.80%,Medium
2866,Beautiful Towers II,"['Array', 'Stack', 'Monotonic Stack']",35.10%,Medium
2867,Count Valid Paths in a Tree,"['Math', 'Dynamic Programming', 'Tree', 'Depth-First Search', 'Number Theory']",35.70%,Hard
2868,The Wording Game,"['Array', 'Math', 'Two Pointers']",58.80%,Hard
2869,Minimum Operations to Collect Elements,"['Array', 'Hash Table', 'Bit Manipulation']",61.00%,Easy
2870,Minimum Number of Operations to Make Array Empty,"['Array', 'Hash Table', 'Greedy', 'Counting']",62.10%,Medium
2871,Split Array Into Maximum Number of Subarrays,"['Array', 'Greedy', 'Bit Manipulation']",44.10%,Medium
2872,Maximum Number of K-Divisible Components,"['Tree', 'Depth-First Search']",57.40%,Hard
2873,Maximum Value of an Ordered Triplet I,['Array'],46.20%,Easy
2874,Maximum Value of an Ordered Triplet II,['Array'],41.50%,Medium
2875,Minimum Size Subarray in Infinite Array,"['Array', 'Hash Table', 'Sliding Window', 'Prefix Sum']",31.00%,Medium
2876,Count Visited Nodes in a Directed Graph,"['Dynamic Programming', 'Graph', 'Memoization']",33.20%,Hard
2877,Create a DataFrame from List,[],81.30%,Easy
2878,Get the Size of a DataFrame,[],85.10%,Easy
2879,Display the First Three Rows,[],93.00%,Easy
2880,Select Data,[],79.30%,Easy
2881,Create a New Column,[],90.10%,Easy
2882,Drop Duplicate Rows,[],85.60%,Easy
2883,Drop Missing Data,[],64.10%,Easy
2884,Modify Columns,[],92.10%,Easy
2885,Rename Columns,[],85.40%,Easy
2886,Change Data Type,[],87.30%,Easy
2887,Fill Missing Data,[],72.00%,Easy
2888,Reshape Data: Concatenate,[],90.60%,Easy
2889,Reshape Data: Pivot,[],82.70%,Easy
2890,Reshape Data: Melt,[],86.20%,Easy
2891,Method Chaining,[],76.40%,Easy
2892,Minimizing Array After Replacing Pairs With Their Product,"['Array', 'Dynamic Programming', 'Greedy']",41.00%,Medium
2893,Calculate Orders Within Each Interval,['Database'],67.90%,Medium
2894,Divisible and Non-divisible Sums Difference,['Math'],89.50%,Easy
2895,Minimum Processing Time,"['Array', 'Greedy', 'Sorting']",69.70%,Medium
2896,Apply Operations to Make Two Strings Equal,"['String', 'Dynamic Programming']",27.20%,Medium
2897,Apply Operations on Array to Maximize Sum of Squares,"['Array', 'Hash Table', 'Greedy', 'Bit Manipulation']",46.80%,Hard
2898,Maximum Linear Stock Score,"['Array', 'Hash Table']",62.90%,Medium
2899,Last Visited Integers,"['Array', 'Simulation']",66.50%,Easy
2900,Longest Unequal Adjacent Groups Subsequence I,"['Array', 'String', 'Dynamic Programming', 'Greedy']",61.70%,Easy
2901,Longest Unequal Adjacent Groups Subsequence II,"['Array', 'String', 'Dynamic Programming']",27.50%,Medium
2902,Count of Sub-Multisets With Bounded Sum,"['Array', 'Hash Table', 'Dynamic Programming', 'Sliding Window']",21.50%,Hard
2903,Find Indices With Index and Value Difference I,"['Array', 'Two Pointers']",61.80%,Easy
2904,Shortest and Lexicographically Smallest Beautiful String,"['String', 'Sliding Window']",39.60%,Medium
2905,Find Indices With Index and Value Difference II,"['Array', 'Two Pointers']",32.20%,Medium
2906,Construct Product Matrix,"['Array', 'Matrix', 'Prefix Sum']",30.90%,Medium
2907,Maximum Profitable Triplets With Increasing Prices I,"['Array', 'Binary Indexed Tree', 'Segment Tree']",55.90%,Medium
2908,Minimum Sum of Mountain Triplets I,['Array'],65.60%,Easy
2909,Minimum Sum of Mountain Triplets II,['Array'],54.30%,Medium
2910,Minimum Number of Groups to Create a Valid Assignment,"['Array', 'Hash Table', 'Greedy']",25.10%,Medium
2911,Minimum Changes to Make K Semi-palindromes,"['Two Pointers', 'String', 'Dynamic Programming']",36.70%,Hard
2912,Number of Ways to Reach Destination in the Grid,"['Math', 'Dynamic Programming']",60.20%,Hard
2913,Subarrays Distinct Element Sum of Squares I,"['Array', 'Hash Table']",82.90%,Easy
2914,Minimum Number of Changes to Make Binary String Beautiful,['String'],60.70%,Medium
2915,Length of the Longest Subsequence That Sums to Target,"['Array', 'Dynamic Programming']",36.60%,Medium
2916,Subarrays Distinct Element Sum of Squares II,"['Array', 'Dynamic Programming', 'Binary Indexed Tree', 'Segment Tree']",21.60%,Hard
2917,Find the K-or of an Array,"['Array', 'Bit Manipulation']",75.00%,Easy
2918,Minimum Equal Sum of Two Arrays After Replacing Zeros,"['Array', 'Greedy']",36.00%,Medium
2919,Minimum Increment Operations to Make Array Beautiful,"['Array', 'Dynamic Programming']",34.60%,Medium
2920,Maximum Points After Collecting Coins From All Nodes,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Tree', 'Depth-First Search', 'Memoization']",37.10%,Hard
2921,Maximum Profitable Triplets With Increasing Prices II,"['Array', 'Binary Indexed Tree', 'Segment Tree']",45.60%,Hard
2922,Market Analysis III,['Database'],41.30%,Medium
2923,Find Champion I,"['Array', 'Matrix']",73.90%,Easy
2924,Find Champion II,['Graph'],58.90%,Medium
2925,Maximum Score After Applying Operations on a Tree,"['Dynamic Programming', 'Tree', 'Depth-First Search']",49.60%,Medium
2926,Maximum Balanced Subsequence Sum,"['Array', 'Binary Search', 'Dynamic Programming', 'Binary Indexed Tree', 'Segment Tree']",24.20%,Hard
2927,Distribute Candies Among Children III,"['Math', 'Combinatorics']",44.10%,Hard
2928,Distribute Candies Among Children I,"['Math', 'Combinatorics', 'Enumeration']",76.50%,Easy
2929,Distribute Candies Among Children II,"['Math', 'Combinatorics', 'Enumeration']",35.60%,Medium
2930,Number of Strings Which Can Be Rearranged to Contain Substring,"['Math', 'Dynamic Programming', 'Combinatorics']",56.10%,Medium
2931,Maximum Spending After Buying Items,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",64.80%,Hard
2932,Maximum Strong Pair XOR I,"['Array', 'Hash Table', 'Bit Manipulation', 'Trie', 'Sliding Window']",76.70%,Easy
2933,High-Access Employees,"['Array', 'Hash Table', 'String', 'Sorting']",45.10%,Medium
2934,Minimum Operations to Maximize Last Elements in Arrays,"['Array', 'Enumeration']",45.20%,Medium
2935,Maximum Strong Pair XOR II,"['Array', 'Hash Table', 'Bit Manipulation', 'Trie', 'Sliding Window']",30.70%,Hard
2936,Number of Equal Numbers Blocks,"['Array', 'Binary Search', 'Interactive']",64.10%,Medium
2937,Make Three Strings Equal,['String'],43.90%,Easy
2938,Separate Black and White Balls,"['Two Pointers', 'String', 'Greedy']",64.90%,Medium
2939,Maximum Xor Product,"['Math', 'Greedy', 'Bit Manipulation']",26.80%,Medium
2940,Find Building Where Alice and Bob Can Meet,"['Array', 'Binary Search', 'Stack', 'Binary Indexed Tree', 'Segment Tree', 'Heap (Priority Queue)', 'Monotonic Stack']",35.30%,Hard
2941,Maximum GCD-Sum of a Subarray,"['Array', 'Math', 'Binary Search']",39.90%,Hard
2942,Find Words Containing Character,"['Array', 'String']",88.80%,Easy
2943,Maximize Area of Square Hole in Grid,"['Array', 'Sorting']",37.20%,Medium
2944,Minimum Number of Coins for Fruits,"['Array', 'Dynamic Programming', 'Queue', 'Heap (Priority Queue)', 'Monotonic Queue']",46.90%,Medium
2945,Find Maximum Non-decreasing Array Length,"['Array', 'Binary Search', 'Dynamic Programming', 'Stack', 'Queue', 'Monotonic Stack', 'Monotonic Queue']",16.70%,Hard
2946,Matrix Similarity After Cyclic Shifts,"['Array', 'Math', 'Matrix', 'Simulation']",59.00%,Easy
2947,Count Beautiful Substrings I,"['Hash Table', 'Math', 'String', 'Enumeration', 'Number Theory', 'Prefix Sum']",62.20%,Medium
2948,Make Lexicographically Smallest Array by Swapping Elements,"['Array', 'Union Find', 'Sorting']",40.10%,Medium
2949,Count Beautiful Substrings II,"['Hash Table', 'Math', 'String', 'Number Theory', 'Prefix Sum']",25.60%,Hard
2950,Number of Divisible Substrings,"['Hash Table', 'String', 'Counting']",73.40%,Medium
2951,Find the Peaks,"['Array', 'Enumeration']",75.90%,Easy
2952,Minimum Number of Coins to be Added,"['Array', 'Greedy', 'Sorting']",57.80%,Medium
2953,Count Complete Substrings,"['Hash Table', 'String', 'Sliding Window']",28.40%,Hard
2954,Count the Number of Infection Sequences,"['Array', 'Math', 'Combinatorics']",36.80%,Hard
2955,Number of Same-End Substrings,"['Array', 'Hash Table', 'String']",60.20%,Medium
2956,Find Common Elements Between Two Arrays,"['Array', 'Hash Table']",84.20%,Easy
2957,Remove Adjacent Almost-Equal Characters,"['String', 'Dynamic Programming', 'Greedy']",53.10%,Medium
2958,Length of Longest Subarray With at Most K Frequency,"['Array', 'Hash Table', 'Sliding Window']",55.90%,Medium
2959,Number of Possible Sets of Closing Branches,"['Bit Manipulation', 'Graph', 'Heap (Priority Queue)', 'Enumeration', 'Shortest Path']",51.80%,Hard
2960,Count Tested Devices After Test Operations,"['Array', 'Simulation', 'Counting']",80.80%,Easy
2961,Double Modular Exponentiation,"['Array', 'Math', 'Simulation']",48.40%,Medium
2962,Count Subarrays Where Max Element Appears at Least K Times,"['Array', 'Sliding Window']",58.90%,Medium
2963,Count the Number of Good Partitions,"['Array', 'Hash Table', 'Math', 'Combinatorics']",49.70%,Hard
2964,Number of Divisible Triplet Sums,"['Array', 'Hash Table']",64.50%,Medium
2965,Find Missing and Repeated Values,"['Array', 'Hash Table', 'Math', 'Matrix']",76.30%,Easy
2966,Divide Array Into Arrays With Max Difference,"['Array', 'Greedy', 'Sorting']",71.90%,Medium
2967,Minimum Cost to Make Array Equalindromic,"['Array', 'Math', 'Binary Search', 'Greedy', 'Sorting']",22.50%,Medium
2968,Apply Operations to Maximize Frequency Score,"['Array', 'Binary Search', 'Sliding Window', 'Sorting', 'Prefix Sum']",38.30%,Hard
2969,Minimum Number of Coins for Fruits II,"['Array', 'Dynamic Programming']",49.00%,Hard
2970,Count the Number of Incremovable Subarrays I,"['Array', 'Two Pointers', 'Binary Search', 'Enumeration']",53.20%,Easy
2971,Find Polygon With the Largest Perimeter,"['Array', 'Greedy', 'Sorting', 'Prefix Sum']",66.10%,Medium
2972,Count the Number of Incremovable Subarrays II,"['Array', 'Two Pointers', 'Binary Search']",41.00%,Hard
2973,Find Number of Coins to Place in Tree Nodes,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Sorting', 'Heap (Priority Queue)']",37.20%,Hard
2974,Minimum Number Game,"['Array', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",86.00%,Easy
2975,Maximum Square Area by Removing Fences From a Field,"['Array', 'Hash Table', 'Enumeration']",23.50%,Medium
2976,Minimum Cost to Convert String I,"['Array', 'String', 'Graph', 'Shortest Path']",58.30%,Medium
2977,Minimum Cost to Convert String II,"['Array', 'String', 'Dynamic Programming', 'Graph', 'Trie', 'Shortest Path']",25.70%,Hard
2978,Symmetric Coordinates,['Database'],40.70%,Medium
2979,Most Expensive Item That Can Not Be Bought,"['Math', 'Dynamic Programming']",79.80%,Medium
2980,Check if Bitwise OR Has Trailing Zeros,"['Array', 'Bit Manipulation']",71.00%,Easy
2981,Find Longest Special Substring That Occurs Thrice I,"['Hash Table', 'String', 'Binary Search', 'Sliding Window', 'Counting']",45.00%,Medium
2982,Find Longest Special Substring That Occurs Thrice II,"['Hash Table', 'String', 'Binary Search', 'Sliding Window', 'Counting']",34.30%,Medium
2983,Palindrome Rearrangement Queries,"['Hash Table', 'String', 'Prefix Sum']",25.90%,Hard
2984,Find Peak Calling Hours for Each City,['Database'],60.70%,Medium
2985,Calculate Compressed Mean,['Database'],88.10%,Easy
2986,Find Third Transaction,['Database'],52.40%,Medium
2987,Find Expensive Cities,['Database'],79.70%,Easy
2988,Manager of the Largest Department,['Database'],79.50%,Medium
2989,Class Performance,['Database'],89.70%,Medium
2990,Loan Types,['Database'],63.00%,Easy
2991,Top Three Wineries,['Database'],56.00%,Hard
2992,Number of Self-Divisible Permutations,"['Array', 'Dynamic Programming']",71.80%,Medium
2993,Friday Purchases I,['Database'],79.10%,Medium
2994,Friday Purchases II,['Database'],74.30%,Hard
2995,Viewers Turned Streamers,['Database'],43.30%,Hard
2996,Smallest Missing Integer Greater Than Sequential Prefix Sum,"['Array', 'Hash Table', 'Sorting']",33.20%,Easy
2997,Minimum Number of Operations to Make Array XOR Equal to K,"['Array', 'Bit Manipulation']",86.30%,Medium
2998,Minimum Number of Operations to Make X and Y Equal,"['Dynamic Programming', 'Breadth-First Search', 'Memoization']",47.60%,Medium
2999,Count the Number of Powerful Integers,"['Math', 'String', 'Dynamic Programming']",26.90%,Hard
3000,Maximum Area of Longest Diagonal Rectangle,['Array'],36.70%,Easy
3001,Minimum Moves to Capture The Queen,"['Array', 'Enumeration']",21.20%,Medium
3002,Maximum Size of a Set After Removals,"['Array', 'Hash Table', 'Greedy']",46.00%,Medium
3003,Maximize the Number of Partitions After Operations,"['String', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",28.40%,Hard
3004,Maximum Subtree of the Same Color,"['Array', 'Dynamic Programming']",63.50%,Medium
3005,Count Elements With Maximum Frequency,"['Array', 'Hash Table', 'Counting']",78.60%,Easy
3006,Find Beautiful Indices in the Given Array I,"['Two Pointers', 'String', 'Binary Search', 'Rolling Hash', 'String Matching', 'Hash Function']",37.10%,Medium
3007,Maximum Number That Sum of the Prices Is Less Than or Equal to K,"['Binary Search', 'Dynamic Programming', 'Bit Manipulation']",37.00%,Medium
3008,Find Beautiful Indices in the Given Array II,"['Two Pointers', 'String', 'Binary Search', 'Rolling Hash', 'String Matching', 'Hash Function']",25.30%,Hard
3009,Maximum Number of Intersections on the Chart,"['Array', 'Math', 'Binary Indexed Tree']",45.60%,Hard
3010,Divide an Array Into Subarrays With Minimum Cost I,"['Array', 'Sorting', 'Enumeration']",66.90%,Easy
3011,Find if Array Can Be Sorted,"['Array', 'Bit Manipulation', 'Sorting']",51.90%,Medium
3012,Minimize Length of Array Using Operations,"['Array', 'Math', 'Greedy', 'Number Theory']",35.40%,Medium
3013,Divide an Array Into Subarrays With Minimum Cost II,"['Array', 'Hash Table', 'Sliding Window', 'Heap (Priority Queue)']",32.30%,Hard
3014,Minimum Number of Pushes to Type Word I,"['Math', 'String', 'Greedy']",66.70%,Easy
3015,Count the Number of Houses at a Certain Distance I,"['Breadth-First Search', 'Graph', 'Prefix Sum']",56.90%,Medium
3016,Minimum Number of Pushes to Type Word II,"['Hash Table', 'String', 'Greedy', 'Sorting', 'Counting']",80.70%,Medium
3017,Count the Number of Houses at a Certain Distance II,"['Graph', 'Prefix Sum']",22.20%,Hard
3018,Maximum Number of Removal Queries That Can Be Processed I,"['Array', 'Dynamic Programming']",44.00%,Hard
3019,Number of Changing Keys,['String'],81.10%,Easy
3020,Find the Maximum Number of Elements in Subset,"['Array', 'Hash Table', 'Enumeration']",26.10%,Medium
3021,Alice and Bob Playing Flower Game,['Math'],48.00%,Medium
3022,Minimize OR of Remaining Elements Using Operations,"['Array', 'Greedy', 'Bit Manipulation']",33.70%,Hard
3023,Find Pattern in Infinite Stream I,"['Array', 'Sliding Window']",59.40%,Medium
3024,Type of Triangle,"['Array', 'Math', 'Sorting']",38.40%,Easy
3025,Find the Number of Ways to Place People I,"['Array', 'Math', 'Geometry', 'Sorting', 'Enumeration']",41.80%,Medium
3026,Maximum Good Subarray Sum,"['Array', 'Hash Table', 'Prefix Sum']",19.50%,Medium
3027,Find the Number of Ways to Place People II,"['Array', 'Math', 'Geometry', 'Sorting', 'Enumeration']",48.60%,Hard
3028,Ant on the Boundary,"['Array', 'Simulation', 'Prefix Sum']",75.10%,Easy
3029,Minimum Time to Revert Word to Initial State I,"['String', 'Rolling Hash', 'String Matching', 'Hash Function']",41.40%,Medium
3030,Find the Grid of Region Average,"['Array', 'Matrix']",44.20%,Medium
3031,Minimum Time to Revert Word to Initial State II,"['String', 'Rolling Hash', 'String Matching', 'Hash Function']",35.80%,Hard
3032,Count Numbers With Unique Digits II,"['Hash Table', 'Math']",87.20%,Easy
3033,Modify the Matrix,"['Array', 'Matrix']",68.80%,Easy
3034,Number of Subarrays That Match a Pattern I,"['Array', 'Rolling Hash', 'String Matching', 'Hash Function']",67.30%,Medium
3035,Maximum Palindromes After Operations,"['Array', 'Hash Table', 'String', 'Greedy', 'Sorting', 'Counting']",43.10%,Medium
3036,Number of Subarrays That Match a Pattern II,"['Array', 'Rolling Hash', 'String Matching', 'Hash Function']",33.00%,Hard
3037,Find Pattern in Infinite Stream II,"['Array', 'Sliding Window']",69.60%,Hard
3038,Maximum Number of Operations With the Same Score I,"['Array', 'Simulation']",52.50%,Easy
3039,Apply Operations to Make String Empty,"['Array', 'Hash Table', 'Sorting', 'Counting']",57.00%,Medium
3040,Maximum Number of Operations With the Same Score II,"['Array', 'Dynamic Programming', 'Memoization']",33.80%,Medium
3041,Maximize Consecutive Elements in an Array After Modification,"['Array', 'Dynamic Programming', 'Sorting']",32.60%,Hard
3042,Count Prefix and Suffix Pairs I,"['Array', 'String', 'Trie', 'Rolling Hash', 'String Matching', 'Hash Function']",66.10%,Easy
3043,Find the Length of the Longest Common Prefix,"['Array', 'Hash Table', 'String', 'Trie']",56.30%,Medium
3044,Most Frequent Prime,"['Array', 'Hash Table', 'Math', 'Matrix', 'Counting', 'Enumeration', 'Number Theory']",48.50%,Medium
3045,Count Prefix and Suffix Pairs II,"['Array', 'String', 'Trie', 'Rolling Hash', 'String Matching', 'Hash Function']",25.50%,Hard
3046,Split the Array,"['Array', 'Hash Table', 'Counting']",59.20%,Easy
3047,Find the Largest Area of Square Inside Two Rectangles,"['Array', 'Math', 'Geometry']",45.60%,Medium
3048,Earliest Second to Mark Indices I,"['Array', 'Binary Search']",36.60%,Medium
3049,Earliest Second to Mark Indices II,"['Array', 'Binary Search', 'Greedy', 'Heap (Priority Queue)']",22.90%,Hard
3050,Pizza Toppings Cost Analysis,['Database'],66.30%,Medium
3051,Find Candidates for Data Scientist Position,['Database'],74.80%,Easy
3052,Maximize Items,['Database'],71.70%,Hard
3053,Classifying Triangles by Lengths,['Database'],50.40%,Easy
3054,Binary Tree Nodes,['Database'],80.00%,Medium
3055,Top Percentile Fraud,['Database'],58.10%,Medium
3056,Snaps Analysis,['Database'],58.00%,Medium
3057,Employees Project Allocation,['Database'],68.40%,Hard
3058,Friends With No Mutual Friends,['Database'],49.50%,Medium
3059,Find All Unique Email Domains,['Database'],68.50%,Easy
3060,User Activities within Time Bounds,['Database'],40.60%,Hard
3061,Calculate Trapping Rain Water,['Database'],80.80%,Hard
3062,Winner of the Linked List Game,['Linked List'],79.90%,Easy
3063,Linked List Frequency,"['Hash Table', 'Linked List', 'Counting']",85.90%,Easy
3064,Guess the Number Using Bitwise Questions I,"['Bit Manipulation', 'Interactive']",90.70%,Medium
3065,Minimum Operations to Exceed Threshold Value I,['Array'],86.50%,Easy
3066,Minimum Operations to Exceed Threshold Value II,"['Array', 'Heap (Priority Queue)', 'Simulation']",28.60%,Medium
3067,Count Pairs of Connectable Servers in a Weighted Tree Network,"['Array', 'Tree', 'Depth-First Search']",58.30%,Medium
3068,Find the Maximum Sum of Node Values,"['Array', 'Dynamic Programming', 'Greedy', 'Bit Manipulation', 'Tree', 'Sorting']",66.60%,Hard
3069,Distribute Elements Into Two Arrays I,"['Array', 'Simulation']",73.20%,Easy
3070,Count Submatrices with Top-Left Element and Sum Less Than k,"['Array', 'Matrix', 'Prefix Sum']",59.50%,Medium
3071,Minimum Operations to Write the Letter Y on a Grid,"['Array', 'Hash Table', 'Matrix', 'Counting']",63.50%,Medium
3072,Distribute Elements Into Two Arrays II,"['Array', 'Binary Indexed Tree', 'Segment Tree', 'Simulation']",28.30%,Hard
3073,Maximum Increasing Triplet Value,"['Array', 'Ordered Set']",38.30%,Medium
3074,Apple Redistribution into Boxes,"['Array', 'Greedy', 'Sorting']",67.80%,Easy
3075,Maximize Happiness of Selected Children,"['Array', 'Greedy', 'Sorting']",55.00%,Medium
3076,Shortest Uncommon Substring in an Array,"['Array', 'Hash Table', 'String', 'Trie']",46.50%,Medium
3077,Maximum Strength of K Disjoint Subarrays,"['Array', 'Dynamic Programming', 'Prefix Sum']",28.00%,Hard
3078,Match Alphanumerical Pattern in Matrix I,"['Array', 'Hash Table', 'String']",64.90%,Medium
3079,Find the Sum of Encrypted Integers,"['Array', 'Math']",74.70%,Easy
3080,Mark Elements on Array by Performing Queries,"['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",49.70%,Medium
3081,Replace Question Marks in String to Minimize Its Value,"['Hash Table', 'String', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Counting']",27.80%,Medium
3082,Find the Sum of the Power of All Subsequences,"['Array', 'Dynamic Programming']",39.20%,Hard
3083,Existence of a Substring in a String and Its Reverse,"['Hash Table', 'String']",66.60%,Easy
3084,Count Substrings Starting and Ending with Given Character,"['Math', 'String', 'Counting']",49.10%,Medium
3085,Minimum Deletions to Make String K-Special,"['Hash Table', 'String', 'Greedy', 'Sorting', 'Counting']",44.40%,Medium
3086,Minimum Moves to Pick K Ones,"['Array', 'Greedy', 'Sliding Window', 'Prefix Sum']",23.70%,Hard
3087,Find Trending Hashtags,['Database'],62.30%,Medium
3088,Make String Anti-palindrome,"['String', 'Greedy', 'Sorting']",50.00%,Hard
3089,Find Bursty Behavior,['Database'],39.60%,Medium
3090,Maximum Length Substring With Two Occurrences,"['Hash Table', 'String', 'Sliding Window']",64.30%,Easy
3091,Apply Operations to Make Sum of Array Greater Than or Equal to k,"['Math', 'Greedy', 'Enumeration']",44.60%,Medium
3092,Most Frequent IDs,"['Array', 'Hash Table', 'Heap (Priority Queue)', 'Ordered Set']",42.90%,Medium
3093,Longest Common Suffix Queries,"['Array', 'String', 'Trie']",40.00%,Hard
3094,Guess the Number Using Bitwise Questions II,"['Bit Manipulation', 'Interactive']",81.80%,Medium
3095,Shortest Subarray With OR at Least K I,"['Array', 'Bit Manipulation', 'Sliding Window']",41.60%,Easy
3096,Minimum Levels to Gain More Points,"['Array', 'Prefix Sum']",40.90%,Medium
3097,Shortest Subarray With OR at Least K II,"['Array', 'Bit Manipulation', 'Sliding Window']",30.80%,Medium
3098,Find the Sum of Subsequence Powers,"['Array', 'Dynamic Programming', 'Sorting']",24.80%,Hard
3099,Harshad Number,['Math'],83.00%,Easy
3100,Water Bottles II,"['Math', 'Simulation']",63.90%,Medium
3101,Count Alternating Subarrays,"['Array', 'Math']",57.60%,Medium
3102,Minimize Manhattan Distances,"['Array', 'Math', 'Geometry', 'Sorting', 'Ordered Set']",33.00%,Hard
3103,Find Trending Hashtags II,['Database'],64.00%,Hard
3104,Find Longest Self-Contained Substring,"['Hash Table', 'String', 'Binary Search']",55.00%,Hard
3105,Longest Strictly Increasing or Strictly Decreasing Subarray,['Array'],57.30%,Easy
3106,Lexicographically Smallest String After Operations With Constraint,"['String', 'Greedy']",63.80%,Medium
3107,Minimum Operations to Make Median of Array Equal to K,"['Array', 'Greedy', 'Sorting']",48.70%,Medium
3108,Minimum Cost Walk in Weighted Graph,"['Array', 'Bit Manipulation', 'Union Find', 'Graph']",46.30%,Hard
3109,Find the Index of Permutation,"['Array', 'Binary Search']",40.30%,Medium
3110,Score of a String,['String'],92.80%,Easy
3111,Minimum Rectangles to Cover Points,"['Array', 'Greedy', 'Sorting']",64.00%,Medium
3112,Minimum Time to Visit Disappearing Nodes,"['Array', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",35.10%,Medium
3113,Find the Number of Subarrays Where Boundary Elements Are Maximum,"['Array', 'Binary Search', 'Stack', 'Monotonic Stack']",30.60%,Hard
3114,Latest Time You Can Obtain After Replacing Characters,"['String', 'Enumeration']",35.80%,Easy
3115,Maximum Prime Difference,"['Array', 'Math', 'Number Theory']",58.40%,Medium
3116,Kth Smallest Amount With Single Denomination Combination,"['Array', 'Math', 'Binary Search', 'Bit Manipulation', 'Combinatorics', 'Number Theory']",17.20%,Hard
3117,Minimum Sum of Values by Dividing Array,"['Array', 'Binary Search', 'Dynamic Programming', 'Bit Manipulation', 'Segment Tree', 'Queue']",28.40%,Hard
3118,Friday Purchase III,['Database'],57.60%,Medium
3119,Maximum Number of Potholes That Can Be Fixed,"['String', 'Greedy', 'Sorting']",57.30%,Medium
3120,Count the Number of Special Characters I,"['Hash Table', 'String']",66.10%,Easy
3121,Count the Number of Special Characters II,"['Hash Table', 'String']",41.80%,Medium
3122,Minimum Number of Operations to Satisfy Conditions,"['Array', 'Dynamic Programming', 'Matrix']",41.50%,Medium
3123,Find Edges in Shortest Paths,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",47.70%,Hard
3124,Find Longest Calls,['Database'],62.90%,Medium
3125,Maximum Number That Makes Result of Bitwise AND Zero,"['String', 'Greedy', 'Sorting']",69.40%,Medium
3126,Server Utilization Time,['Database'],59.30%,Medium
3127,Make a Square with the Same Color,"['Array', 'Matrix', 'Enumeration']",51.90%,Easy
3128,Right Triangles,"['Array', 'Hash Table', 'Math', 'Combinatorics', 'Counting']",47.90%,Medium
3129,Find All Possible Stable Binary Arrays I,"['Dynamic Programming', 'Prefix Sum']",27.10%,Medium
3130,Find All Possible Stable Binary Arrays II,"['Dynamic Programming', 'Prefix Sum']",28.80%,Hard
3131,Find the Integer Added to Array I,['Array'],82.40%,Easy
3132,Find the Integer Added to Array II,"['Array', 'Two Pointers', 'Sorting', 'Enumeration']",31.50%,Medium
3133,Minimum Array End,['Bit Manipulation'],38.40%,Medium
3134,Find the Median of the Uniqueness Array,"['Array', 'Hash Table', 'Binary Search', 'Sliding Window']",29.20%,Hard
3135,Equalize Strings by Adding or Removing Characters at Ends,"['String', 'Binary Search']",56.00%,Medium
3136,Valid Word,['String'],38.10%,Easy
3137,Minimum Number of Operations to Make Word K-Periodic,"['Hash Table', 'String', 'Counting']",62.70%,Medium
3138,Minimum Length of Anagram Concatenation,"['Hash Table', 'String', 'Counting']",41.80%,Medium
3139,Minimum Cost to Equalize Array,"['Array', 'Greedy', 'Enumeration']",17.00%,Hard
3140,Consecutive Available Seats II,['Database'],58.60%,Medium
3141,Maximum Hamming Distances,"['Array', 'Bit Manipulation']",58.90%,Hard
3142,Check if Grid Satisfies Conditions,"['Array', 'Matrix']",43.70%,Easy
3143,Maximum Points Inside the Square,"['Array', 'Hash Table', 'String', 'Binary Search', 'Sorting']",39.20%,Medium
3144,Minimum Substring Partition of Equal Character Frequency,"['Hash Table', 'String', 'Dynamic Programming', 'Counting']",41.30%,Medium
3145,Find Products of Elements of Big Array,"['Array', 'Binary Search', 'Bit Manipulation']",25.90%,Hard
3146,Permutation Difference between Two Strings,"['Hash Table', 'String']",89.20%,Easy
3147,Taking Maximum Energy From the Mystic Dungeon,"['Array', 'Prefix Sum']",40.80%,Medium
3148,Maximum Difference Score in a Grid,"['Array', 'Dynamic Programming', 'Matrix']",48.00%,Medium
3149,Find the Minimum Cost Array Permutation,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",23.40%,Hard
3150,Invalid Tweets II,['Database'],87.30%,Easy
3151,Special Array I,['Array'],75.70%,Easy
3152,Special Array II,"['Array', 'Binary Search', 'Prefix Sum']",30.30%,Medium
3153,Sum of Digit Differences of All Pairs,"['Array', 'Hash Table', 'Math', 'Counting']",43.50%,Medium
3154,Find Number of Ways to Reach the K-th Stair,"['Math', 'Dynamic Programming', 'Bit Manipulation', 'Memoization', 'Combinatorics']",36.90%,Hard
3155,Maximum Number of Upgradable Servers,"['Array', 'Math', 'Binary Search']",44.60%,Medium
3156,Employee Task Duration and Concurrent Tasks,['Database'],53.80%,Hard
3157,Find the Level of Tree with Minimum Sum,"['Tree', 'Depth-First Search']",67.80%,Medium
3158,Find the XOR of Numbers Which Appear Twice,"['Array', 'Hash Table', 'Bit Manipulation']",81.90%,Easy
3159,Find Occurrences of an Element in an Array,"['Array', 'Hash Table']",73.60%,Medium
3160,Find the Number of Distinct Colors Among the Balls,"['Array', 'Hash Table', 'Simulation']",41.20%,Medium
3161,Block Placement Queries,"['Array', 'Binary Search', 'Binary Indexed Tree', 'Segment Tree']",14.60%,Hard
3162,Find the Number of Good Pairs I,"['Array', 'Hash Table']",86.80%,Easy
3163,String Compression III,['String'],56.00%,Medium
3164,Find the Number of Good Pairs II,"['Array', 'Hash Table']",25.90%,Medium
3165,Maximum Sum of Subsequence With Non-adjacent Elements,"['Array', 'Divide and Conquer', 'Dynamic Programming', 'Segment Tree']",17.10%,Hard
3166,Calculate Parking Fees and Duration,['Database'],52.60%,Medium
3167,Better Compression of String,"['Hash Table', 'String', 'Sorting']",74.70%,Medium
3168,Minimum Number of Chairs in a Waiting Room,"['String', 'Simulation']",80.80%,Easy
3169,Count Days Without Meetings,"['Array', 'Sorting']",34.10%,Medium
3170,Lexicographically Minimum String After Removing Stars,"['Hash Table', 'String', 'Stack', 'Greedy', 'Heap (Priority Queue)']",36.00%,Medium
3171,Find Subarray With Bitwise OR Closest to K,"['Array', 'Binary Search', 'Bit Manipulation', 'Segment Tree']",31.20%,Hard
3172,Second Day Verification,['Database'],71.30%,Easy
3173,Bitwise OR of Adjacent Elements,"['Array', 'Bit Manipulation']",95.50%,Easy
3174,Clear Digits,"['String', 'Stack', 'Simulation']",73.50%,Easy
3175,Find The First Player to win K Games in a Row,"['Array', 'Simulation']",39.70%,Medium
3176,Find the Maximum Length of a Good Subsequence I,"['Array', 'Hash Table', 'Dynamic Programming']",30.90%,Medium
3177,Find the Maximum Length of a Good Subsequence II,"['Array', 'Hash Table', 'Dynamic Programming']",24.80%,Hard
3178,Find the Child Who Has the Ball After K Seconds,"['Math', 'Simulation']",62.20%,Easy
3179,Find the N-th Value After K Seconds,"['Array', 'Math', 'Simulation', 'Combinatorics', 'Prefix Sum']",54.60%,Medium
3180,Maximum Total Reward Using Operations I,"['Array', 'Dynamic Programming']",29.70%,Medium
3181,Maximum Total Reward Using Operations II,"['Array', 'Dynamic Programming', 'Bit Manipulation']",21.40%,Hard
3182,Find Top Scoring Students,['Database'],50.20%,Medium
3183,The Number of Ways to Make the Sum,"['Array', 'Dynamic Programming']",55.20%,Medium
3184,Count Pairs That Form a Complete Day I,"['Array', 'Hash Table', 'Counting']",79.20%,Easy
3185,Count Pairs That Form a Complete Day II,"['Array', 'Hash Table', 'Counting']",43.20%,Medium
3186,Maximum Total Damage With Spell Casting,"['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Dynamic Programming', 'Sorting', 'Counting']",26.70%,Medium
3187,Peaks in Array,"['Array', 'Binary Indexed Tree', 'Segment Tree']",27.40%,Hard
3188,Find Top Scoring Students II,['Database'],38.50%,Hard
3189,Minimum Moves to Get a Peaceful Board,"['Array', 'Greedy', 'Sorting']",76.90%,Medium
3190,Find Minimum Operations to Make All Elements Divisible by Three,"['Array', 'Math']",90.00%,Easy
3191,Minimum Operations to Make Binary Array Elements Equal to One I,"['Array', 'Bit Manipulation', 'Queue', 'Sliding Window', 'Prefix Sum']",71.00%,Medium
3192,Minimum Operations to Make Binary Array Elements Equal to One II,"['Array', 'Dynamic Programming', 'Greedy']",65.50%,Medium
3193,Count the Number of Inversions,"['Array', 'Dynamic Programming']",34.10%,Hard
3194,Minimum Average of Smallest and Largest Elements,"['Array', 'Two Pointers', 'Sorting']",85.50%,Easy
3195,Find the Minimum Area to Cover All Ones I,"['Array', 'Matrix']",73.80%,Medium
3196,Maximize Total Cost of Alternating Subarrays,"['Array', 'Dynamic Programming']",28.80%,Medium
3197,Find the Minimum Area to Cover All Ones II,"['Array', 'Matrix', 'Enumeration']",38.10%,Hard
3198,Find Cities in Each State,['Database'],83.20%,Easy
3199,Count Triplets with Even XOR Set Bits I,"['Array', 'Bit Manipulation']",84.40%,Easy
3200,Maximum Height of a Triangle,"['Array', 'Enumeration']",43.00%,Easy
3201,Find the Maximum Length of Valid Subsequence I,"['Array', 'Dynamic Programming']",38.20%,Medium
3202,Find the Maximum Length of Valid Subsequence II,"['Array', 'Dynamic Programming']",39.90%,Medium
3203,Find Minimum Diameter After Merging Two Trees,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Graph']",36.20%,Hard
3204,Bitwise User Permissions Analysis,['Database'],94.10%,Medium
3205,Maximum Array Hopping Score I,"['Array', 'Dynamic Programming']",79.90%,Medium
3206,Alternating Groups I,"['Array', 'Sliding Window']",67.30%,Easy
3207,Maximum Points After Enemy Battles,"['Array', 'Greedy']",32.10%,Medium
3208,Alternating Groups II,"['Array', 'Sliding Window']",41.00%,Medium
3209,Number of Subarrays With AND Value of K,"['Array', 'Binary Search', 'Bit Manipulation', 'Segment Tree']",34.50%,Hard
3210,Find the Encrypted String,['String'],69.00%,Easy
3211,Generate Binary Strings Without Adjacent Zeros,"['String', 'Backtracking', 'Bit Manipulation']",86.70%,Medium
3212,Count Submatrices With Equal Frequency of X and Y,"['Array', 'Matrix', 'Prefix Sum']",52.30%,Medium
3213,Construct String with Minimum Cost,"['Array', 'String', 'Dynamic Programming', 'Suffix Array']",19.90%,Hard
3214,Year on Year Growth Rate,['Database'],51.70%,Hard
3215,Count Triplets with Even XOR Set Bits II,"['Array', 'Bit Manipulation']",72.80%,Medium
3216,Lexicographically Smallest String After a Swap,"['String', 'Greedy']",54.00%,Easy
3217,Delete Nodes From Linked List Present in Array,"['Array', 'Hash Table', 'Linked List']",69.00%,Medium
3218,Minimum Cost for Cutting Cake I,"['Array', 'Dynamic Programming', 'Greedy', 'Sorting']",58.20%,Medium
3219,Minimum Cost for Cutting Cake II,"['Array', 'Greedy', 'Sorting']",56.20%,Hard
3220,Odd and Even Transactions,['Database'],69.70%,Medium
3221,Maximum Array Hopping Score II,"['Array', 'Stack', 'Greedy']",66.70%,Medium
3222,Find the Winning Player in Coin Game,"['Math', 'Simulation', 'Game Theory']",51.90%,Easy
3223,Minimum Length of String After Operations,"['Hash Table', 'String', 'Counting']",55.50%,Medium
3224,Minimum Array Changes to Make Differences Equal,"['Array', 'Hash Table', 'Prefix Sum']",23.20%,Medium
3225,Maximum Score From Grid Operations,"['Array', 'Dynamic Programming', 'Matrix', 'Prefix Sum']",28.90%,Hard
3226,Number of Bit Changes to Make Two Integers Equal,['Bit Manipulation'],64.90%,Easy
3227,Vowels Game in a String,"['Math', 'String', 'Brainteaser', 'Game Theory']",63.10%,Medium
3228,Maximum Number of Operations to Move Ones to the End,"['String', 'Greedy', 'Counting']",54.20%,Medium
3229,Minimum Operations to Make Array Equal to Target,"['Array', 'Dynamic Programming', 'Stack', 'Greedy', 'Monotonic Stack']",39.00%,Hard
3230,Customer Purchasing Behavior Analysis,['Database'],37.60%,Medium
3231,Minimum Number of Increasing Subsequence to Be Removed,"['Array', 'Binary Search']",54.90%,Hard
3232,Find if Digit Game Can Be Won,"['Array', 'Math']",83.30%,Easy
3233,Find the Count of Numbers Which Are Not Special,"['Array', 'Math', 'Number Theory']",26.80%,Medium
3234,Count the Number of Substrings With Dominant Ones,"['String', 'Sliding Window', 'Enumeration']",16.20%,Medium
3235,Check if the Rectangle Corner Is Reachable,"['Array', 'Math', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Geometry']",27.60%,Hard
3236,CEO Subordinate Hierarchy,['Database'],73.80%,Hard
3237,Alt and Tab Simulation,"['Array', 'Hash Table', 'Simulation']",77.40%,Medium
3238,Find the Number of Winning Players,"['Array', 'Hash Table', 'Counting']",61.40%,Easy
3239,Minimum Number of Flips to Make Binary Grid Palindromic I,"['Array', 'Two Pointers', 'Matrix']",78.30%,Medium
3240,Minimum Number of Flips to Make Binary Grid Palindromic II,"['Array', 'Two Pointers', 'Matrix']",23.40%,Medium
3241,Time Taken to Mark All Nodes,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Graph']",25.00%,Hard
3242,Design Neighbor Sum Service,"['Array', 'Hash Table', 'Design', 'Matrix', 'Simulation']",83.10%,Easy
3243,Shortest Distance After Road Addition Queries I,"['Array', 'Breadth-First Search', 'Graph']",47.50%,Medium
3244,Shortest Distance After Road Addition Queries II,"['Array', 'Greedy', 'Graph', 'Ordered Set']",23.90%,Hard
3245,Alternating Groups III,"['Array', 'Binary Indexed Tree']",14.80%,Hard
3246,Premier League Table Ranking,['Database'],84.10%,Easy
3247,Number of Subsequences with Odd Sum,"['Array', 'Math']",53.50%,Medium
3248,Snake in Matrix,"['Array', 'String', 'Simulation']",82.50%,Easy
3249,Count the Number of Good Nodes,"['Tree', 'Depth-First Search']",55.70%,Medium
3250,Find the Count of Monotonic Pairs I,"['Array', 'Math', 'Dynamic Programming', 'Combinatorics', 'Prefix Sum']",46.20%,Hard
3251,Find the Count of Monotonic Pairs II,"['Array', 'Math', 'Dynamic Programming', 'Combinatorics', 'Prefix Sum']",22.90%,Hard
3252,Premier League Table Ranking II,['Database'],57.80%,Medium
3253,Construct String with Minimum Cost (Easy),[],56.60%,Medium
3254,Find the Power of K-Size Subarrays I,"['Array', 'Sliding Window']",53.70%,Medium
3255,Find the Power of K-Size Subarrays II,"['Array', 'Sliding Window']",26.80%,Medium
3256,Maximum Value Sum by Placing Three Rooks I,"['Array', 'Dynamic Programming', 'Matrix', 'Enumeration']",14.50%,Hard
3257,Maximum Value Sum by Placing Three Rooks II,"['Array', 'Dynamic Programming', 'Matrix', 'Enumeration']",27.80%,Hard
3258,Count Substrings That Satisfy K-Constraint I,"['String', 'Sliding Window']",80.20%,Easy
3259,Maximum Energy Boost From Two Drinks,"['Array', 'Dynamic Programming']",49.10%,Medium
3260,Find the Largest Palindrome Divisible by K,"['Math', 'String', 'Dynamic Programming', 'Greedy', 'Number Theory']",14.80%,Hard
3261,Count Substrings That Satisfy K-Constraint II,"['Array', 'String', 'Binary Search', 'Sliding Window', 'Prefix Sum']",21.60%,Hard
3262,Find Overlapping Shifts,['Database'],61.10%,Medium
3263,Convert Doubly Linked List to Array I,"['Array', 'Linked List', 'Doubly-Linked List']",95.70%,Easy
3264,Final Array State After K Multiplication Operations I,"['Array', 'Math', 'Heap (Priority Queue)', 'Simulation']",81.80%,Easy
3265,Count Almost Equal Pairs I,"['Array', 'Hash Table', 'Sorting', 'Counting', 'Enumeration']",37.10%,Medium
3266,Final Array State After K Multiplication Operations II,"['Array', 'Heap (Priority Queue)', 'Simulation']",10.40%,Hard
3267,Count Almost Equal Pairs II,"['Array', 'Hash Table', 'Sorting', 'Counting', 'Enumeration']",20.90%,Hard
3268,Find Overlapping Shifts II,['Database'],73.40%,Hard
3269,Constructing Two Increasing Arrays,"['Array', 'Dynamic Programming']",64.60%,Hard
3270,Find the Key of the Numbers,['Math'],76.80%,Easy
3271,Hash Divided String,"['String', 'Simulation']",84.60%,Medium
3272,Find the Count of Good Integers,"['Hash Table', 'Math', 'Combinatorics', 'Enumeration']",29.80%,Hard
3273,Minimum Amount of Damage Dealt to Bob,"['Array', 'Greedy', 'Sorting']",38.00%,Hard
3274,Check if Two Chessboard Squares Have the Same Color,"['Math', 'String']",70.10%,Easy
3275,K-th Nearest Obstacle Queries,"['Array', 'Heap (Priority Queue)']",47.80%,Medium
3276,Select Cells in Grid With Maximum Score,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Matrix', 'Bitmask']",13.60%,Hard
3277,Maximum XOR Score Subarray Queries,"['Array', 'Dynamic Programming']",47.20%,Hard
3278,Find Candidates for Data Scientist Position II,['Database'],45.00%,Medium
3279,Maximum Total Area Occupied by Pistons,"['Array', 'Hash Table', 'String']",55.90%,Hard
3280,Convert Date to Binary,"['Math', 'String']",88.40%,Easy
3281,Maximize Score of Numbers in Ranges,"['Array', 'Binary Search', 'Greedy', 'Sorting']",34.10%,Medium
3282,Reach End of Array With Max Score,"['Array', 'Greedy']",31.40%,Medium
3283,Maximum Number of Moves to Kill All Pawns,"['Array', 'Math', 'Bit Manipulation', 'Breadth-First Search', 'Game Theory', 'Bitmask']",32.70%,Hard
3284,Sum of Consecutive Subarrays,"['Array', 'Two Pointers']",49.20%,Medium
3285,Find Indices of Stable Mountains,['Array'],86.90%,Easy
3286,Find a Safe Walk Through a Grid,"['Array', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",28.20%,Medium
3287,Find the Maximum Sequence Value of Array,"['Array', 'Dynamic Programming', 'Bit Manipulation']",16.30%,Hard
3288,Length of the Longest Increasing Path,"['Array', 'Binary Search', 'Sorting']",16.20%,Hard
3289,The Two Sneaky Numbers of Digitville,"['Array', 'Hash Table', 'Math']",89.10%,Easy
3290,Maximum Multiplication Score,"['Array', 'Dynamic Programming']",41.30%,Medium
3291,Minimum Number of Valid Strings to Form Target I,"['Array', 'String', 'Binary Search', 'Dynamic Programming', 'Trie', 'Segment Tree', 'Rolling Hash', 'String Matching', 'Hash Function']",18.50%,Medium
3292,Minimum Number of Valid Strings to Form Target II,"['Array', 'String', 'Binary Search', 'Dynamic Programming', 'Segment Tree', 'Rolling Hash', 'String Matching', 'Hash Function']",16.70%,Hard
3293,Calculate Product Final Price,['Database'],76.30%,Medium
3294,Convert Doubly Linked List to Array II,"['Array', 'Linked List', 'Doubly-Linked List']",81.80%,Medium
3295,Report Spam Message,"['Array', 'Hash Table', 'String']",47.30%,Medium
3296,Minimum Number of Seconds to Make Mountain Height Zero,"['Array', 'Math', 'Binary Search', 'Greedy', 'Heap (Priority Queue)']",35.20%,Medium
3297,Count Substrings That Can Be Rearranged to Contain a String I,"['Hash Table', 'String', 'Sliding Window']",41.40%,Medium
3298,Count Substrings That Can Be Rearranged to Contain a String II,"['Hash Table', 'String', 'Sliding Window']",60.20%,Hard
3299,Sum of Consecutive Subsequences,"['Array', 'Hash Table']",49.10%,Hard
3300,Minimum Element After Replacement With Digit Sum,"['Array', 'Math']",83.60%,Easy
3301,Maximize the Total Height of Unique Towers,"['Array', 'Greedy', 'Sorting']",35.70%,Medium
3302,Find the Lexicographically Smallest Valid Sequence,"['Two Pointers', 'String', 'Dynamic Programming', 'Greedy']",18.90%,Medium
3303,Find the Occurrence of First Almost Equal Substring,"['String', 'String Matching']",11.60%,Hard
3304,Find the K-th Character in String Game I,"['Math', 'Bit Manipulation', 'Recursion', 'Simulation']",71.60%,Easy
3305,Count of Substrings Containing Every Vowel and K Consonants I,"['Hash Table', 'String', 'Sliding Window']",40.40%,Medium
3306,Count of Substrings Containing Every Vowel and K Consonants II,"['Hash Table', 'String', 'Sliding Window']",21.00%,Medium
3307,Find the K-th Character in String Game II,"['Math', 'Bit Manipulation', 'Recursion']",29.90%,Hard
3308,Find Top Performing Driver,['Database'],52.60%,Medium
3309,Maximum Possible Number by Binary Concatenation,"['Array', 'Bit Manipulation', 'Enumeration']",65.60%,Medium
3310,Remove Methods From Project,"['Depth-First Search', 'Breadth-First Search', 'Graph']",50.90%,Medium
3311,Construct 2D Grid Matching Graph Layout,"['Array', 'Hash Table', 'Graph', 'Matrix']",30.90%,Hard
3312,Sorted GCD Pair Queries,"['Array', 'Hash Table', 'Math', 'Binary Search', 'Combinatorics', 'Counting', 'Number Theory', 'Prefix Sum']",18.40%,Hard
3313,Find the Last Marked Nodes in Tree,"['Tree', 'Depth-First Search']",71.90%,Hard
3314,Construct the Minimum Bitwise Array I,"['Array', 'Bit Manipulation']",74.60%,Easy
3315,Construct the Minimum Bitwise Array II,"['Array', 'Bit Manipulation']",34.10%,Medium
3316,Find Maximum Removals From Source String,"['Array', 'Hash Table', 'Two Pointers', 'String', 'Dynamic Programming']",37.20%,Medium
3317,Find the Number of Possible Ways for an Event,"['Math', 'Dynamic Programming', 'Combinatorics']",37.90%,Hard
3318,Find X-Sum of All K-Long Subarrays I,"['Array', 'Hash Table', 'Sliding Window', 'Heap (Priority Queue)']",63.20%,Easy
3319,K-th Largest Perfect Subtree Size in Binary Tree,"['Tree', 'Depth-First Search', 'Sorting', 'Binary Tree']",62.10%,Medium
3320,Count The Number of Winning Sequences,"['String', 'Dynamic Programming']",32.20%,Hard
3321,Find X-Sum of All K-Long Subarrays II,"['Array', 'Hash Table', 'Sliding Window', 'Heap (Priority Queue)']",14.60%,Hard
3322,Premier League Table Ranking III,['Database'],76.80%,Medium
3323,Minimize Connected Groups by Inserting Interval,"['Array', 'Binary Search']",60.50%,Medium
3324,Find the Sequence of Strings Appeared on the Screen,"['String', 'Simulation']",79.90%,Medium
3325,Count Substrings With K-Frequency Characters I,"['Hash Table', 'String', 'Sliding Window']",54.80%,Medium
3326,Minimum Division Operations to Make Array Non Decreasing,"['Array', 'Math', 'Greedy', 'Number Theory']",28.10%,Medium
3327,Check if DFS Strings Are Palindromes,"['Array', 'Hash Table', 'String', 'Tree', 'Depth-First Search', 'Hash Function']",18.90%,Hard
3328,Find Cities in Each State II,['Database'],81.80%,Medium
3329,Count Substrings With K-Frequency Characters II,"['Hash Table', 'String', 'Sliding Window']",79.70%,Hard
3330,Find the Original Typed String I,['String'],54.50%,Easy
3331,Find Subtree Sizes After Changes,"['Array', 'Hash Table', 'String', 'Tree', 'Depth-First Search']",61.60%,Medium
3332,Maximum Points Tourist Can Earn,"['Array', 'Dynamic Programming', 'Matrix']",47.40%,Medium
3333,Find the Original Typed String II,"['String', 'Dynamic Programming', 'Prefix Sum']",13.30%,Hard
3334,Find the Maximum Factor Score of Array,"['Array', 'Math', 'Number Theory']",39.90%,Medium
3335,Total Characters in String After Transformations I,"['Hash Table', 'Math', 'String', 'Dynamic Programming', 'Counting']",24.90%,Medium
3336,Find the Number of Subsequences With Equal GCD,"['Array', 'Math', 'Dynamic Programming', 'Number Theory']",38.00%,Hard
3337,Total Characters in String After Transformations II,"['Hash Table', 'Math', 'String', 'Dynamic Programming', 'Counting']",31.10%,Hard
3338,Second Highest Salary II,['Database'],96.10%,Medium
3339,Find the Number of K-Even Arrays,['Dynamic Programming'],60.10%,Medium
3340,Check Balanced String,['String'],84.00%,Easy
3341,Find Minimum Time to Reach Last Room I,"['Array', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",35.70%,Medium
3342,Find Minimum Time to Reach Last Room II,"['Array', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",49.80%,Medium
3343,Count Number of Balanced Permutations,"['Math', 'String', 'Dynamic Programming', 'Combinatorics']",16.00%,Hard
3344,Maximum Sized Array,"[]",51.10%,Medium
3345,Smallest Divisible Digit Product I,"['Math', 'Enumeration']",65.00%,Easy
3346,Maximum Frequency of an Element After Performing Operations I,"['Array', 'Binary Search', 'Sliding Window', 'Sorting', 'Prefix Sum']",20.60%,Medium
3347,Maximum Frequency of an Element After Performing Operations II,"['Array', 'Binary Search', 'Sliding Window', 'Sorting', 'Prefix Sum']",39.00%,Hard
3348,Smallest Divisible Digit Product II,"['Math', 'String', 'Backtracking', 'Greedy', 'Number Theory']",9.90%,Hard
3349,Adjacent Increasing Subarrays Detection I,['Array'],39.90%,Easy
3350,Adjacent Increasing Subarrays Detection II,"['Array', 'Binary Search']",41.30%,Medium
3351,Sum of Good Subsequences,"['Array', 'Hash Table', 'Dynamic Programming']",30.00%,Hard
3352,Count K-Reducible Numbers Less Than N,"['Math', 'String', 'Dynamic Programming', 'Combinatorics']",28.80%,Hard
3353,Minimum Total Operations,"[]",63.70%,Easy
3354,Make Array Elements Equal to Zero,"['Array', 'Simulation', 'Prefix Sum']",56.60%,Easy
3355,Zero Array Transformation I,"['Array', 'Prefix Sum']",42.20%,Medium
3356,Zero Array Transformation II,"['Array', 'Binary Search', 'Prefix Sum']",37.10%,Medium
3357,Minimize the Maximum Adjacent Element Difference,"['Array', 'Binary Search', 'Greedy']",15.50%,Hard
3358,Books with NULL Ratings,"[]",90.20%,Easy
3359,Find Sorted Submatrices With Maximum Elements at Most K,"[]",49.50%,Hard
3360,Stone Removal Game,"['Math', 'Simulation']",41.60%,Easy
3361,Shift Distance Between Two Strings,"['Array', 'String', 'Prefix Sum']",53.60%,Medium
3362,Zero Array Transformation III,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Prefix Sum']",25.50%,Medium
3363,Find the Maximum Number of Fruits Collected,"['Array', 'Dynamic Programming', 'Matrix']",41.50%,Hard
3364,Minimum Positive Sum Subarray,"['Array', 'Sliding Window', 'Prefix Sum']",46.60%,Easy
3365,Rearrange K Substrings to Form Target String,"['Hash Table', 'String', 'Sorting']",51.80%,Medium
3366,Minimum Array Sum,"['Array', 'Dynamic Programming']",29.40%,Medium
3367,Maximize Sum of Weights after Edge Removals,"['Dynamic Programming', 'Trie', 'Depth-First Search']",30.00%,Hard
3368,First Letter Capitalization,"[]",88.60%,Hard
3369,Design an Array Statistics Tracker,"[]",34.30%,Hard
3370,Smallest Number With All Set Bits,"['Math', 'Bit Manipulation']",76.50%,Easy
3371,Identify the Largest Outlier in an Array,"['Array', 'Hash Table', 'Counting', 'Enumeration']",32.10%,Medium
3372,Maximize the Number of Target Nodes After Connecting Trees I,"['Tree', 'Depth-First Search', 'Breadth-First Search']",51.00%,Medium
3373,Maximize the Number of Target Nodes After Connecting Trees II,"['Tree', 'Depth-First Search', 'Breadth-First Search']",58.00%,Hard
3374,First Letter Capitalization II,['Database'],77.50%,Hard
3375,Minimum Operations to Make Array Values Equal to K,"['Array', 'Hash Table']",52.90%,Easy
3376,Minimum Time to Break Locks I,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Depth-First Search', 'Bitmask']",30.00%,Medium
3377,Digit Operations to Make Two Integers Equal,"['Math', 'Graph', 'Heap (Priority Queue)', 'Number Theory', 'Shortest Path']",32.90%,Medium
3378,Count Connected Components in LCM Graph,"['Array', 'Hash Table', 'Math', 'Union Find', 'Number Theory']",28.60%,Hard
3379,Transformed Array,"['Array', 'Simulation']",56.80%,Easy
3380,Maximum Area Rectangle With Point Constraints I,"['Array', 'Math', 'Binary Indexed Tree', 'Segment Tree', 'Geometry', 'Sorting', 'Enumeration']",51.00%,Medium
3381,Maximum Subarray Sum With Length Divisible by K,"['Array', 'Hash Table', 'Prefix Sum']",27.80%,Medium
3382,Maximum Area Rectangle With Point Constraints II,"['Array', 'Math', 'Binary Indexed Tree', 'Segment Tree', 'Geometry', 'Sorting']",21.00%,Hard
3383,Minimum Runes to Add to Cast Spell,"[]",43.50%,Hard
3384,Team Dominance by Pass Success,"[]",76.80%,Hard
3385,Minimum Time to Break Locks II,"[]",45.50%,Hard
3386,Button with Longest Push Time,['Array'],40.70%,Easy
3387,Maximize Amount After Two Days of Conversions,"['Array', 'String', 'Depth-First Search', 'Breadth-First Search', 'Graph']",59.20%,Medium
3388,Count Beautiful Splits in an Array,"['Array', 'Dynamic Programming']",15.90%,Medium
3389,Minimum Operations to Make Character Frequencies Equal,"['Hash Table', 'String', 'Dynamic Programming', 'Counting', 'Enumeration']",24.10%,Hard
3390,Longest Team Pass Streak,"[]",42.30%,Hard
3391,Design a 3D Binary Matrix with Efficient Layer Tracking,"[]",66.30%,Medium
3392,Count Subarrays of Length Three With a Condition,['Array'],53.00%,Easy
3393,Count Paths With the Given XOR Value,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Matrix']",39.20%,Medium
3394,Check if Grid can be Cut into Sections,"['Array', 'Sorting']",42.00%,Medium
3395,Subsequences with a Unique Middle Mode I,"['Array', 'Hash Table', 'Math', 'Combinatorics']",17.50%,Hard
3396,Minimum Number of Operations to Make Elements in Array Distinct,"['Array', 'Hash Table']",57.90%,Easy
3397,Maximum Number of Distinct Elements After Operations,"['Array', 'Greedy', 'Sorting']",30.70%,Medium
3398,Smallest Substring With Identical Characters I,"['Array', 'Binary Search', 'Enumeration']",19.00%,Hard
3399,Smallest Substring With Identical Characters II,"['String', 'Binary Search']",44.40%,Hard
3400,Maximum Number of Matching Indices After Right Shifts,"[]",84.30%,Medium
3401,Find Circular Gift Exchange Chains,"[]",54.60%,Hard
3402,Minimum Operations to Make Columns Strictly Increasing,"['Array', 'Greedy', 'Matrix']",73.10%,Easy
3403,Find the Lexicographically Largest String From the Box I,"['Two Pointers', 'String', 'Enumeration']",23.50%,Medium
3404,Count Special Subsequences,"['Array', 'Hash Table', 'Math', 'Enumeration']",26.70%,Medium
3405,Count the Number of Arrays with K Matching Adjacent Elements,"['Math', 'Combinatorics']",37.60%,Hard
3406,Find the Lexicographically Largest String From the Box II,"[]",50.60%,Hard
3407,Substring Matching Pattern,"['String', 'String Matching']",25.90%,Easy
3408,Design Task Manager,"['Hash Table', 'Design', 'Heap (Priority Queue)', 'Ordered Set']",34.00%,Medium
3409,Longest Subsequence With Decreasing Adjacent Difference,"['Array', 'Dynamic Programming']",13.50%,Medium
3410,Maximize Subarray Sum After Removing All Occurrences of One Element,"['Array', 'Dynamic Programming', 'Segment Tree']",19.10%,Hard
3411,Maximum Subarray With Equal Products,"['Array', 'Math', 'Sliding Window', 'Enumeration', 'Number Theory']",45.60%,Easy
3412,Find Mirror Score of a String,"['Hash Table', 'String', 'Stack', 'Simulation']",35.80%,Medium
3413,Maximum Coins From K Consecutive Bags,"['Array', 'Binary Search', 'Greedy', 'Sliding Window', 'Sorting', 'Prefix Sum']",23.20%,Medium
3414,Maximum Score of Non-overlapping Intervals,"['Array', 'Binary Search', 'Dynamic Programming', 'Sorting']",32.30%,Hard
3415,Find Products with Three Consecutive Digits,"[]",81.40%,Easy
3416,Subsequences with a Unique Middle Mode II,"[]",44.00%,Hard
3417,Zigzag Grid Traversal With Skip,"['Array', 'Matrix', 'Simulation']",63.80%,Easy
3418,Maximum Amount of Money Robot Can Earn,"['Array', 'Dynamic Programming', 'Matrix']",29.70%,Medium
3419,Minimize the Maximum Edge Weight of Graph,"['Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Shortest Path']",42.80%,Medium
3420,Count Non-Decreasing Subarrays After K Operations,"['Array', 'Stack', 'Segment Tree', 'Queue', 'Sliding Window', 'Monotonic Stack', 'Monotonic Queue']",20.90%,Hard
3421,Find Students Who Improved,['Database'],49.20%,Medium
3422,Minimum Operations to Make Subarray Elements Equal,"[]",49.80%,Medium
3423,Maximum Difference Between Adjacent Elements in a Circular Array,['Array'],74.40%,Easy
3424,Minimum Cost to Make Arrays Identical,"['Array', 'Greedy', 'Sorting']",36.40%,Medium
3425,Longest Special Path,"['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Sliding Window']",18.90%,Hard
3426,Manhattan Distances of All Arrangements of Pieces,"['Math', 'Combinatorics']",35.40%,Hard
3427,Sum of Variable Length Subarrays,"['Array', 'Prefix Sum']",86.10%,Easy
3428,Maximum and Minimum Sums of at Most Size K Subsequences,"['Array', 'Math', 'Dynamic Programming', 'Sorting', 'Combinatorics']",20.70%,Medium
3429,Paint House IV,"['Array', 'Dynamic Programming']",45.30%,Medium
3430,Maximum and Minimum Sums of at Most Size K Subarrays,"['Array', 'Math', 'Stack', 'Monotonic Stack']",23.40%,Hard
3431,Minimum Unlocked Indices to Sort Nums,"[]",60.40%,Medium
3432,Count Partitions with Even Sum Difference,"['Array', 'Math', 'Prefix Sum']",80.30%,Easy
3433,Count Mentions Per User,"['Array', 'Math', 'Sorting', 'Simulation']",29.90%,Medium
3434,Maximum Frequency After Subarray Operation,"['Array', 'Hash Table', 'Dynamic Programming', 'Greedy', 'Prefix Sum']",23.10%,Medium
3435,Frequencies of Shortest Supersequences,"['Array', 'String', 'Bit Manipulation', 'Graph', 'Topological Sort', 'Enumeration']",23.70%,Hard
3436,Find Valid Emails,['Database'],65.30%,Easy
3438,Permutations III,"['Hash Table', 'String', 'Counting']",61.20%,Easy
3437,Find Valid Pair of Adjacent Digits in String,"[]",85.50%,Medium
3439,Reschedule Meetings for Maximum Free Time I,"['Array', 'Greedy', 'Sliding Window']",30.70%,Medium
3440,Reschedule Meetings for Maximum Free Time II,"['Array', 'Greedy', 'Enumeration']",39.50%,Medium
3441,Minimum Cost Good Caption,"['String', 'Dynamic Programming']",18.10%,Hard
3442,Maximum Difference Between Even and Odd Frequency I,"['Hash Table', 'String', 'Counting']",49.00%,Easy
3443,Maximum Manhattan Distance After K Changes,"['Hash Table', 'Math', 'String', 'Counting']",30.60%,Medium
3444,Minimum Increments for Target Multiples in an Array,"['Array', 'Math', 'Dynamic Programming', 'Bit Manipulation', 'Number Theory', 'Bitmask']",25.10%,Hard
3445,Maximum Difference Between Even and Odd Frequency II,"['String', 'Sliding Window', 'Enumeration', 'Prefix Sum']",18.90%,Hard
3446,Sort Matrix by Diagonals,"['Array', 'Sorting', 'Matrix']",72.30%,Medium
3447,Assign Elements to Groups with Constraints,"['Array', 'Hash Table']",26.70%,Medium
3448,Count Substrings Divisible By Last Digit,"['String', 'Dynamic Programming']",20.30%,Hard
3449,Maximize the Minimum Game Score,"['Array', 'Binary Search', 'Greedy']",23.70%,Hard
3450,Maximum Students on a Single Bench,"[]",85.80%,Easy
3451,Find Invalid IP Addresses,['Database'],65.50%,Hard
3452,Sum of Good Numbers,['Array'],70.20%,Easy
3453,Separate Squares I,"['Array', 'Binary Search']",35.20%,Medium
3454,Separate Squares II,"['Array', 'Binary Search', 'Segment Tree', 'Line Sweep']",17.10%,Hard
3455,Shortest Matching Substring,"['Two Pointers', 'String', 'Binary Search', 'String Matching']",23.30%,Hard
3456,Find Special Substring of Length K,['String'],35.40%,Easy
3457,Eat Pizzas!,"['Array', 'Greedy', 'Sorting']",31.80%,Medium
3458,Select K Disjoint Special Substrings,"['Hash Table', 'String', 'Dynamic Programming', 'Greedy', 'Sorting']",17.30%,Medium
3459,Length of Longest V-Shaped Diagonal Segment,"['Array', 'Dynamic Programming', 'Memoization', 'Matrix']",38.60%,Hard
3460,Longest Common Prefix After at Most One Removal,"[]",68.40%,Easy
3461,Check If Digits Are Equal in String After Operations I,"['Math', 'String', 'Simulation', 'Combinatorics', 'Number Theory']",79.60%,Easy
3462,Maximum Sum With at Most K Elements,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",58.60%,Medium
3463,Check If Digits Are Equal in String After Operations II,"['Math', 'String', 'Combinatorics', 'Number Theory']",8.50%,Hard
3464,Maximize the Distance Between Points on a Square,"['Array', 'Binary Search', 'Greedy']",15.60%,Hard
3465,Find Products with Valid Serial Numbers,['Database'],84.80%,Easy